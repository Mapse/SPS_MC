//*****************************************************************************
// ---- method called for each event to check good minimum bias trigger ---- //
//*****************************************************************************

bool NanoAnalyzer::providesGoodMinBiasTrigger(const edm::Event& iEvent) {

// *************************************************************
//------------------ get and check trigger info ----------------
// *************************************************************

#ifndef CMSSW7plus 
                edm::Handle<edm::TriggerResults> triggerResults;
                edm::Handle<edm::TriggerResults> triggerResultsHandle_;
                edm::InputTag trigResultsTag("TriggerResults","","HLT"); 
                iEvent.getByLabel(trigResultsTag,triggerResultsHandle_);
#endif
#ifdef CMSSW7plus
  //EDGetTokenT<edm::TriggerResults> trigTkn;
  //trigTkn = consumes< edm::TriggerResults>(edm::InputTag("TriggerResults","","HLT"));
  edm::Handle<edm::TriggerResults> triggerResultsHandle_;  
  iEvent.getByToken(trigTkn, triggerResultsHandle_);  
#endif

                // check whether trigger info was obtained successfully
                if (!triggerResultsHandle_.isValid()) {
		  std::cout << "Nano::goodTrigger: Error in getting TriggerResults product from Event!" << std::endl;
                  return false;
                }

                // get trigger names
                const edm::TriggerNames& trigNames = iEvent.triggerNames(*triggerResultsHandle_); 

//                // dump trigger information including accept flag
//                for(unsigned i= 0; i<trigNames.size(); i++) { 
//                  if (triggerResultsHandle_->accept(i)==1){
//                    std::cout<<" Trigger name "<<trigNames.triggerName(i)<<", Accepted = ";
//                    std::cout<<triggerResultsHandle_->accept(i)<<std::endl;
//      	    }
//                } 

                // Structure of ZeroBias, MinimumBias, Random, Monitor, and dedicated Physics triggers in 2010:
                // --------------------------------------------------------------------------------------------
                // Commissioning10,Runs 132000-136000: ZeroBias, RandomTriggers and MinimumBias only; 
                //          (rather 135600)            RandomTriggers RAW only (not public)
                //                                     MinimumBias contains all physics triggers 
                //                                     (no "Monitor","Commissioning",...)
                //                                     from 135XXX in Run A (no JSON)?
                // Run A  Runs 136000-142000 (A1):     ZeroBias, RandomTriggers, Minimumbias and dedicated Physics
                //          (rather 141900)            i.e. other Physics triggers spawned off MinimumBias
                //                                     RandomTriggers RAW only (not public)
                // Run A  Runs 142000-145000 (A2):     RandomTriggers, MinimumBias and dedicated Physics
                //                                     i.e. ZeroBias integrated into MinimumBias
                //                                     RandomTriggers RAW only (not public)
                // Run B  Runs 145000-150000:          MinimumBias and dedicated Physics
                //                                     i.e. RandomTriggers integrated into MinimumBias
                //                                     ZeroBias public but not meaningful (-> use MinimumBias) 

                // Be aware that, when triggers overlap, the flags can only give information about one of them.
                // Despite the attempt to have the "more important" triggers take precedence, 
                // in such cases, either the flags should be used in 'or' mode, or the original trigger bits 
                // should be used. 

                // Physically relevant ZeroBias datasets for Run 1 are available
                // in part of 2010 A only (run < 142000)
                    // BPTX based 
                    // beam from one side only -> Background (only "PlusOnly" OR "MinusOnly" fire -> exclusive) 
		//            HLT_L1_BPTX_MinusOnly                 ZeroBiasFlag -1
                //            HLT_L1_BPTX_PlusOnly
                    // "or" of beam from either side -> ZeroBias only if none of the above fired in addition
                //            HLT_L1_BPTX                           ZeroBiasFlag  0
                    // real ZeroBias ("and" of BPTX positive and negative?)
                //            HLT_ZeroBias                          ZeroBiasFlag  1

                // Random triggers were recorded in separate RandomTriggers dataset up to run 145000 
                //           (preserved as RAW only, not part of release)
                //            HLT_Random                            ZeroBiasFlag  2

		// There are four categories of triggers in the MinimumBias dataset of 2010 Run B,
                // which includes ZeroBias (flags see above)(%-ntages refer to Golden JSON):
                //
                // 1) ~60% Zerobias-like triggers (some beam presence requirements or random triggers)
                //            HLT_L1_BPTX_MinusOnly (empty or beam gas)  ZeroBiasFlag -1
                //            HLT_L1_BPTX_PlusOnly  (empty or beam gas)  ZeroBiasFlag -1
                //            HLT_L1_BPTX           ("or" & not "only")  ZeroBiasFlag  0
                //            HLT_ZeroBias          ("and")              ZeroBiasFlag  1
                //            HLT_Random                                 ZeroBiasFlag  2
                //       
                // 2) ~10% large track multiplicity triggers (three subcategories: >75, 85, 100 tracks)
                //    for "ridge" studies
                //            HLT_PixelTracks_Multiplicity100         MinBiasMult 100
                //            HLT_PixelTracks_Multiplicity85          MinBiasMult  85
                //            HLT_PixelTracks_Multiplicity70          MinBiasMult  70
                // 2a)     Beam scintillator (BSC) based high multiplicity trigger (all segments of BSC fire)         
                //            HLT_L1Tech_BSC_HighMultiplicity         MinBiasMult  50  (lots without Golden JSON)
                // 
                // 3) ~28% triggers for exotic stopped High mass Stable Charged Particles (out of time, out of beam(?))
                //            HLT_StoppedHSCP35_v3                    MinBiasMult -35
                //            HLT_StoppedHSCP20_v3                    MinBiasMult -20
                //            HLT_StoppedHSCP_v2       *** added ***  MinBiasMult -19
                //            HLT_StoppedHSCP                         MinBiasMult -19
                //
                //    also useful for exclusive diffraction?? (check for J/psis)
                //
                // 4) ~2%, a technical "muon" (RPC based) trigger
                //            HLT_L1Tech_RPC_TTU_RBst1_collisions     MinBiasMult -40

                // In "non-Golden" runs, one can also find
                //            HLT_L1Tech_BSC_minBias_OR               MinBiasFlag -3
                //   (could this be used as diffractive trigger?? also -4)         

                // In 2010 MinimumBias run A, one can find (in addition to the ZeroBias triggers for Run>142000):
                //             
                // 1)      Minimum-Bias-like:
                //            HLT_L1Tech_BSC_minBias                MinBiasFlag 1  (-4 for runs 141900-149400)
                //            HLT_MinBiasBSC                        MinBiasFlag 2
                //            HLT_L1Tech_HCAL_HF                    MinBiasFlag 3
                //            HLT_ZeroBiasPixel_SingleTrack         MinBiasMult 1
                //            HLT_L1_BscMinBiasOR_BptxPlusORMinus   MinBiasFlag 0
                //         with no beam
                //            HLT_MinBiasBSC_NoBPTX                 MinBiasFlag -1
                // 2)         - 
                // 3)         HLT_StoppedHSCP_8E29
                // 4)         HLT_L1Tech_BSC_halo_forPhysicsBackground
                // 5)  multi-vertex triggers, moved to Commissioning dataset in Run B
                //            HLT_MultiVertex6                      MinBiasMult  -6
                //            HLT_MultiVertex8_L1ETT60              MinBiasMult -60
                // 6)  isolated track triggers (frequently fire GoodMuTrigger or GoodElectronTrigger)       
                //            HLT_IsoTrackHB
                //            HLT_IsoTrackHB_8E29
                //            HLT_IsoTrackHE
                //            HLT_IsoTrackHE_8E29
                //  on nonJSON events only, one can also find, for run numbers <136000 *** to be reconsidered ***
                //            HLT_L1JEt10U(_noBPTX)                 MinBiasMult=-10
                //            HLT_QuadJet15U                        MinBiasMult=-15
                //            HLT_Activity_L1A                      MinBiasMult=0 

		// There are four categories of triggers in the Commissioning dataset of Run B:
                //
                // 1) ~30% "almost" Minimum-bias-like trigger (some tagger requirements), is XOR OK??
                //            HLT_L1_BptxXOR_BscMinBiasOR           MinBiasFlag -2? 
                //
                // 2) ~10% multi-vertex triggers with or without energy threshold (biased)
                //            HLT_MultiVertex6_v2      *** added ***      MinBiasMult  -6
                //            HLT_MultiVertex6                            MinBiasMult  -6
                //            HLT_MultiVertex8_L1ETT60_v2  *** added ***  MinBiasMult -60
                //            HLT_MultiVertex8_L1ETT60                    MinBiasMult -60
                //
                // 3) ~30% isolated track triggers with some L1 jet (e.g. for taus, exclusive final states?)
                //            HLT_IsoTrackHB_v2                           MinBiasMult -1
                //            HLT_IsoTrackHB                              MinBiasMult -1
                //            HLT_IsoTrackHE_v3                           MinBiasMult -1
                //            HLT_IsoTrackHE_v2                           MinBiasMult -1 
                //            HLT_IsoTrackHE                              MinBiasMult -1
                //
                // 4) ~20% technical "muon" (DT or CSC based) triggers
                //            HLT_Activity_CSC                            MinBiasMult -41
                //            HLT_Activity_DT                             MinBiasMult -42
                //            HLT_Activity_DT_Tuned                       MinBiasMult -42

                // on 2011 data and 2015 MC sets:
                //            HLT_Physics                                 MinBiasFlag -5

                // The ParkingL1MinumumBias dataset (2017) has essentially one trigger:
                //            HLT_L1MinimumBiasHF_OR_part0_v2             MinBiasFlag 4   

                // The ParkingHIZeroBias dataset (2017) has essentially one trigger:
                //            HLT_HIZeroBias_part3_v6                     ZeroBiasFlag 1

                // check ZeroBias, MinBias and Commissioning triggers
                ZeroBiasTrig = false;
                MinimumBiasTrig = false;
                CommissioningTrig = false;
                GoodMinimumBiasTrig = false;
                GoodMuMinimumBiasTrig = false;

                ZeroBiasFlag = -10; // -2 = no beam (AntiBPTX, e.g. with L1MuOpen)
                                    // -1 = one-sided beam (BPTX minusOnly or PlusOnly), should be background
                                    //  0 = two-sided beam (BPTX plus or minus and not one-sided), 
                                    //  1 = ZeroBias (BPTX plus and minus), 
                                    //  2 = Random
                                    //  3 = "L1 activity" trigger in conjunction with BPTX (not real ZeroBias)
                                    //      e.g. Activity_L1A, L1SingleEG2, CSCBeamHalo, L1MuOpen (Run>141882)
                                    //  4 = same as 3, with ZeroBias instead of BPTX (Run<141882) (was 3 on JSON5)
                                    //      *** recheck the last two ***
                                    //  note that some of the flags are also filled from the MinimumBias sample  

                for(unsigned i= 0; i<trigNames.size(); i++) { 
                  if (triggerResultsHandle_->accept(i)==1){

                    // check ZeroBias Triggers  --- have all been checked for real occurrence in ZeroBias sample :-)
                    bool ZeroBiasTrigThis = true;

                    // BPTX based, 2010 Run A
                    // "or" of either-sided beam
		    if (iEvent.run()<141883 && trigNames.triggerName(i)=="HLT_L1_BPTX") {if (ZeroBiasFlag==-10) ZeroBiasFlag=0;}
		    else if ((iEvent.run()>141882 && iEvent.run()<145000) && (iEvent.run()==142014 || iEvent.run()==142547 || iEvent.run()==142622 || iEvent.run()==142623 || iEvent.run()==142626 || (iEvent.run()>142709 && iEvent.run()<142712) || iEvent.run()==142863 || iEvent.run()==142947 || iEvent.run()==143999 || iEvent.run()==144104) && trigNames.triggerName(i)=="HLT_L1_BPTX") {if (ZeroBiasFlag==-10) ZeroBiasFlag=3;}
                    // supersede flag if single sided beam only (beam-gas background?), these are never unique
		    else if ((iEvent.run()<141883 || iEvent.run()==142014 || iEvent.run()==142547 || iEvent.run()==142622 || iEvent.run()==142623 || iEvent.run()==142626 || (iEvent.run()>142709 && iEvent.run()<142712) || iEvent.run()==142863 || iEvent.run()==142947 || iEvent.run()==143999 || iEvent.run()==144104) && trigNames.triggerName(i)=="HLT_L1_BPTX_MinusOnly") {ZeroBiasFlag=-1;}
		    else if ((iEvent.run()<141883 || iEvent.run()==142014 || iEvent.run()==142547 || iEvent.run()==142622 || iEvent.run()==142623 || iEvent.run()==142626 || (iEvent.run()>142709 && iEvent.run()<142712) || iEvent.run()==142863 || iEvent.run()==142947 || iEvent.run()==143999 || iEvent.run()==144104) && trigNames.triggerName(i)=="HLT_L1_BPTX_PlusOnly")  {ZeroBiasFlag=-1;}
                    // actual ZeroBias (runs up to 141882 only)
		    else if (iEvent.run()<141883 && trigNames.triggerName(i)=="HLT_ZeroBias") {if (ZeroBiasFlag<1) ZeroBiasFlag=1;}
                    // pseudo ZeroBias (non-JSON runs in the range 141883 - 145000), always accompanied by triggers like Activity_L1A (HCAL),
                    // L1SingleEG2 (ECAL), beam halo or other MinimumBias Triggers, non-JSON runs 141988, 142006,142007,142008,142014,142027(00-34?), 142051, 142058, 142121, 142251, 142547,142549(38-56?), 142618,142619,142622,142623,142626(559-656) 142710,142711,142772,142778,142796,142857,142863(700-900?), 142947, 142963, 142983, 143011,143101,143137,143170(009-178?), 143218, 143282, 143634, 143715, 143932,143937,143939(30-53?), 143996,143999(962-010?), 144043,144059,144073,144075,144077-78(12-85?), 144104,144108(090-111?)
		    else if ((iEvent.run()>141881 && iEvent.run()<145000) && ( iEvent.run()==141988 || (iEvent.run()>142005 && iEvent.run()<142015) || iEvent.run()==142027 || iEvent.run()==142051 || iEvent.run()==142058 || iEvent.run()==142121 || iEvent.run()==142251 || (iEvent.run()>142546 && iEvent.run()<142550) || (iEvent.run()>142617 && iEvent.run()<142627) || (iEvent.run()>142709 && iEvent.run()<142712) || iEvent.run()==142772 || iEvent.run()==142778 || iEvent.run()==142796 || iEvent.run()==142857 || iEvent.run()==142863 || iEvent.run()==142947 || iEvent.run()==142963 || iEvent.run()==142983 || iEvent.run()==143011 || iEvent.run()==143101 || iEvent.run()==143137 || iEvent.run()==143170 || iEvent.run()==143218 || iEvent.run()==143282 || iEvent.run()==143634 || iEvent.run()==143715 || iEvent.run()==143794 || (iEvent.run()>143931 && iEvent.run()<143940) || (iEvent.run()>143995 && iEvent.run()<144000) || iEvent.run()==144034 || iEvent.run()==144059 ||(iEvent.run()>144072 && iEvent.run()<144079) || (iEvent.run()>144103 && iEvent.run()<144109) ) && trigNames.triggerName(i)=="HLT_ZeroBias") {if (ZeroBiasFlag<1 || ZeroBiasFlag==3) ZeroBiasFlag=4;}
                    // Random triggers in Random dataset for 2010 Run A 
                    //else if (iEvent.run()<145000 && trigNames.triggerName(i)=="HLT_Random")   {if (ZeroBiasFlag<1) ZeroBiasFlag=2;}
                    // for 2016 ZeroBias data
		    else if (trigNames.triggerName(i)=="HLT_ZeroBias_FirstCollisionAfterAbortGap_v3")  ZeroBiasFlag=1;
                    // 2017 HIZeroBias
		    else if (trigNames.triggerName(i)=="HLT_HIZeroBias_part3_v6") {if (ZeroBiasFlag<1) ZeroBiasFlag=1;}
                    else  ZeroBiasTrigThis = false;
              

                    // check and set whether trigger for ZeroBias dataset has fired
                    if (ZeroBiasTrigThis) ZeroBiasTrig = true;


                    // check Minimum Bias triggers    ---  have all been checked for real occurrence in MinimumBias sample :-)
                    //                                    the ones which are commented out without comment have been listed but do not occur
                    //                                    as unique triggers 
                    bool MinimumBiasTrigThis = true;
                    //
                    // Stopped High mass Stable Charged Particles (exotics); don't use if unique.
                    // These triggers ask interactions to be out-of-time, and off-beam, with a veto on BPTX
                    // (the additions 20 and 35 actually indicate jet energy thresholds, not multiplicities) 
                    //    https://twiki.cern.ch/twiki/bin/view/CMS/StoppedHSCP
                    if      (trigNames.triggerName(i)=="HLT_StoppedHSCP35_v3") {if (MinBiasMult<-35) MinBiasMult=-35;}
                    else if (trigNames.triggerName(i)=="HLT_StoppedHSCP20_v3") {if (MinBiasMult<-20) MinBiasMult=-20;}
		    else if (trigNames.triggerName(i)=="HLT_StoppedHSCP_8E29") {if (MinBiasMult<-19) MinBiasMult=-19;}
		    else if (trigNames.triggerName(i)=="HLT_StoppedHSCP_v2")   {if (MinBiasMult<-19) MinBiasMult=-19;}
		    else if (trigNames.triggerName(i)=="HLT_StoppedHSCP")      {if (MinBiasMult<-19) MinBiasMult=-19;}
                    //
                    // with cuts on (in time) ECAL clusters, don't use if unique (NoBPTX means no beam)
                    // before activation, beware of overlap with other samples! 
		    // else if (trigNames.triggerName(i)=="HLT_L1SingleEG1")                  {if (MinBiasMult<-3) MinBiasMult=-3;}
		    // else if (trigNames.triggerName(i)=="HLT_L1SingleEG1_NoBPTX")           {MinBiasMult=-11;}
		    // else if (trigNames.triggerName(i)=="HLT_L1SingleEG2_NoBPTX")           {MinBiasMult=-12;}
		    // else if (trigNames.triggerName(i)=="HLT_L1SingleEG5_NoBPTX")           {MinBiasMult=-15;}
		    // else if (trigNames.triggerName(i)=="HLT_DoublePhoton5_eeRes_L1R")      {if (MinBiasMult<-5) MinBiasMult=-5;}
		    // else if (trigNames.triggerName(i)=="HLT_EgammaSuperClusterOnly_L1R")   {if (MinBiasMult<-8) MinBiasMult=-8;}
		    // else if (trigNames.triggerName(i)=="HLT_L1SingleEG10_NoBPTX")          {MinBiasMult=-10;}  <- *** beware, already used
                    // not really minimum bias (pt/ET cuts), muon trigger don't use if unique
		    // else if (trigNames.triggerName(i)=="HLT_MinBiasPixel_DoubleIsoTrack5") {if (MinBiasMult<-25)MinBiasMult=-25;}
                    else if (iEvent.run()<145000 && trigNames.triggerName(i)=="HLT_MultiVertex8_L1ETT60") {if (MinBiasMult<-60)MinBiasMult=-60;}
		                                       // in Commissioning for Run B
                    // RPC based loose low pt muon trigger, don't use for MinBias if unique, can use as muon trigger (see there)
                    //     https://twiki.cern.ch/twiki/bin/view/CMS/L1TechnicalTriggerBits_RPC
                    else if (trigNames.triggerName(i)=="HLT_L1Tech_RPC_TTU_RBst1_collisions") {
                    // for a general documentation of all L1_tech triggers (and their HLT passthroughs), see 
                    //     https://twiki.cern.ch/twiki/bin/view/CMS/FWDPhysicsExclusiveDijetsAnalysis2011Threshold
                      if (MinBiasMult<-40) MinBiasMult=-40;
                      GoodMuMinimumBiasTrig=true;
                    }
                    //
		    // minimum bias with track multiplicity cut for 2010B data
                    // relevant e.g. for "ridge" studies 
                    else if (trigNames.triggerName(i)=="HLT_PixelTracks_Multiplicity100") {if (MinBiasMult<0 || MinBiasMult>100)MinBiasMult=100;}
		    else if (trigNames.triggerName(i)=="HLT_PixelTracks_Multiplicity85")  {if (MinBiasMult<0 || MinBiasMult>85) MinBiasMult=85;}
                    else if (trigNames.triggerName(i)=="HLT_PixelTracks_Multiplicity70")  {if (MinBiasMult<0 || MinBiasMult>70) MinBiasMult=70;}
		    // else if (trigNames.triggerName(i)=="HLT_PixelTracks_Multiplicity40")  {if (MinBiasMult<0 || MinBiasMult>40) MinBiasMult=40;}
		    // else if (trigNames.triggerName(i)=="HLT_HighMult40")                  {if (MinBiasMult<0 || MinBiasMult>39) MinBiasMult=39;}
                    // for 2011A data
		    // else if (trigNames.triggerName(i)=="HLT_PixelTracks_Multiplicity125_v3")  {if (MinBiasMult<0 || MinBiasMult>125) MinBiasMult=125;}
		    else if (trigNames.triggerName(i)=="HLT_PixelTracks_Multiplicity110_v1") {if (MinBiasMult<0 || MinBiasMult>110) MinBiasMult=110;}
                    // 2011 MC
		    else if (trigNames.triggerName(i)=="HLT_PixelTracks_Multiplicity100_v9") {if (MinBiasMult<0 || MinBiasMult>100) MinBiasMult=100;}

		    else if (trigNames.triggerName(i)=="HLT_PixelTracks_Multiplicity100_v7") {if (MinBiasMult<0 || MinBiasMult>100) MinBiasMult=100;}
		    else if (trigNames.triggerName(i)=="HLT_PixelTracks_Multiplicity100_v6") {if (MinBiasMult<0 || MinBiasMult>100) MinBiasMult=100;}
                    // 2011 MC
		    else if (trigNames.triggerName(i)=="HLT_PixelTracks_Multiplicity80_v9")  {if (MinBiasMult<0 || MinBiasMult>80) MinBiasMult=80;}

		    else if (trigNames.triggerName(i)=="HLT_PixelTracks_Multiplicity80_v7")  {if (MinBiasMult<0 || MinBiasMult>80) MinBiasMult=80;}
		    else if (trigNames.triggerName(i)=="HLT_PixelTracks_Multiplicity80_v6")  {if (MinBiasMult<0 || MinBiasMult>80) MinBiasMult=80;}
		    else if (trigNames.triggerName(i)=="HLT_PixelTracks_Multiplicity80_v5")  {if (MinBiasMult<0 || MinBiasMult>80) MinBiasMult=80;}
		    else if (trigNames.triggerName(i)=="HLT_PixelTracks_Multiplicity80_v4")  {if (MinBiasMult<0 || MinBiasMult>80) MinBiasMult=80;}
		    else if (trigNames.triggerName(i)=="HLT_PixelTracks_Multiplicity80_v3")  {if (MinBiasMult<0 || MinBiasMult>80) MinBiasMult=80;}
		    else if (trigNames.triggerName(i)=="HLT_PixelTracks_Multiplicity80_v2")  {if (MinBiasMult<0 || MinBiasMult>80) MinBiasMult=80;}
                    //
                    // minimum bias with cut on 1 or 2 tracks 
		    // else if (trigNames.triggerName(i)=="HLT_MinBiasPixel_DoubleTrack") {if (MinBiasMult<0 || MinBiasMult>2) MinBiasMult=2;}
                    else if (iEvent.run()<145000 && trigNames.triggerName(i)=="HLT_IsoTrackHB")       {if (MinBiasMult<-1) MinBiasMult=-1;} 
                        // on MinimumBias for Run A, in Commissioning for Run B
                    else if (trigNames.triggerName(i)=="HLT_IsoTrackHB_8E29")  {if (MinBiasMult<-1) MinBiasMult=-1;}
                    else if (iEvent.run()<145000 && trigNames.triggerName(i)=="HLT_IsoTrackHE")       {if (MinBiasMult<-1) MinBiasMult=-1;} 
                        // in Commissioning for Run B
                    else if (trigNames.triggerName(i)=="HLT_IsoTrackHE_8E29")  {if (MinBiasMult<-1) MinBiasMult=-1;} 
                    // else if (trigNames.triggerName(i)=="HLT_MinBiasPixel_SingleTrack") {if (MinBiasMult<0 || MinBiasMult>1) MinBiasMult=1;}
		        // 2010 Run A only, reevaluate flag?
                    else if (trigNames.triggerName(i)=="HLT_ZeroBiasPixel_SingleTrack"){if (MinBiasMult<0 || MinBiasMult>1) MinBiasMult=1;}
                    // with enhanced pileup, need at least one track per vertex  -> moved to Commissioning 
                    else if (iEvent.run()<145000 && trigNames.triggerName(i)=="HLT_MultiVertex6") {if (MinBiasMult<-6) MinBiasMult=-6;}
                         // The latter occurs for MinimumBias for Run A, and for Commissioning in Run B?

                    //
                    // BSC based
                    // with multiplicity cut
		    else if (trigNames.triggerName(i)=="HLT_L1Tech_BSC_HighMultiplicity"){if (MinBiasMult<0 || MinBiasMult<50) MinBiasMult=50;}
		    // else if (trigNames.triggerName(i)=="HLT_HighMultiplicityBSC")                    MinBiasMult=0;
                    // without track multiplicity cut
		    else if (trigNames.triggerName(i)=="HLT_L1Tech_BSC_minBias") {
                      // there are two different variants of this trigger
                      if (iEvent.run()<141900 || iEvent.run()>149400)                                 MinBiasFlag=1;
                      else if (MinBiasFlag<-4)                                                        MinBiasFlag=-4;
                      }
		    else if (trigNames.triggerName(i)=="HLT_L1Tech_BSC_minBias_OR") 
                      {if (MinBiasFlag<-4)                                                             MinBiasFlag=-3;}
		    // else if (trigNames.triggerName(i)=="HLT_BackwardBSC")                            MinBiasMult=0;
		    // else if (trigNames.triggerName(i)=="HLT_ForwardBSC")                             MinBiasMult=0;
		    // else if (trigNames.triggerName(i)=="HLT_L1_BSC")                                 MinBiasMult=0;
		    // else if (trigNames.triggerName(i)=="HLT_L1_BscMinBiasOR_BeamGas")                MinBiasMult=0;
                    // for Commissioning10 900 GeV and 7 TeV Run A
		    else if (trigNames.triggerName(i)=="HLT_L1_BscMinBiasOR_BptxPlusORMinus")        MinBiasFlag=0;
		    // else if (trigNames.triggerName(i)=="HLT_L1_BscMinBiasOR_BptxPlusOrMinus_NoBPTX") MinBiasMult=0;
                    // for 2010 Run A
		    else if (trigNames.triggerName(i)=="HLT_MinBiasBSC")                             MinBiasFlag=2;
		    else if (trigNames.triggerName(i)=="HLT_MinBiasBSC_NoBPTX")                      MinBiasFlag=-1;
		    // else if (trigNames.triggerName(i)=="HLT_MinBiasBSC_OR")                          MinBiasMult=0;
                    // for 2011A data
		    else if (trigNames.triggerName(i)=="HLT_L1Tech_BSC_minBias_threshold1_v1")       MinBiasFlag=1;
                    // BPTX based (in either ZeroBias and/or MinimumBias samples for Run A, depending on Run number, 
                    //             in MinimumBias for Run B)
		    else if (iEvent.run()>141949 && trigNames.triggerName(i)=="HLT_L1_BPTX_MinusOnly") ZeroBiasFlag=-1;
		    else if (iEvent.run()>141949 && trigNames.triggerName(i)=="HLT_L1_BPTX_PlusOnly")  ZeroBiasFlag=-1;
		    else if (iEvent.run()>141949 && trigNames.triggerName(i)=="HLT_L1_BPTX") {if (ZeroBiasFlag==-10) ZeroBiasFlag=0;}
		    //else if (trigNames.triggerName(i)=="HLT_L1_BPTX_MinusOnly") MinBiasMult=0;
		    //else if (trigNames.triggerName(i)=="HLT_L1_BPTX_PlusOnly")  MinBiasMult=0;
		    //else if (trigNames.triggerName(i)=="HLT_L1_BPTX")           MinBiasMult=0;
                    // HF based (2015 5 TeV MinBias data+MC)
		    else if (trigNames.triggerName(i)=="HLT_L1MinimumBiasHF10R_part2_v1")            MinBiasFlag=4;
                    // HF based (2017 13 TeV L1MinBias data)
		    else if (trigNames.triggerName(i)=="HLT_L1MinimumBiasHF_OR_part0_v2")            MinBiasFlag=4;
                    // for 2010A data, no JSON, with jet threshold (not minimum bias)
                    // consider to use MinBiasFlag instead of MinBiasMult
		    else if (iEvent.run()==135808 && trigNames.triggerName(i)=="HLT_L1Jet10U_NoBPTX") {if (MinBiasMult<-10) MinBiasMult=-10;}
		    else if (iEvent.run()==135808 && trigNames.triggerName(i)=="HLT_QuadJet15U") {if (MinBiasMult<-15) MinBiasMult=-15;}
                    // set ZeroBiasFlag=3 instead? (see above)
                    // e.g. 135808, 135939
                    // 135944 appears on Mu noJSON (might need to remove exception again if actually on MinimumBias)
                    //                              instead, treat AntiBPTX?
                    // it does appear on Minimum Bias!
		    //else if (iEvent.run() < 136000 && iEvent.run() != 135944 && trigNames.triggerName(i)=="HLT_Activity_L1A") {if (MinBiasMult<0) MinBiasMult=0;}
		    else if (iEvent.run() < 136000 && trigNames.triggerName(i)=="HLT_Activity_L1A") {if (MinBiasMult<0) MinBiasMult=0;}
                    // for 2011A data, with jet threshold (not minimum bias)
                    // can/should these be used as jet triggers? 
		    else if (trigNames.triggerName(i)=="HLT_JetE50_NoBPTX3BX_NoHalo_v3") {if (MinBiasMult<-50) MinBiasMult=-50;}
		    else if (trigNames.triggerName(i)=="HLT_JetE50_NoBPTX3BX_NoHalo_v2") {if (MinBiasMult<-50) MinBiasMult=-50;}
		    else if (trigNames.triggerName(i)=="HLT_JetE50_NoBPTX3BX_NoHalo_v1") {if (MinBiasMult<-50) MinBiasMult=-50;}
                    // MC 2011
		    else if (trigNames.triggerName(i)=="HLT_JetE30_NoBPTX3BX_NoHalo_v11") {if (MinBiasMult<-30) MinBiasMult=-30;}

		    else if (trigNames.triggerName(i)=="HLT_JetE30_NoBPTX3BX_NoHalo_v8") {if (MinBiasMult<-30) MinBiasMult=-30;}
     //		    else if (trigNames.triggerName(i)=="HLT_JetE30_NoBPTX3BX_NoHalo_v7") {if (MinBiasMult<-30) MinBiasMult=-30;}
		    else if (trigNames.triggerName(i)=="HLT_JetE30_NoBPTX3BX_NoHalo_v6") {if (MinBiasMult<-30) MinBiasMult=-30;}
		    else if (trigNames.triggerName(i)=="HLT_JetE30_NoBPTX3BX_NoHalo_v5") {if (MinBiasMult<-30) MinBiasMult=-30;}
		    else if (trigNames.triggerName(i)=="HLT_JetE30_NoBPTX3BX_NoHalo_v4") {if (MinBiasMult<-30) MinBiasMult=-30;}
		    else if (trigNames.triggerName(i)=="HLT_JetE30_NoBPTX3BX_NoHalo_v2") {if (MinBiasMult<-30) MinBiasMult=-30;}
		    else if (trigNames.triggerName(i)=="HLT_JetE30_NoBPTX3BX_NoHalo_v1") {if (MinBiasMult<-30) MinBiasMult=-30;}
                    // 2011 MC 
		    else if (trigNames.triggerName(i)=="HLT_JetE30_NoBPTX_NoHalo_v11")    {if (MinBiasMult<-30) MinBiasMult=-30;}

		    else if (trigNames.triggerName(i)=="HLT_JetE30_NoBPTX_NoHalo_v8")    {if (MinBiasMult<-30) MinBiasMult=-30;}
		    else if (trigNames.triggerName(i)=="HLT_JetE30_NoBPTX_NoHalo_v7")    {if (MinBiasMult<-30) MinBiasMult=-30;}
		    else if (trigNames.triggerName(i)=="HLT_JetE30_NoBPTX_NoHalo_v6")    {if (MinBiasMult<-30) MinBiasMult=-30;}
		    else if (trigNames.triggerName(i)=="HLT_JetE30_NoBPTX_NoHalo_v5")    {if (MinBiasMult<-30) MinBiasMult=-30;}
		    else if (trigNames.triggerName(i)=="HLT_JetE30_NoBPTX_NoHalo_v4")    {if (MinBiasMult<-30) MinBiasMult=-30;}
		    else if (trigNames.triggerName(i)=="HLT_JetE30_NoBPTX_NoHalo_v2")    {if (MinBiasMult<-30) MinBiasMult=-30;}
		    else if (trigNames.triggerName(i)=="HLT_JetE30_NoBPTX_NoHalo_v1")    {if (MinBiasMult<-30) MinBiasMult=-30;}
                    // 2011 MC
		    else if (trigNames.triggerName(i)=="HLT_JetE30_NoBPTX_v9")           {if (MinBiasMult<-30) MinBiasMult=-30;}

		    else if (trigNames.triggerName(i)=="HLT_JetE30_NoBPTX_v6")           {if (MinBiasMult<-30) MinBiasMult=-30;}
		    else if (trigNames.triggerName(i)=="HLT_JetE30_NoBPTX_v5")           {if (MinBiasMult<-30) MinBiasMult=-30;}
		    else if (trigNames.triggerName(i)=="HLT_JetE30_NoBPTX_v4")           {if (MinBiasMult<-30) MinBiasMult=-30;}
		    else if (trigNames.triggerName(i)=="HLT_JetE30_NoBPTX_v3")           {if (MinBiasMult<-30) MinBiasMult=-30;}
		    else if (trigNames.triggerName(i)=="HLT_JetE30_NoBPTX_v2")           {if (MinBiasMult<-30) MinBiasMult=-30;}
		    else if (trigNames.triggerName(i)=="HLT_JetE30_NoBPTX_v1")           {if (MinBiasMult<-30) MinBiasMult=-30;}
                    // what is this?
		    else if (trigNames.triggerName(i)=="HLT_70Jet13_v1")                 {if (MinBiasMult<-70) MinBiasMult=-70;}
		    else if (trigNames.triggerName(i)=="HLT_70Jet10_v1")                 {if (MinBiasMult<-70) MinBiasMult=-70;}
		    else if (trigNames.triggerName(i)=="HLT_60Jet10_v1")                 {if (MinBiasMult<-60) MinBiasMult=-60;}
                    // HF based (2010A)
		    // else if (trigNames.triggerName(i)=="HLT_HFthreshold10")                          MinBiasMult=0;                   
		    // else if (trigNames.triggerName(i)=="HLT_HFthreshold3")                           MinBiasMult=0;                   
		    else if (trigNames.triggerName(i)=="HLT_L1Tech_HCAL_HF")                         MinBiasFlag=3;
		    // else if (trigNames.triggerName(i)=="HLT_L1Tech_HCAL_HF_coincidence_PM")          MinBiasMult=0;
		    // else if (trigNames.triggerName(i)=="HLT_HFTech")                                 MinBiasMult=0;
                    // CAl based
		    // else if (trigNames.triggerName(i)=="HLT_MinBiasEcal")                            MinBiasMult=0;
		    // else if (trigNames.triggerName(i)=="HLT_MinBiasHcal")                            MinBiasMult=0;
                    // minimum or 0 bias
		    // else if (trigNames.triggerName(i)=="HLT_MinBias")                                MinBiasMult=0;
                    // for the next two, also see 
                    //    https://twiki.cern.ch/twiki/bin/view/CMS/FWDPhysicsExclusiveDijetsAnalysis2011Threshold
                    // in both ZeroBias and MinimumBias dataset for 2010 Run A, depending on run number
		    else if (iEvent.run()>141949 && trigNames.triggerName(i)=="HLT_ZeroBias") {if (ZeroBiasFlag<1) ZeroBiasFlag=1;}
		    // else if (trigNames.triggerName(i)=="HLT_ZeroBias")           MinBiasMult=0;
                    else if (iEvent.run()>145000 && trigNames.triggerName(i)=="HLT_Random")          ZeroBiasFlag=2;
                    // for 2011 MC
		    else if (trigNames.triggerName(i)=="HLT_ZeroBias_v5")                            ZeroBiasFlag=1;
                    // for 2011A data
		    else if (trigNames.triggerName(i)=="HLT_ZeroBias_v4")                            ZeroBiasFlag=1;
		    else if (trigNames.triggerName(i)=="HLT_ZeroBias_v3")                            ZeroBiasFlag=1;
		    else if (trigNames.triggerName(i)=="HLT_ZeroBias_v2")                            ZeroBiasFlag=1;
		    else if (trigNames.triggerName(i)=="HLT_ZeroBias_v1")                            ZeroBiasFlag=1;
                    // ... also 2011 MC
                    else if (trigNames.triggerName(i)=="HLT_Random_v1")                              ZeroBiasFlag=2;
                    // for 2011A data, "or" of all L1 trigger seeds, including (mostly single) muons, "L1 passthrough"
                    else if (trigNames.triggerName(i)=="HLT_Physics_v2")                             MinBiasFlag=-5;
                    else if (trigNames.triggerName(i)=="HLT_Physics_v1")                             MinBiasFlag=-5;
                    // for 2011 MC
                    else if (trigNames.triggerName(i)=="HLT_Physics_v3")                             MinBiasFlag=-5;
                    //
                    // background triggers
		    else if (trigNames.triggerName(i)=="HLT_L1Tech_BSC_halo_forPhysicsBackground") {if (MinBiasMult<-90) MinBiasMult=-90;}
		    // else if (trigNames.triggerName(i)=="HLT_SplashBSC")                           {if (MinBiasMult<-91) MinBiasMult=-91;}
                    
                    else MinimumBiasTrigThis = false; // none of the above triggered 

                    // check and set whether trigger for MinBias dataset has fired
                    if (MinimumBiasTrigThis) MinimumBiasTrig = true;


                    //check Commissioning triggers
                    bool CommissioningTrigThis = true;

                    // the following trigger on an isolated track associated to an L1 jet, i.e. energy threshold
                    // e.g. Tau candidates, not really minimum bias   *** check overlap with minimum bias ***
                    if      (trigNames.triggerName(i)=="HLT_IsoTrackHB_v2")     {if (MinBiasMult<-1) MinBiasMult=-1;}
                    else if (iEvent.run()>145000 && trigNames.triggerName(i)=="HLT_IsoTrackHB")       {if (MinBiasMult<-1) MinBiasMult=-1;} 
                        // on MinimumBias for Run A, in Commissioning for Run B
                    else if (trigNames.triggerName(i)=="HLT_IsoTrackHE_v3")     {if (MinBiasMult<-1) MinBiasMult=-1;}
                    else if (trigNames.triggerName(i)=="HLT_IsoTrackHE_v2")     {if (MinBiasMult<-1) MinBiasMult=-1;}
                    else if (iEvent.run()>145000 && trigNames.triggerName(i)=="HLT_IsoTrackHE")       {if (MinBiasMult<-1) MinBiasMult=-1;}
                        // on MinimumBias (or ZeroBias?) for Run A, in Commissioning for Run B
                    // Ecal based
                    // else if (trigNames.triggerName(i)=="HLT_Activity_Ecal")                          MinBiasMult=0;
                    // else if (trigNames.triggerName(i)=="HLT_Activity_EcalREM")                       MinBiasMult=0;
                    // HCAL based
                    // else if (trigNames.triggerName(i)=="HLT_Activity_L1A")                           MinBiasMult=0;
                    // tracking based
                    // else if (trigNames.triggerName(i)=="HLT_Activity_PixelClusters")                 MinBiasMult=0;
                    // BPTX/BSC based
                    else if (trigNames.triggerName(i)=="HLT_L1_BptxXOR_BscMinBiasOR")                MinBiasFlag=-2;
                    // Multi-vertex (need at least one track to identify vertex)
                    //               seems to be biasing the track per vertex multiplicity distribution
                    else if (trigNames.triggerName(i)=="HLT_MultiVertex6_v2")                        MinBiasMult=-6;
                    else if (iEvent.run()>145000 && trigNames.triggerName(i)=="HLT_MultiVertex6")    MinBiasMult=-6;
                    // The latter occurs in MinimumBias for Run A, and for Commissioning in Run B?
                    // with ET threshold
                    else if (trigNames.triggerName(i)=="HLT_MultiVertex8_L1ETT60_v2") {if (MinBiasMult<-60) MinBiasMult=-60;}
                    else if (iEvent.run()>145000 && trigNames.triggerName(i)=="HLT_MultiVertex8_L1ETT60")    {if (MinBiasMult<-60) MinBiasMult=-60;}
                    // muon triggers, not for minimum bias
                    else if (trigNames.triggerName(i)=="HLT_Activity_CSC")            {if (MinBiasMult<-41) MinBiasMult=-41;}
                    else if (trigNames.triggerName(i)=="HLT_Activity_DT")             {if (MinBiasMult<-42) MinBiasMult=-42;}
                    else if (trigNames.triggerName(i)=="HLT_Activity_DT_Tuned")       {if (MinBiasMult<-42) MinBiasMult=-42;}

                    else CommissioningTrigThis = false; // none of the above triggered

                    // check and set whether trigger for Commissioning dataset has fired
                    if (CommissioningTrigThis) CommissioningTrig = true;

	          }
                }

	        //h148->Fill(ZeroBiasFlag);		// fill zero bias trigger histogram
	        //h149->Fill(MinBiasFlag);		// fill minimum bias trigger histogram
	        //h150->Fill(MinBiasMult);		// fill minimum bias multiplicity histogram


		//  non-single-sided ZeroBias triggers and MinimumBias triggers with multiplicities 
                //  between 0 and 2 are OK
                if (ZeroBiasFlag > -1 || MinBiasFlag > -1 || (MinBiasMult > -1 && MinBiasMult < 3)) {
		  GoodMinimumBiasTrig = true;
                  return true;
                }
                else if ((MinimumBiasdataset || Commissioningdataset) && MinBiasMult == -99 && MinBiasFlag == -10 && ZeroBiasFlag == -10) {
// activate this for debug  
                  std::cout<<" ****** no MinBias or Commissioning Trigger recognized ****** "<<std::endl;
                  for(unsigned i= 0; i<trigNames.size(); i++) {
                    // dump only accepted triggers 
                    if (triggerResultsHandle_->accept(i)==1){
                      std::cout<<" Trigger name "<<trigNames.triggerName(i)<<", Accepted = ";
                      std::cout<<triggerResultsHandle_->accept(i)<<std::endl;
	            }
                  }
#ifdef trigcheckabort
                  // abort the job if already known to be Minimum Bias or Commissioning dataset
                  if ((dataset == "MinimumBias" && !MinimumBiasTrig) || (dataset == "Commissioning" && !CommissioningTrig)) exit(1);
#endif
                }
                return false;
}


//*********************************************************************
// ---- method called for each event to check good muon trigger ---- //
//*********************************************************************

bool NanoAnalyzer::providesGoodMuTrigger(const edm::Event& iEvent) {

// *************************************************************
//------------------ get and check trigger info ----------------
// *************************************************************

#ifndef CMSSW7plus
                edm::Handle<edm::TriggerResults> triggerResults;
                edm::Handle<edm::TriggerResults> triggerResultsHandle_;
                edm::InputTag trigResultsTag("TriggerResults","","HLT"); 
                iEvent.getByLabel(trigResultsTag,triggerResultsHandle_);
#endif
#ifdef CMSSW7plus
  //EDGetTokenT<edm::TriggerResults> trigTkn;
  //trigTkn = consumes< edm::TriggerResults>(edm::InputTag("TriggerResults","","HLT"));
  edm::Handle<edm::TriggerResults> triggerResultsHandle_;  
  iEvent.getByToken(trigTkn, triggerResultsHandle_);  
#endif

                // check whether trigger info was obtained successfully
                if (!triggerResultsHandle_.isValid()) {
		  std::cout << "Nano::goodTrigger: Error in getting TriggerResults product from Event!" << std::endl;
                  return false;
                }

                // get trigger names
                const edm::TriggerNames& trigNames = iEvent.triggerNames(*triggerResultsHandle_); 

//                // dump trigger information including accept flag
//                for(unsigned i= 0; i<trigNames.size(); i++) { 
//                  if (triggerResultsHandle_->accept(i)==1){
//                    std::cout<<" Trigger name "<<trigNames.triggerName(i)<<", Accepted = ";
//                    std::cout<<triggerResultsHandle_->accept(i)<<std::endl;
//      	    }
//                }

                // Structure of Mu and MuMonitor triggers in 2010:
                // --------------------------------------------------------------------------------------------
                // Commissioning10,Runs 132000-136000: Mu triggers are on MinimumBias dataset
                //                                     from 135XXX in Run A (no JSON)?
                // Run A  Runs 136000-140000 (A1'):    Mu has DoubleMu0, L1DoubleMuOpen (and others), 
                //                                     MuMonitor has L1MuOpen and L1Mu only until Run 138000, then more.
                //                                     Thus all Mu triggers will appear prescaled on MuMonitor.  
                //                                     There is no MuOnia.
                //                                     Triggers with L1MuOpen_AntiBPTX active (not selected) -> noise or cosmics?
                //                                     -> accept events with good JSON only? 
                // Run A  Runs 140000-145000 (A2'):    DoubleMu0, L1DoubleMuOpen is on MuOnia (new). DoubleMu3 stays on Mu. 
                //                                     From 141900 (A2), L1DoubleMuOpen moves to MuMonitor
                // Run B  Runs 145000-150000:          


                // There are four categories of triggers in the 2010B Mu dataset (with significant overlaps):
                //
                // 1) ~70% inclusive single muon triggers with varying trigger pt threshold 3,5,7,9,11,13,15,17,19,21 GeV
                //    plus a few with loosened quality cuts
                //
                // 2) ~20% isolated single muon triggers with varying trigger pt threshold 9,11,13,15,17 GeV
                //
                // 3) ~10% inclusive dimuon triggers with varying trigger pt threshold 3,5 GeV
                //    plus one Z->mumu trigger with loosened quality cuts
                //
                // 4) ~20% combinations of muon triggers with various pt thresholds 3,5,7,8,9,11 GeV 
                //    with some EM/e/gamma or hadronic/jet energy deposit with thresholds 6-100 GeV 


                // There are two categories of triggers in the 2010B MuOnia dataset, which overlaps noticeably with the Mu dataset,
                // even though the trigger selections have no formal overlap:
                //
                // 3) ~30% inclusive dimuon triggers with no explicit trigger pt threshold 
                //    or loosened requirements on 2nd muon
                //
                // 5) ~70% J/psi or quarkonium (dimuon) triggers with no or very loose pt thresholds 
                //    and cuts on dimuon mass in range 1.5-15 GeV

               
                // There are three categories of triggers in the 2010B MuMonitoring dataset, which strongly overlaps with the 
                // Mu and MuOnia datasets, even though the trigger selections have no formal overlap.
                // These categories are also heavily overlapping with each other.  
                // The dataset provides some additional acceptance for low pt and/or lower quality muons.
                //
                // 1) ~70% inclusive single muon triggers with varying trigger pt threshold 0,3,5,7 GeV
                //    plus several with loosened quality cuts
                //
                // 3) ~50% inclusive dimuon triggers with no explicit trigger pt threshold 
                //    or loosened requirements on 2nd muon
                //
                // 5) ~5% one J/psi trigger with no pt threshold 

 
                // check Muon triggers
                // beware: cannot expect any particular ordering !!!
                MuTrig = false;
                MuHadTrig = false;
                DoubleMuTrig = false;
                MuEGTrig = false;
                MuOniaTrig = false;
                CharmoniumTrig = false;
                MuMonitorTrig = false;
                GoodMuTrig = false;
               
                for(unsigned i= 0; i<trigNames.size(); i++) { 
                  if (triggerResultsHandle_->accept(i)==1){

                    // check Mu (2010) or SingleMu (2011) triggers
                    // can occur exclusively on Mu sample only, but can also occur on other samples if non-exclusive
                    //          --  have all been checked for real occurrence in Mu sample :-)
                    //              the ones which are commented out without comment have been listed but do not occur 
                    bool MuTrigThis = true;
                    
                    // combined triggers, to be discarded if exclusive, need to allow negative thresholds if want to keep
                    if      (trigNames.triggerName(i)=="HLT_IsoMu9_PFTau15_v2")   {if (IsoMuThresh<-9) IsoMuThresh=-9;}
                    else if (trigNames.triggerName(i)=="HLT_IsoMu9_PFTau15_v1")   {if (IsoMuThresh<-9) IsoMuThresh=-9;}
		    // else if (trigNames.triggerName(i)=="HLT_DoubleMu3_HT50U")     {if (DoubleMuThresh<-3) DoubleMuThresh=-3;} 
		    else if (trigNames.triggerName(i)=="HLT_L1Mu14_L1ETM30")      {if (MuThresh<-14) MuThresh=-14;}
		    else if (trigNames.triggerName(i)=="HLT_L1Mu14_L1SingleEG10") {if (MuThresh<-14) MuThresh=-14;}
                    else if (trigNames.triggerName(i)=="HLT_L1Mu14_L1SingleJet6U"){if (MuThresh<-14) MuThresh=-14;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_Ele8_HT70U_v1")   {if (MuThresh<-3)  MuThresh=-3;}
		    else if (trigNames.triggerName(i)=="HLT_L2Mu5_Photon9_L1R")   {if (MuThresh<-5)  MuThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu11_PFTau15_v2")     {if (MuThresh<-11) MuThresh=-11;}
                    else if (trigNames.triggerName(i)=="HLT_Mu11_PFTau15_v1")     {if (MuThresh<-11) MuThresh=-11;}
                    else if (trigNames.triggerName(i)=="HLT_Mu11_Ele8_v1")  {if (MuThresh<-11) MuThresh=-11;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Ele8_v1")   {if (MuThresh<-8)  MuThresh=-8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu7_Photon13_Cleaned_L1R_v1") {if (MuThresh<-7) MuThresh=-7;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_Photon11_Cleaned_L1R_v1") {if (MuThresh<-5) MuThresh=-5;}
		    else if (trigNames.triggerName(i)=="HLT_Mu5_Photon9_Cleaned_L1R")     {if (MuThresh<-5) MuThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_Ele17_v2")  {if (MuThresh<-5) MuThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_Ele13_v2")  {if (MuThresh<-5) MuThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_Ele9_v1")   {if (MuThresh<-5) MuThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_Ele5_v1")   {if (MuThresh<-5) MuThresh=-5;}
		    // introduce MuHadFlag=1 for Mu+HT, 2 for Mu+Jet, 3 for Mu+dijet, 4 for Dimu+HT, 5 for Mu+Jet+Btag
                    // take Mu/HT/jet thresholds from corresponding negative flag
                    else if (trigNames.triggerName(i)=="HLT_Mu5_HT100U_v3") {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                      if (MuThresh<-5) MuThresh=-5;
                      if (HTThresh<-100) HTThresh=-100;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_HT70U_v3")  {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                      if (MuThresh<-5) MuThresh=-5;
                      if (HTThresh<-70) HTThresh=-70;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_HT50U_v1")  {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1; 
                      if (MuThresh<-5) MuThresh=-5;
                      if (HTThresh<-50) HTThresh=-50;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_Jet70U_v3") {if (MuHadFlag<0 || MuHadFlag>2) MuHadFlag=2;
                      if (MuThresh<-5) MuThresh=-5;
                      if (JetThresh<-70) JetThresh=-70;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_Jet50U_v3") {if (MuHadFlag<0 || MuHadFlag>2) MuHadFlag=2;
                      if (MuThresh<-5) MuThresh=-5;
                      if (JetThresh<-50) JetThresh=-50;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_Jet35U_v1") {if (MuHadFlag<0 || MuHadFlag>2) MuHadFlag=2;
                      if (MuThresh<-5) MuThresh=-5;
                      if (JetThresh<-35) JetThresh=-35;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_MET45_v3")  {if (MuThresh<-5) MuThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_MET45_v1")  {if (MuThresh<-5) MuThresh=-5;}
                    // inclusive L1 or L2 single muon triggers, to be superseded by L3 if fired, for 2010
                    // MuThresh will be set accordingly below
		    else if (trigNames.triggerName(i)=="HLT_L1Mu30") {if (MuThresh<0) MuThresh=30;}
                    else if (iEvent.run()<145000 && trigNames.triggerName(i)=="HLT_L1Mu20") {if (MuThresh<0) MuThresh=20;}  // in list, but moved to MuMonitor for 2010 Run B
                    else if (trigNames.triggerName(i)=="HLT_L2Mu25") {if (MuL2Thresh<0 || MuL2Thresh>25) MuL2Thresh=25;}
		    else if (trigNames.triggerName(i)=="HLT_L2Mu15") {if (MuThresh<0) MuThresh=15;}
		    else if (trigNames.triggerName(i)=="HLT_L2Mu11") {if (MuThresh<0) MuThresh=12;}
		    else if (trigNames.triggerName(i)=="HLT_L2Mu9")  {if (MuL2Thresh<0 || MuL2Thresh>9) MuL2Thresh=9;}
                    else if (iEvent.run()<138559 && trigNames.triggerName(i)=="HLT_L2Mu0") {MuL2Thresh=0; MuThresh=1;} // not in list, in MuMonitor for Run B and A2 and part of A1
                       // beware, if this is activated also for Run A, distinction between Mu and MuMonitor might become impossible!
                    else if (iEvent.run()<140000 && trigNames.triggerName(i)=="HLT_L1DoubleMuOpen")  DoubleMuThresh=0; // A1 only, on MuMonitor for Run B and Run A2
                    // else if (iEvent.run()<141949 && trigNames.triggerName(i)=="HLT_L1DoubleMuOpen")  DoubleMuThresh=0; // A1 only, on MuMonitor for Run B and Run A2
                    else if (iEvent.run()<141949 && trigNames.triggerName(i)=="HLT_DoubleMu3")  DoubleMuThresh=3; // A only, on MuMonitor for Run B?
 
                    // not in competition with HLT
                    else if (trigNames.triggerName(i)=="HLT_L2DoubleMu20_NoVertex_v1") {if (DoubleMuThresh<0 || DoubleMuThresh>20) DoubleMuThresh=20;}

                    // for 2011 MC
		    else if (trigNames.triggerName(i)=="HLT_L1SingleMu20_v5") {if (MuL1Thresh<0 || MuL1Thresh>20) MuL1Thresh=20;}
                    // for 2011
		    else if (trigNames.triggerName(i)=="HLT_L1SingleMu20_v4") {if (MuL1Thresh<0 || MuL1Thresh>20) MuL1Thresh=20;}
		    else if (trigNames.triggerName(i)=="HLT_L1SingleMu20_v3") {if (MuL1Thresh<0 || MuL1Thresh>20) MuL1Thresh=20;}
		    else if (trigNames.triggerName(i)=="HLT_L1SingleMu20_v2") {if (MuL1Thresh<0 || MuL1Thresh>20) MuL1Thresh=20;}
		    else if (trigNames.triggerName(i)=="HLT_L1SingleMu20_v1") {if (MuL1Thresh<0 || MuL1Thresh>20) MuL1Thresh=20;} 
                    // 2011 MC 
	            else if (trigNames.triggerName(i)=="HLT_L2Mu20_v7")       {if (MuL2Thresh<0 || MuL2Thresh>20) MuL2Thresh=20;}

	            else if (trigNames.triggerName(i)=="HLT_L2Mu20_v6")       {if (MuL2Thresh<0 || MuL2Thresh>20) MuL2Thresh=20;}
		    else if (trigNames.triggerName(i)=="HLT_L2Mu20_v5")       {if (MuL2Thresh<0 || MuL2Thresh>20) MuL2Thresh=20;}
		    else if (trigNames.triggerName(i)=="HLT_L2Mu20_v4")       {if (MuL2Thresh<0 || MuL2Thresh>20) MuL2Thresh=20;}
		    else if (trigNames.triggerName(i)=="HLT_L2Mu20_v3")       {if (MuL2Thresh<0 || MuL2Thresh>20) MuL2Thresh=20;} 
		    else if (trigNames.triggerName(i)=="HLT_L2Mu20_v2")       {if (MuL2Thresh<0 || MuL2Thresh>20) MuL2Thresh=20;}
		    else if (trigNames.triggerName(i)=="HLT_L2Mu20_v1")       {if (MuL2Thresh<0 || MuL2Thresh>20) MuL2Thresh=20;}
                    // 2011 MC
		    else if (trigNames.triggerName(i)=="HLT_L1SingleMu10_v5") {if (MuL1Thresh<0 || MuL1Thresh>10) MuL1Thresh=10;}

		    else if (trigNames.triggerName(i)=="HLT_L1SingleMu10_v4") {if (MuL1Thresh<0 || MuL1Thresh>10) MuL1Thresh=10;}
		    else if (trigNames.triggerName(i)=="HLT_L1SingleMu10_v3") {if (MuL1Thresh<0 || MuL1Thresh>10) MuL1Thresh=10;} 
		    else if (trigNames.triggerName(i)=="HLT_L1SingleMu10_v2") {if (MuL1Thresh<0 || MuL1Thresh>10) MuL1Thresh=10;}
		    else if (trigNames.triggerName(i)=="HLT_L1SingleMu10_v1") {if (MuL1Thresh<0 || MuL1Thresh>10) MuL1Thresh=10;}
                    // 2011 MC
		    else if (trigNames.triggerName(i)=="HLT_L2Mu10_v7")       {if (MuL2Thresh<0 || MuL2Thresh>10) MuL2Thresh=10;}

		    else if (trigNames.triggerName(i)=="HLT_L2Mu10_v6")       {if (MuL2Thresh<0 || MuL2Thresh>10) MuL2Thresh=10;}
		    else if (trigNames.triggerName(i)=="HLT_L2Mu10_v5")       {if (MuL2Thresh<0 || MuL2Thresh>10) MuL2Thresh=10;} 
		    else if (trigNames.triggerName(i)=="HLT_L2Mu10_v4")       {if (MuL2Thresh<0 || MuL2Thresh>10) MuL2Thresh=10;}
		    else if (trigNames.triggerName(i)=="HLT_L2Mu10_v3")       {if (MuL2Thresh<0 || MuL2Thresh>10) MuL2Thresh=10;}
		    else if (trigNames.triggerName(i)=="HLT_L2Mu10_v2")       {if (MuL2Thresh<0 || MuL2Thresh>10) MuL2Thresh=10;}
		    else if (trigNames.triggerName(i)=="HLT_L2Mu10_v1")       {if (MuL2Thresh<0 || MuL2Thresh>10) MuL2Thresh=10;}
		    // inclusive single Mu triggers for 2010
                    else if (trigNames.triggerName(i)=="HLT_Mu30_NoVertex_v1") {if (MuThresh<0 || MuThresh>30) MuThresh=30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu21_v1") {if (MuThresh<0 || MuThresh>21) MuThresh=21;}
		    else if (trigNames.triggerName(i)=="HLT_Mu20_NoVertex")    {if (MuThresh<0 || MuThresh>20) MuThresh=20;}
                    else if (trigNames.triggerName(i)=="HLT_Mu19_v1") {if (MuThresh<0 || MuThresh>19) MuThresh=19;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_v1") {if (MuThresh<0 || MuThresh>17) MuThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Mu15_v1") {if (MuThresh<0 || MuThresh>15) MuThresh=15;}
                    else if (trigNames.triggerName(i)=="HLT_Mu13_v1") {if (MuThresh<0 || MuThresh>13) MuThresh=13;}
                    else if (trigNames.triggerName(i)=="HLT_Mu11")    {if (MuThresh<0 || MuThresh>11) MuThresh=11;}
                    else if (trigNames.triggerName(i)=="HLT_Mu9")     {if (MuThresh<0 || MuThresh>9)  MuThresh=9;}
                    else if (trigNames.triggerName(i)=="HLT_Mu7")     {if (MuThresh<0 || MuThresh>7)  MuThresh=7;} // also in MuMonitor *** disentangle! ***
                    else if (trigNames.triggerName(i)=="HLT_Mu5")     {if (MuThresh<0 || MuThresh>5)  MuThresh=5;} // also in MuMonitor *** disentangle! ***
                    else if (trigNames.triggerName(i)=="HLT_Mu3")     {if (MuThresh<0 || MuThresh>3)  MuThresh=3;} // also in MuMonitor *** disentangle! ***
                    //
                    // for 2011
// MuXXeta2p1, XX = 50,60,100,200 do not occur uniquely in practice 
// (|eta|<2.1)
// The following three do not occur uniquely in practice ... 
//		    else if (trigNames.triggerName(i)=="HLT_Mu100_v5")        {if (MuThresh<0 || MuThresh>100) MuThresh=100;}
//		    else if (trigNames.triggerName(i)=="HLT_Mu100_v3")        {if (MuThresh<0 || MuThresh>100) MuThresh=100;}
//		    else if (trigNames.triggerName(i)=="HLT_Mu60_v2")         {if (MuThresh<0 || MuThresh>60) MuThresh=60;}
                    // 2011 MC
		    else if (trigNames.triggerName(i)=="HLT_Mu40_v11")        {if (MuThresh<0 || MuThresh>40) MuThresh=40;}  
		    else if (trigNames.triggerName(i)=="HLT_Mu40_v6")         {if (MuThresh<0 || MuThresh>40) MuThresh=40;}  
		    else if (trigNames.triggerName(i)=="HLT_Mu40_v5")         {if (MuThresh<0 || MuThresh>40) MuThresh=40;}
		    else if (trigNames.triggerName(i)=="HLT_Mu40_v3")         {if (MuThresh<0 || MuThresh>40) MuThresh=40;}
		    else if (trigNames.triggerName(i)=="HLT_Mu40_v1")         {if (MuThresh<0 || MuThresh>40) MuThresh=40;}
		    else if (trigNames.triggerName(i)=="HLT_Mu40_eta2p1_v1")  {if (MuThresh<-40) MuThresh=-40;}
                    // 2011 MC 
		    else if (trigNames.triggerName(i)=="HLT_Mu40_eta2p1_v6")  {if (MuThresh<-40) MuThresh=-40;}
                    else if (trigNames.triggerName(i)=="HLT_Mu30_v13")        {if (MuThresh<0 || MuThresh>30) MuThresh=30;}

                    else if (trigNames.triggerName(i)=="HLT_Mu30_v8")         {if (MuThresh<0 || MuThresh>30) MuThresh=30;}
		    else if (trigNames.triggerName(i)=="HLT_Mu30_v7")         {if (MuThresh<0 || MuThresh>30) MuThresh=30;}
		    else if (trigNames.triggerName(i)=="HLT_Mu30_v5")         {if (MuThresh<0 || MuThresh>30) MuThresh=30;}
		    else if (trigNames.triggerName(i)=="HLT_Mu30_v4")         {if (MuThresh<0 || MuThresh>30) MuThresh=30;}
		    else if (trigNames.triggerName(i)=="HLT_Mu30_v3")         {if (MuThresh<0 || MuThresh>30) MuThresh=30;}
		    else if (trigNames.triggerName(i)=="HLT_Mu30_v2")         {if (MuThresh<0 || MuThresh>30) MuThresh=30;}
		    else if (trigNames.triggerName(i)=="HLT_Mu30_eta2p1_v1")  {if (MuThresh<-30) MuThresh=-30;}
                    // 2011 MC
		    else if (trigNames.triggerName(i)=="HLT_Mu24_v8")         {if (MuThresh<0 || MuThresh>24) MuThresh=24;}

		    else if (trigNames.triggerName(i)=="HLT_Mu24_v8")         {if (MuThresh<0 || MuThresh>24) MuThresh=24;}
		    else if (trigNames.triggerName(i)=="HLT_Mu24_v7")         {if (MuThresh<0 || MuThresh>24) MuThresh=24;}
		    else if (trigNames.triggerName(i)=="HLT_Mu24_v5")         {if (MuThresh<0 || MuThresh>24) MuThresh=24;}
		    else if (trigNames.triggerName(i)=="HLT_Mu24_v4")         {if (MuThresh<0 || MuThresh>24) MuThresh=24;}
		    else if (trigNames.triggerName(i)=="HLT_Mu24_v3")         {if (MuThresh<0 || MuThresh>24) MuThresh=24;}
		    else if (trigNames.triggerName(i)=="HLT_Mu24_v2")         {if (MuThresh<0 || MuThresh>24) MuThresh=24;}
		    else if (trigNames.triggerName(i)=="HLT_Mu24_eta2p1_v1")  {if (MuThresh<-24) MuThresh=-24;}
                    // 2011 MC 
		    else if (trigNames.triggerName(i)=="HLT_Mu20_v13")         {if (MuThresh<0 || MuThresh>20) MuThresh=20;}

		    else if (trigNames.triggerName(i)=="HLT_Mu20_v8")         {if (MuThresh<0 || MuThresh>20) MuThresh=20;}
		    else if (trigNames.triggerName(i)=="HLT_Mu20_v7")         {if (MuThresh<0 || MuThresh>20) MuThresh=20;}
		    else if (trigNames.triggerName(i)=="HLT_Mu20_v6")         {if (MuThresh<0 || MuThresh>20) MuThresh=20;}
		    else if (trigNames.triggerName(i)=="HLT_Mu20_v5")         {if (MuThresh<0 || MuThresh>20) MuThresh=20;}
		    else if (trigNames.triggerName(i)=="HLT_Mu20_v4")         {if (MuThresh<0 || MuThresh>20) MuThresh=20;}
		    else if (trigNames.triggerName(i)=="HLT_Mu20_v3")         {if (MuThresh<0 || MuThresh>20) MuThresh=20;}
		    else if (trigNames.triggerName(i)=="HLT_Mu20_v2")         {if (MuThresh<0 || MuThresh>20) MuThresh=20;}
		    else if (trigNames.triggerName(i)=="HLT_Mu20_v1")         {if (MuThresh<0 || MuThresh>20) MuThresh=20;}
                    // 2011 MC
		    else if (trigNames.triggerName(i)=="HLT_Mu15_v14")         {if (MuThresh<0 || MuThresh>15) MuThresh=15;}

		    else if (trigNames.triggerName(i)=="HLT_Mu15_v9")         {if (MuThresh<0 || MuThresh>15) MuThresh=15;}
		    else if (trigNames.triggerName(i)=="HLT_Mu15_v8")         {if (MuThresh<0 || MuThresh>15) MuThresh=15;}
		    else if (trigNames.triggerName(i)=="HLT_Mu15_v6")         {if (MuThresh<0 || MuThresh>15) MuThresh=15;}
		    else if (trigNames.triggerName(i)=="HLT_Mu15_v5")         {if (MuThresh<0 || MuThresh>15) MuThresh=15;}
		    else if (trigNames.triggerName(i)=="HLT_Mu15_v4")         {if (MuThresh<0 || MuThresh>15) MuThresh=15;}
		    else if (trigNames.triggerName(i)=="HLT_Mu15_v3")         {if (MuThresh<0 || MuThresh>15) MuThresh=15;}
		    else if (trigNames.triggerName(i)=="HLT_Mu15_v2")         {if (MuThresh<0 || MuThresh>15) MuThresh=15;}
                    // 2011 MC
		    else if (trigNames.triggerName(i)=="HLT_Mu12_v8")         {if (MuThresh<0 || MuThresh>12) MuThresh=12;}

		    else if (trigNames.triggerName(i)=="HLT_Mu12_v8")         {if (MuThresh<0 || MuThresh>12) MuThresh=12;}
		    else if (trigNames.triggerName(i)=="HLT_Mu12_v7")         {if (MuThresh<0 || MuThresh>12) MuThresh=12;}
		    else if (trigNames.triggerName(i)=="HLT_Mu12_v5")         {if (MuThresh<0 || MuThresh>12) MuThresh=12;}
		    else if (trigNames.triggerName(i)=="HLT_Mu12_v3")         {if (MuThresh<0 || MuThresh>12) MuThresh=12;}
		    else if (trigNames.triggerName(i)=="HLT_Mu12_v4")         {if (MuThresh<0 || MuThresh>12) MuThresh=12;}
		    else if (trigNames.triggerName(i)=="HLT_Mu12_v2")         {if (MuThresh<0 || MuThresh>12) MuThresh=12;}
		    else if (trigNames.triggerName(i)=="HLT_Mu12_v1")         {if (MuThresh<0 || MuThresh>12) MuThresh=12;}
                    // 2011 MC
		    else if (trigNames.triggerName(i)=="HLT_Mu8_v13")          {if (MuThresh<0 || MuThresh>8)  MuThresh=8;}

		    else if (trigNames.triggerName(i)=="HLT_Mu8_v8")          {if (MuThresh<0 || MuThresh>8)  MuThresh=8;}
		    else if (trigNames.triggerName(i)=="HLT_Mu8_v7")          {if (MuThresh<0 || MuThresh>8)  MuThresh=8;}
		    else if (trigNames.triggerName(i)=="HLT_Mu8_v5")          {if (MuThresh<0 || MuThresh>8)  MuThresh=8;}
		    else if (trigNames.triggerName(i)=="HLT_Mu8_v4")          {if (MuThresh<0 || MuThresh>8)  MuThresh=8;}
		    else if (trigNames.triggerName(i)=="HLT_Mu8_v3")          {if (MuThresh<0 || MuThresh>8)  MuThresh=8;}
		    else if (trigNames.triggerName(i)=="HLT_Mu8_v2")          {if (MuThresh<0 || MuThresh>8)  MuThresh=8;}
		    else if (trigNames.triggerName(i)=="HLT_Mu8_v1")          {if (MuThresh<0 || MuThresh>8)  MuThresh=8;}
                    // 2011 MC
		    else if (trigNames.triggerName(i)=="HLT_Mu5_v15")         {if (MuThresh<0 || MuThresh>5)  MuThresh=5;}

		    else if (trigNames.triggerName(i)=="HLT_Mu5_v10")         {if (MuThresh<0 || MuThresh>5)  MuThresh=5;}
		    else if (trigNames.triggerName(i)=="HLT_Mu5_v9")          {if (MuThresh<0 || MuThresh>5)  MuThresh=5;}
		    else if (trigNames.triggerName(i)=="HLT_Mu5_v7")          {if (MuThresh<0 || MuThresh>5)  MuThresh=5;}
		    else if (trigNames.triggerName(i)=="HLT_Mu5_v6")          {if (MuThresh<0 || MuThresh>5)  MuThresh=5;}
		    else if (trigNames.triggerName(i)=="HLT_Mu5_v5")          {if (MuThresh<0 || MuThresh>5)  MuThresh=5;}
		    else if (trigNames.triggerName(i)=="HLT_Mu5_v4")          {if (MuThresh<0 || MuThresh>5)  MuThresh=5;}
		    else if (trigNames.triggerName(i)=="HLT_Mu5_v3")          {if (MuThresh<0 || MuThresh>5)  MuThresh=5;}
		    else if (trigNames.triggerName(i)=="HLT_Mu3_v9")          {if (MuThresh<0 || MuThresh>3)  MuThresh=3;}
		    else if (trigNames.triggerName(i)=="HLT_Mu3_v7")          {if (MuThresh<0 || MuThresh>3)  MuThresh=3;}
		    else if (trigNames.triggerName(i)=="HLT_Mu3_v6")          {if (MuThresh<0 || MuThresh>3)  MuThresh=3;}
		    else if (trigNames.triggerName(i)=="HLT_Mu3_v5")          {if (MuThresh<0 || MuThresh>3)  MuThresh=3;}
		    else if (trigNames.triggerName(i)=="HLT_Mu3_v4")          {if (MuThresh<0 || MuThresh>3)  MuThresh=3;}
		    else if (trigNames.triggerName(i)=="HLT_Mu3_v3")          {if (MuThresh<0 || MuThresh>3)  MuThresh=3;}
		    
                    // inclusive IsoMu triggers for 2010
                    else if (trigNames.triggerName(i)=="HLT_IsoMu17_v3") {if (IsoMuThresh<0 || IsoMuThresh>17) IsoMuThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_IsoMu15_v3") {if (IsoMuThresh<0 || IsoMuThresh>15) IsoMuThresh=15;}
                    else if (trigNames.triggerName(i)=="HLT_IsoMu13_v4") {if (IsoMuThresh<0 || IsoMuThresh>13) IsoMuThresh=13;}
                    else if (trigNames.triggerName(i)=="HLT_IsoMu13_v3") {if (IsoMuThresh<0 || IsoMuThresh>13) IsoMuThresh=13;}
                    else if (trigNames.triggerName(i)=="HLT_IsoMu11_v4") {if (IsoMuThresh<0 || IsoMuThresh>11) IsoMuThresh=11;}
                    else if (trigNames.triggerName(i)=="HLT_IsoMu11_v3") {if (IsoMuThresh<0 || IsoMuThresh>11) IsoMuThresh=11;}
                    else if (trigNames.triggerName(i)=="HLT_IsoMu9_v4")  {if (IsoMuThresh<0 || IsoMuThresh>9)  IsoMuThresh=9;}
                    else if (trigNames.triggerName(i)=="HLT_IsoMu9_v3")  {if (IsoMuThresh<0 || IsoMuThresh>9)  IsoMuThresh=9;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu9")     {if (IsoMuThresh<0 || IsoMuThresh>9)  IsoMuThresh=9;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu3")     {if (IsoMuThresh<0 || IsoMuThresh>3) IsoMuThresh=3;}

                    // for 2011
                    // IsoMuXXeta2p1, XX = 24, 30, 34, 40 do not occur uniquely in practice 
                    //    (|eta|<2.1)
		    else if (trigNames.triggerName(i)=="HLT_IsoMu30_v7")         {if (IsoMuThresh<0 || IsoMuThresh>30) IsoMuThresh=30;}
                    // 2011 MC
		    else if (trigNames.triggerName(i)=="HLT_IsoMu24_v14")        {if (IsoMuThresh<0 || IsoMuThresh>24) IsoMuThresh=24;}

		    else if (trigNames.triggerName(i)=="HLT_IsoMu24_v8")         {if (IsoMuThresh<0 || IsoMuThresh>24) IsoMuThresh=24;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu24_v7")         {if (IsoMuThresh<0 || IsoMuThresh>24) IsoMuThresh=24;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu24_v6")         {if (IsoMuThresh<0 || IsoMuThresh>24) IsoMuThresh=24;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu24_v5")         {if (IsoMuThresh<0 || IsoMuThresh>24) IsoMuThresh=24;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu24_v4")         {if (IsoMuThresh<0 || IsoMuThresh>24) IsoMuThresh=24;}
                    // 2011 MC
                    else if (trigNames.triggerName(i)=="HLT_IsoMu20_v14")        {if (IsoMuThresh<0 || IsoMuThresh>20) IsoMuThresh=20;}

                    else if (trigNames.triggerName(i)=="HLT_IsoMu20_v9")         {if (IsoMuThresh<0 || IsoMuThresh>20) IsoMuThresh=20;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu20_v8")         {if (IsoMuThresh<0 || IsoMuThresh>20) IsoMuThresh=20;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu20_eta2p1_v1")  {if (IsoMuThresh<-20) IsoMuThresh=-20;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu17_v17")        {if (IsoMuThresh<0 || IsoMuThresh>17) IsoMuThresh=17;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu17_v14")        {if (IsoMuThresh<0 || IsoMuThresh>17) IsoMuThresh=17;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu17_v13")        {if (IsoMuThresh<0 || IsoMuThresh>17) IsoMuThresh=17;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu17_v11")        {if (IsoMuThresh<0 || IsoMuThresh>17) IsoMuThresh=17;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu17_v10")        {if (IsoMuThresh<0 || IsoMuThresh>17) IsoMuThresh=17;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu17_v9")         {if (IsoMuThresh<0 || IsoMuThresh>17) IsoMuThresh=17;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu17_v8")         {if (IsoMuThresh<0 || IsoMuThresh>17) IsoMuThresh=17;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu17_v7")         {if (IsoMuThresh<0 || IsoMuThresh>17) IsoMuThresh=17;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu17_v6")         {if (IsoMuThresh<0 || IsoMuThresh>17) IsoMuThresh=17;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu17_eta2p1_v1")  {if (IsoMuThresh<-17) IsoMuThresh=-17;}
                    // 2011 MC
                    else if (trigNames.triggerName(i)=="HLT_IsoMu15_v19")        {if (IsoMuThresh<0 || IsoMuThresh>15) IsoMuThresh=15;}

                    else if (trigNames.triggerName(i)=="HLT_IsoMu15_v14")        {if (IsoMuThresh<0 || IsoMuThresh>15) IsoMuThresh=15;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu15_v13")        {if (IsoMuThresh<0 || IsoMuThresh>15) IsoMuThresh=15;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu15_v11")        {if (IsoMuThresh<0 || IsoMuThresh>15) IsoMuThresh=15;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu15_v10")        {if (IsoMuThresh<0 || IsoMuThresh>15) IsoMuThresh=15;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu15_v9")         {if (IsoMuThresh<0 || IsoMuThresh>15) IsoMuThresh=15;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu15_v8")         {if (IsoMuThresh<0 || IsoMuThresh>15) IsoMuThresh=15;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu15_v6")         {if (IsoMuThresh<0 || IsoMuThresh>15) IsoMuThresh=15;}
                    // 2011 MC
		    else if (trigNames.triggerName(i)=="HLT_IsoMu15_eta2p1_v1")  {if (IsoMuThresh<-15) IsoMuThresh=-15;}

		    else if (trigNames.triggerName(i)=="HLT_IsoMu15_eta2p1_v1")  {if (IsoMuThresh<-15) IsoMuThresh=-15;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu12_v9")         {if (IsoMuThresh<0 || IsoMuThresh>12) IsoMuThresh=12;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu12_v7")         {if (IsoMuThresh<0 || IsoMuThresh>12) IsoMuThresh=12;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu12_v6")         {if (IsoMuThresh<0 || IsoMuThresh>12) IsoMuThresh=12;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu12_v5")         {if (IsoMuThresh<0 || IsoMuThresh>12) IsoMuThresh=12;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu12_v4")         {if (IsoMuThresh<0 || IsoMuThresh>12) IsoMuThresh=12;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu12_v2")         {if (IsoMuThresh<0 || IsoMuThresh>12) IsoMuThresh=12;}
		    else if (trigNames.triggerName(i)=="HLT_IsoMu12_v1")         {if (IsoMuThresh<0 || IsoMuThresh>12) IsoMuThresh=12;}
		    // inclusive dimuon triggers 2010
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu5_v1") {if (DoubleMuThresh<0||DoubleMuThresh>5) DoubleMuThresh=5;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu3_v2") {if (DoubleMuThresh<0||DoubleMuThresh>3) DoubleMuThresh=3;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu3")    {if (DoubleMuThresh<0||DoubleMuThresh>3) DoubleMuThresh=3;}
                    // give some special treatment to this trigger, since it introduces a mass bias?
                    else if (iEvent.run()<141949 && trigNames.triggerName(i)=="HLT_Mu0_Track0_Jpsi") JpsiThresh=0;
                        // moved from Mu -> MuMonitor run A1 -> A2/B

		    else MuTrigThis = false;  // none of the above has triggered

                    // check and set whether trigger for Mu dataset has fired
                    if (MuTrigThis) MuTrig = true; 

                    // If want to use Mu sample only, should quit here. //
                    // If want to merge Mu and MuOnia samples, quit here if MuOnia and already accepted by Mu, and continue if Mu
                    // (might still find lower trigger threshold).  
                    // If want to use MuOnia sample only, should skip the above and start here. 



                    // MuHad triggers for 2011
                    // can occur exclusively on MuHad sample only, but can also occur on other samples if non-exclusive
                    //          --  have all been checked for real occurrence in MuHad sample :-)
                    bool MuHadTrigThis = true;

                    // Mu + HT
                         if (trigNames.triggerName(i)=="HLT_HT300_Mu5_PFMHT40_v8")   {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-5) MuThresh=-5;
                         if (HTThresh<-300) HTThresh=-300;}
                    else if (trigNames.triggerName(i)=="HLT_HT300_Mu5_PFMHT40_v7")   {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-5) MuThresh=-5;
                         if (HTThresh<-300) HTThresh=-300;}
                    else if (trigNames.triggerName(i)=="HLT_HT300_Mu5_PFMHT40_v5")   {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-5) MuThresh=-5;
                         if (HTThresh<-300) HTThresh=-300;}
                    else if (trigNames.triggerName(i)=="HLT_HT300_Mu5_PFMHT40_v3")   {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-5) MuThresh=-5;
                         if (HTThresh<-300) HTThresh=-300;}
                    else if (trigNames.triggerName(i)=="HLT_HT250_Mu15_PFMHT40_v4")  {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-15) MuThresh=-15;
                         if (HTThresh<-250) HTThresh=-250;}
                    else if (trigNames.triggerName(i)=="HLT_HT250_Mu15_PFMHT20_v7")  {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-15) MuThresh=-15;
                         if (HTThresh<-250) HTThresh=-250;}
                    else if (trigNames.triggerName(i)=="HLT_HT250_Mu15_PFMHT20_v5")  {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-15) MuThresh=-15;
                         if (HTThresh<-250) HTThresh=-250;}
                    else if (trigNames.triggerName(i)=="HLT_HT250_Mu15_PFMHT20_v4")  {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-15) MuThresh=-15;
                         if (HTThresh<-250) HTThresh=-250;}
                    else if (trigNames.triggerName(i)=="HLT_HT250_Mu15_PFMHT20_v3")  {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-15) MuThresh=-15;
                         if (HTThresh<-250) HTThresh=-250;}
                    else if (trigNames.triggerName(i)=="HLT_HT250_Mu15_PFMHT20_v2")  {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-15) MuThresh=-15;
                         if (HTThresh<-250) HTThresh=-250;}
		    else if (trigNames.triggerName(i)=="HLT_Mu40_HT200_v4")          {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-40) MuThresh=-40;
                         if (HTThresh<-200) HTThresh=-200;}
		    else if (trigNames.triggerName(i)=="HLT_Mu30_HT200_v3")          {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-30) MuThresh=-30;
                         if (HTThresh<-200) HTThresh=-200;}
		    else if (trigNames.triggerName(i)=="HLT_Mu30_HT200_v1")          {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-30) MuThresh=-30;
                         if (HTThresh<-200) HTThresh=-200;}
		    else if (trigNames.triggerName(i)=="HLT_Mu15_HT200_v4")          {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-15) MuThresh=-15;
                         if (HTThresh<-200) HTThresh=-200;}
		    else if (trigNames.triggerName(i)=="HLT_Mu15_HT200_v3")          {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-15) MuThresh=-15;
                         if (HTThresh<-200) HTThresh=-200;}
                    else if (trigNames.triggerName(i)=="HLT_Mu15_HT200_v2")          {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-15) MuThresh=-15;
                         if (HTThresh<-200) HTThresh=-200;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_HT200_v4")           {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-8) MuThresh=-8;
                         if (HTThresh<-200) HTThresh=-200;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_HT200_v5")           {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-5) MuThresh=-5;
                         if (HTThresh<-200) HTThresh=-200;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_HT200_v4")           {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-5) MuThresh=-5;
                         if (HTThresh<-200) HTThresh=-200;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_HT200_v3")           {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-5) MuThresh=-5;
                         if (HTThresh<-200) HTThresh=-200;}
                    else if (trigNames.triggerName(i)=="HLT_HT250_Mu5_PFMHT35_v6")   {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-5) MuThresh=-5;
                         if (HTThresh<-250) HTThresh=-250;}
                    else if (trigNames.triggerName(i)=="HLT_HT250_Mu5_PFMHT35_v5")   {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-5) MuThresh=-5;
                         if (HTThresh<-250) HTThresh=-250;}
                    else if (trigNames.triggerName(i)=="HLT_HT250_Mu5_PFMHT35_v4")   {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-5) MuThresh=-5;
                         if (HTThresh<-250) HTThresh=-250;}
                    else if (trigNames.triggerName(i)=="HLT_HT200_Mu5_PFMHT35_v2")   {if (MuHadFlag<0 || MuHadFlag>1) MuHadFlag=1;
                         if (MuThresh<-5) MuThresh=-5;
                         if (HTThresh<-200) HTThresh=-200;}
         	    // Mu + Jet
                    else if (trigNames.triggerName(i)=="HLT_Mu17_CentralJet30_v10")   {if (MuHadFlag<0 || MuHadFlag>2) MuHadFlag=2;
                         if (MuThresh<-17) MuThresh=-17;
                         if (JetThresh<-30) JetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_CentralJet30_v8")   {if (MuHadFlag<0 || MuHadFlag>2) MuHadFlag=2;
                         if (MuThresh<-17) MuThresh=-17;
                         if (JetThresh<-30) JetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_CentralJet30_v7")   {if (MuHadFlag<0 || MuHadFlag>2) MuHadFlag=2;
                         if (MuThresh<-17) MuThresh=-17;
                         if (JetThresh<-30) JetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_CentralJet30_v6")   {if (MuHadFlag<0 || MuHadFlag>2) MuHadFlag=2;
                         if (MuThresh<-17) MuThresh=-17;
                         if (JetThresh<-30) JetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_CentralJet30_v5")   {if (MuHadFlag<0 || MuHadFlag>2) MuHadFlag=2;
                         if (MuThresh<-17) MuThresh=-17;
                         if (JetThresh<-30) JetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_CentralJet30_v4")   {if (MuHadFlag<0 || MuHadFlag>2) MuHadFlag=2;
                         if (MuThresh<-17) MuThresh=-17;
                         if (JetThresh<-30) JetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_CentralJet30_v2")   {if (MuHadFlag<0 || MuHadFlag>2) MuHadFlag=2;
                         if (MuThresh<-17) MuThresh=-17;
                         if (JetThresh<-30) JetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_CentralJet30_v1")   {if (MuHadFlag<0 || MuHadFlag>2) MuHadFlag=2;
                         if (MuThresh<-17) MuThresh=-17;
                         if (JetThresh<-30) JetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_eta2p1_CentralJet30_v1") {if (MuHadFlag<0 || MuHadFlag>2) MuHadFlag=2;
                         if (MuThresh<-17) MuThresh=-17;
                         if (JetThresh<-30) JetThresh=-30;}
                    // Mu + Dijet 
                    else if (trigNames.triggerName(i)=="HLT_Mu17_DiCentralJet30_v10") {if (MuHadFlag<0 || MuHadFlag>3) MuHadFlag=3;
                         if (MuThresh<-17) MuThresh=-17;
                         if (DiJetThresh<-30) DiJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_DiCentralJet30_v8") {if (MuHadFlag<0 || MuHadFlag>3) MuHadFlag=3;
                         if (MuThresh<-17) MuThresh=-17;
                         if (DiJetThresh<-30) DiJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_DiCentralJet30_v7") {if (MuHadFlag<0 || MuHadFlag>3) MuHadFlag=3;
                         if (MuThresh<-17) MuThresh=-17;
                         if (DiJetThresh<-30) DiJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_DiCentralJet30_v6") {if (MuHadFlag<0 || MuHadFlag>3) MuHadFlag=3;
                         if (MuThresh<-17) MuThresh=-17;
                         if (DiJetThresh<-30) DiJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_DiCentralJet30_v5") {if (MuHadFlag<0 || MuHadFlag>3) MuHadFlag=3;
                         if (MuThresh<-17) MuThresh=-17;
                         if (DiJetThresh<-30) DiJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_DiCentralJet30_v4") {if (MuHadFlag<0 || MuHadFlag>3) MuHadFlag=3;
                         if (MuThresh<-17) MuThresh=-17;
                         if (DiJetThresh<-30) DiJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_DiCentralJet30_v1") {if (MuHadFlag<0 || MuHadFlag>3) MuHadFlag=3;
                         if (MuThresh<-17) MuThresh=-17;
                         if (DiJetThresh<-30) DiJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_eta2p1_DiCentralJet30_v1") {if (MuHadFlag<0 || MuHadFlag>3) MuHadFlag=3;
                         if (MuThresh<-17) MuThresh=-17;
                         if (DiJetThresh<-30) DiJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_DiJet30_v1") {if (MuHadFlag<0 || MuHadFlag>3) MuHadFlag=3;
                         if (MuThresh<-5) MuThresh=-5;
                         if (DiJetThresh<-30) DiJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_DiJet30_v6") {if (MuHadFlag<0 || MuHadFlag>3) MuHadFlag=3;
                         if (MuThresh<-3) MuThresh=-3;
                         if (DiJetThresh<-30) DiJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_DiJet30_v4") {if (MuHadFlag<0 || MuHadFlag>3) MuHadFlag=3;
                         if (MuThresh<-3) MuThresh=-3;
                         if (DiJetThresh<-30) DiJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_DiJet30_v3") {if (MuHadFlag<0 || MuHadFlag>3) MuHadFlag=3;
                         if (MuThresh<-3) MuThresh=-3;
                         if (DiJetThresh<-30) DiJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_DiJet30_v2") {if (MuHadFlag<0 || MuHadFlag>3) MuHadFlag=3;
                         if (MuThresh<-3) MuThresh=-3;
                         if (DiJetThresh<-30) DiJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_DiJet30_v1") {if (MuHadFlag<0 || MuHadFlag>3) MuHadFlag=3;
                         if (MuThresh<-3) MuThresh=-3;
                         if (DiJetThresh<-30) DiJetThresh=-30;}
		    // DiMu + HT 
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu5_HT150_v1")     {if (MuHadFlag<0 || MuHadFlag>4) MuHadFlag=4;
                         if (DoubleMuThresh<-5) DoubleMuThresh=-5;
                         if (HTThresh<-150) HTThresh=-150;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu3_HT160_v3")     {if (MuHadFlag<0 || MuHadFlag>4) MuHadFlag=4;
                         if (DoubleMuThresh<-3) DoubleMuThresh=-3;
                         if (HTThresh<-160) HTThresh=-160;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu3_HT160_v2")     {if (MuHadFlag<0 || MuHadFlag>4) MuHadFlag=4;
                         if (DoubleMuThresh<-3) DoubleMuThresh=-3;
                         if (HTThresh<-160) HTThresh=-160;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu3_HT150_v7")     {if (MuHadFlag<0 || MuHadFlag>4) MuHadFlag=4;
                         if (DoubleMuThresh<-3) DoubleMuThresh=-3;
                         if (HTThresh<-150) HTThresh=-150;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu3_HT150_v5")     {if (MuHadFlag<0 || MuHadFlag>4) MuHadFlag=4;
                         if (DoubleMuThresh<-3) DoubleMuThresh=-3;
                         if (HTThresh<-150) HTThresh=-150;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu3_HT150_v4")     {if (MuHadFlag<0 || MuHadFlag>4) MuHadFlag=4;
                         if (DoubleMuThresh<-3) DoubleMuThresh=-3;
                         if (HTThresh<-150) HTThresh=-150;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu3_HT150_v3")     {if (MuHadFlag<0 || MuHadFlag>4) MuHadFlag=4;
                         if (DoubleMuThresh<-3) DoubleMuThresh=-3;
                         if (HTThresh<-150) HTThresh=-150;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu3_HT150_v2")     {if (MuHadFlag<0 || MuHadFlag>4) MuHadFlag=4;
                         if (DoubleMuThresh<-3) DoubleMuThresh=-3;
                         if (HTThresh<-150) HTThresh=-150;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu3_HT150_v1")     {if (MuHadFlag<0 || MuHadFlag>4) MuHadFlag=4;
                         if (DoubleMuThresh<-3) DoubleMuThresh=-3;
                         if (HTThresh<-150) HTThresh=-150;}
		    // Mu + Jet + BTag
                    else if (trigNames.triggerName(i)=="HLT_Mu17_CentralJet40_BTagIP_v2")  {if (MuHadFlag<0 || MuHadFlag>5) MuHadFlag=5;
          		 if (MuThresh<-17) MuThresh=-17;
                         if (BThresh<-40) BThresh=-40;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_CentralJet30_BTagIP_v9")  {if (MuHadFlag<0 || MuHadFlag>5) MuHadFlag=5;
          		 if (MuThresh<-17) MuThresh=-17;
                         if (BThresh<-30) BThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_CentralJet30_BTagIP_v7")  {if (MuHadFlag<0 || MuHadFlag>5) MuHadFlag=5;
          		 if (MuThresh<-17) MuThresh=-17;
                         if (BThresh<-30) BThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_CentralJet30_BTagIP_v6")  {if (MuHadFlag<0 || MuHadFlag>5) MuHadFlag=5;
          		 if (MuThresh<-17) MuThresh=-17;
                         if (BThresh<-30) BThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_CentralJet30_BTagIP_v5")  {if (MuHadFlag<0 || MuHadFlag>5) MuHadFlag=5;
          		 if (MuThresh<-17) MuThresh=-17;
                         if (BThresh<-30) BThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_CentralJet30_BTagIP_v2")  {if (MuHadFlag<0 || MuHadFlag>5) MuHadFlag=5;
          		 if (MuThresh<-17) MuThresh=-17;
                         if (BThresh<-30) BThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_CentralJet30_BTagIP_v1")  {if (MuHadFlag<0 || MuHadFlag>5) MuHadFlag=5;
          		 if (MuThresh<-17) MuThresh=-17;
                         if (BThresh<-30) BThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_eta2p1_CentralJet30_BTagIP_v1") {if (MuHadFlag<0 || MuHadFlag>5) MuHadFlag=5;
          		 if (MuThresh<-17) MuThresh=-17;
                         if (BThresh<-30) BThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu12_CentralJet30_BTagIP_v4")  {if (MuHadFlag<0 || MuHadFlag>5) MuHadFlag=5;
          		 if (MuThresh<-12) MuThresh=-12;
                         if (BThresh<-30) BThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu12_CentralJet30_BTagIP_v2")  {if (MuHadFlag<0 || MuHadFlag>5) MuHadFlag=5;
          		 if (MuThresh<-12) MuThresh=-12;
                         if (BThresh<-30) BThresh=-30;}
		    // IsoMu + Jet 
                    else if (trigNames.triggerName(i)=="HLT_IsoMu17_CentralJet30_v5")      {if (MuHadFlag<0 || MuHadFlag>6) MuHadFlag=6;
                         if (IsoMuThresh<-17) IsoMuThresh=-17;
                         if (JetThresh<-30) JetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_IsoMu17_CentralJet30_v3")      {if (MuHadFlag<0 || MuHadFlag>6) MuHadFlag=6;
                         if (IsoMuThresh<-17) IsoMuThresh=-17;
                         if (JetThresh<-30) JetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_IsoMu17_CentralJet30_v2")      {if (MuHadFlag<0 || MuHadFlag>6) MuHadFlag=6;
                         if (IsoMuThresh<-17) IsoMuThresh=-17;
                         if (JetThresh<-30) JetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_IsoMu17_CentralJet30_v1")      {if (MuHadFlag<0 || MuHadFlag>6) MuHadFlag=6;
                         if (IsoMuThresh<-17) IsoMuThresh=-17;
                         if (JetThresh<-30) JetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_IsoMu17_eta2p1_CentralJet30_v1") {if (MuHadFlag<0 || MuHadFlag>6) MuHadFlag=6;
                         if (IsoMuThresh<-17) IsoMuThresh=-17;
                         if (JetThresh<-30) JetThresh=-30;}
		    // IsoMu + Dijet 
                    else if (trigNames.triggerName(i)=="HLT_IsoMu20_DiCentralJet34_v3")    {if (MuHadFlag<0 || MuHadFlag>7) MuHadFlag=7;
                         if (IsoMuThresh<-20) IsoMuThresh=-20;
                         if (DiJetThresh<-34) DiJetThresh=-34;}
                    else if (trigNames.triggerName(i)=="HLT_IsoMu17_DiCentralJet30_v5")    {if (MuHadFlag<0 || MuHadFlag>7) MuHadFlag=7;
                         if (IsoMuThresh<-17) IsoMuThresh=-17;
                         if (DiJetThresh<-30) DiJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_IsoMu17_DiCentralJet30_v3")    {if (MuHadFlag<0 || MuHadFlag>7) MuHadFlag=7;
                         if (IsoMuThresh<-17) IsoMuThresh=-17;
                         if (DiJetThresh<-30) DiJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_IsoMu17_DiCentralJet30_v2")    {if (MuHadFlag<0 || MuHadFlag>7) MuHadFlag=7;
                         if (IsoMuThresh<-17) IsoMuThresh=-17;
                         if (DiJetThresh<-30) DiJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_IsoMu17_DiCentralJet30_v1")    {if (MuHadFlag<0 || MuHadFlag>7) MuHadFlag=7;
                         if (IsoMuThresh<-17) IsoMuThresh=-17;
                         if (DiJetThresh<-30) DiJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_IsoMu17_eta2p1_DiCentralJet30_v1") {if (MuHadFlag<0 || MuHadFlag>7) MuHadFlag=7;
                         if (IsoMuThresh<-17) IsoMuThresh=-17;
                         if (DiJetThresh<-30) DiJetThresh=-30;}
		    // Mu + Trijet
                    else if (trigNames.triggerName(i)=="HLT_Mu17_TriCentralJet30_v10")      {if (MuHadFlag<0 || MuHadFlag>8) MuHadFlag=8;
          		 if (MuThresh<-17) MuThresh=-17;
                         if (TriJetThresh<-30) TriJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_TriCentralJet30_v8")      {if (MuHadFlag<0 || MuHadFlag>8) MuHadFlag=8;
          		 if (MuThresh<-17) MuThresh=-17;
                         if (TriJetThresh<-30) TriJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_TriCentralJet30_v7")      {if (MuHadFlag<0 || MuHadFlag>8) MuHadFlag=8;
          		 if (MuThresh<-17) MuThresh=-17;
                         if (TriJetThresh<-30) TriJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_TriCentralJet30_v6")      {if (MuHadFlag<0 || MuHadFlag>8) MuHadFlag=8;
          		 if (MuThresh<-17) MuThresh=-17;
                         if (TriJetThresh<-30) TriJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_TriCentralJet30_v5")      {if (MuHadFlag<0 || MuHadFlag>8) MuHadFlag=8;
          		 if (MuThresh<-17) MuThresh=-17;
                         if (TriJetThresh<-30) TriJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_TriCentralJet30_v4")      {if (MuHadFlag<0 || MuHadFlag>8) MuHadFlag=8;
          		 if (MuThresh<-17) MuThresh=-17;
                         if (TriJetThresh<-30) TriJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_TriCentralJet30_v2")      {if (MuHadFlag<0 || MuHadFlag>8) MuHadFlag=8;
          		 if (MuThresh<-17) MuThresh=-17;
                         if (TriJetThresh<-30) TriJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_TriCentralJet30_v1")      {if (MuHadFlag<0 || MuHadFlag>8) MuHadFlag=8;
          		 if (MuThresh<-17) MuThresh=-17;
                         if (TriJetThresh<-30) TriJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_eta2p1_TriCentralJet30_v1") {if (MuHadFlag<0 || MuHadFlag>8) MuHadFlag=8;
          		 if (MuThresh<-17) MuThresh=-17;
                         if (TriJetThresh<-30) TriJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_TriJet30_v1")              {if (MuHadFlag<0 || MuHadFlag>8) MuHadFlag=8;
          		 if (MuThresh<-5) MuThresh=-5;
                         if (TriJetThresh<-30) TriJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_TriJet30_v6")              {if (MuHadFlag<0 || MuHadFlag>8) MuHadFlag=8;
          		 if (MuThresh<-3) MuThresh=-3;
                         if (TriJetThresh<-30) TriJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_TriJet30_v4")              {if (MuHadFlag<0 || MuHadFlag>8) MuHadFlag=8;
          		 if (MuThresh<-3) MuThresh=-3;
                         if (TriJetThresh<-30) TriJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_TriJet30_v3")              {if (MuHadFlag<0 || MuHadFlag>8) MuHadFlag=8;
          		 if (MuThresh<-3) MuThresh=-3;
                         if (TriJetThresh<-30) TriJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_TriJet30_v2")              {if (MuHadFlag<0 || MuHadFlag>8) MuHadFlag=8;
          		 if (MuThresh<-3) MuThresh=-3;
                         if (TriJetThresh<-30) TriJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_TriJet30_v1")              {if (MuHadFlag<0 || MuHadFlag>8) MuHadFlag=8;
          		 if (MuThresh<-3) MuThresh=-3;
                         if (TriJetThresh<-30) TriJetThresh=-30;}
		    // Mu + Dijet + BTag
                    else if (trigNames.triggerName(i)=="HLT_Mu12_DiCentralJet30_BTagIP3D_v5")  {if (MuHadFlag<0 || MuHadFlag>9) MuHadFlag=9;
          		 if (MuThresh<-12) MuThresh=-12;
                         if (BThresh<-30) BThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu12_DiCentralJet30_BTagIP3D_v3")  {if (MuHadFlag<0 || MuHadFlag>9) MuHadFlag=9;
          		 if (MuThresh<-12) MuThresh=-12;
                         if (BThresh<-30) BThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu12_DiCentralJet30_BTagIP3D_v2")  {if (MuHadFlag<0 || MuHadFlag>9) MuHadFlag=9;
          		 if (MuThresh<-12) MuThresh=-12;
                         if (BThresh<-30) BThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu12_DiCentralJet30_BTagIP3D_v1")  {if (MuHadFlag<0 || MuHadFlag>9) MuHadFlag=9;
          		 if (MuThresh<-12) MuThresh=-12;
                         if (BThresh<-30) BThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu12_eta2p1_DiCentralJet30_BTagIP3D_v1")  {if (MuHadFlag<0 || MuHadFlag>9) MuHadFlag=9;
          		 if (MuThresh<-12) MuThresh=-12;
                         if (BThresh<-30) BThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu12_DiCentralJet20_BTagIP3D1stTrack_v2")  {if (MuHadFlag<0 || MuHadFlag>9) MuHadFlag=9;
          		 if (MuThresh<-12) MuThresh=-12;
                         if (BThresh<-20) BThresh=-20;}
                    else if (trigNames.triggerName(i)=="HLT_Mu12_DiCentralJet20_DiBTagIP3D1stTrack_v3")  {if (MuHadFlag<0 || MuHadFlag>9) MuHadFlag=9;
          		 if (MuThresh<-12) MuThresh=-12;
                         if (BThresh<-20) BThresh=-20;}
                    else if (trigNames.triggerName(i)=="HLT_Mu12_DiCentralJet20_DiBTagIP3D1stTrack_v1")  {if (MuHadFlag<0 || MuHadFlag>9) MuHadFlag=9;
          		 if (MuThresh<-12) MuThresh=-12;
                         if (BThresh<-20) BThresh=-20;}
                    else if (trigNames.triggerName(i)=="HLT_Mu12_eta2p1_DiCentralJet20_BTagIP3D1stTrack_v1")  {if (MuHadFlag<0 || MuHadFlag>9) MuHadFlag=9;
          		 if (MuThresh<-12) MuThresh=-12;
                         if (BThresh<-20) BThresh=-20;}
                    else if (trigNames.triggerName(i)=="HLT_Mu12_eta2p1_DiCentralJet20_DiBTagIP3D1stTrack_v1")  {if (MuHadFlag<0 || MuHadFlag>9) MuHadFlag=9;
          		 if (MuThresh<-12) MuThresh=-12;
                         if (BThresh<-20) BThresh=-20;}
		    // IsoMu + trijet
                    else if (trigNames.triggerName(i)=="HLT_IsoMu17_TriCentralJet30_v2")   {if (MuHadFlag<0 || MuHadFlag>10) MuHadFlag=10;
          		 if (IsoMuThresh<-17) IsoMuThresh=-17;
                         if (TriJetThresh<-30) TriJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_IsoMu17_TriCentralJet30_v1")   {if (MuHadFlag<0 || MuHadFlag>10) MuHadFlag=10;
          		 if (IsoMuThresh<-17) IsoMuThresh=-17;
                         if (TriJetThresh<-30) TriJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_IsoMu17_eta2p1_TriCentralJet30_v1") {if (MuHadFlag<0 || MuHadFlag>10) MuHadFlag=10;
          		 if (IsoMuThresh<-17) IsoMuThresh=-17;
                         if (TriJetThresh<-30) TriJetThresh=-30;}
		    // IsoMu + Jet + BTag
                    else if (trigNames.triggerName(i)=="HLT_IsoMu17_CentralJet30_BTagIP_v9")  {if (MuHadFlag<0 || MuHadFlag>11) MuHadFlag=11;
          		 if (IsoMuThresh<-17) IsoMuThresh=-17;
                         if (BThresh<-30) BThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_IsoMu17_CentralJet30_BTagIP_v7")  {if (MuHadFlag<0 || MuHadFlag>11) MuHadFlag=11;
          		 if (IsoMuThresh<-17) IsoMuThresh=-17;
                         if (BThresh<-30) BThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_IsoMu17_CentralJet30_BTagIP_v6")  {if (MuHadFlag<0 || MuHadFlag>11) MuHadFlag=11;
          		 if (IsoMuThresh<-17) IsoMuThresh=-17;
                         if (BThresh<-30) BThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_IsoMu17_CentralJet30_BTagIP_v5")  {if (MuHadFlag<0 || MuHadFlag>11) MuHadFlag=11;
          		 if (IsoMuThresh<-17) IsoMuThresh=-17;
                         if (BThresh<-30) BThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_IsoMu17_eta2p1_CentralJet30_BTagIP_v1")  {if (MuHadFlag<0 || MuHadFlag>11) MuHadFlag=11;
          		 if (IsoMuThresh<-17) IsoMuThresh=-17;
                         if (BThresh<-30) BThresh=-30;}
		    // Mu + Quadjet
                    else if (trigNames.triggerName(i)=="HLT_Mu17_QuadCentralJet30_v5")     {if (MuHadFlag<0 || MuHadFlag>12) MuHadFlag=12;
          		 if (MuThresh<-17) MuThresh=-17;
                         if (QuadJetThresh<-30) QuadJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_QuadCentralJet30_v3")     {if (MuHadFlag<0 || MuHadFlag>12) MuHadFlag=12;
          		 if (MuThresh<-17) MuThresh=-17;
                         if (QuadJetThresh<-30) QuadJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_QuadCentralJet30_v2")     {if (MuHadFlag<0 || MuHadFlag>12) MuHadFlag=12;
          		 if (MuThresh<-17) MuThresh=-17;
                         if (QuadJetThresh<-30) QuadJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_QuadCentralJet30_v1")     {if (MuHadFlag<0 || MuHadFlag>12) MuHadFlag=12;
          		 if (MuThresh<-17) MuThresh=-17;
                         if (QuadJetThresh<-30) QuadJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_eta2p1_QuadCentralJet30_v1") {if (MuHadFlag<0 || MuHadFlag>12) MuHadFlag=12;
          		 if (MuThresh<-17) MuThresh=-17;
                         if (QuadJetThresh<-30) QuadJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_QuadJet30_v1")             {if (MuHadFlag<0 || MuHadFlag>12) MuHadFlag=12;
          		 if (MuThresh<-5) MuThresh=-5;
                         if (QuadJetThresh<-30) QuadJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_QuadJet30_v6")             {if (MuHadFlag<0 || MuHadFlag>12) MuHadFlag=12;
          		 if (MuThresh<-3) MuThresh=-3;
                         if (QuadJetThresh<-30) QuadJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_QuadJet30_v4")             {if (MuHadFlag<0 || MuHadFlag>12) MuHadFlag=12;
          		 if (MuThresh<-3) MuThresh=-3;
                         if (QuadJetThresh<-30) QuadJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_QuadJet30_v3")             {if (MuHadFlag<0 || MuHadFlag>12) MuHadFlag=12;
          		 if (MuThresh<-3) MuThresh=-3;
                         if (QuadJetThresh<-30) QuadJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_QuadJet30_v2")             {if (MuHadFlag<0 || MuHadFlag>12) MuHadFlag=12;
          		 if (MuThresh<-3) MuThresh=-3;
                         if (QuadJetThresh<-30) QuadJetThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_QuadJet30_v1")             {if (MuHadFlag<0 || MuHadFlag>12) MuHadFlag=12;
          		 if (MuThresh<-3) MuThresh=-3;
                         if (QuadJetThresh<-30) QuadJetThresh=-30;}
		    // Mu+e+HT (don't use)
                    else if (trigNames.triggerName(i)=="HLT_Mu5_Ele8_CaloIdT_TrkIdVL_HT150_v1")  {if (MuHadFlag<-1) MuHadFlag=-1;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_Ele8_CaloIdL_TrkIdVL_HT160_v3")  {if (MuHadFlag<-1) MuHadFlag=-1;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_Ele8_CaloIdL_TrkIdVL_HT160_v2")  {if (MuHadFlag<-1) MuHadFlag=-1;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_Ele8_CaloIdL_TrkIdVL_HT150_v3")  {if (MuHadFlag<-1) MuHadFlag=-1;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_Ele8_CaloIdL_TrkIdVL_HT150_v2")  {if (MuHadFlag<-1) MuHadFlag=-1;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_Ele8_CaloIdL_TrkIdVL_HT150_v1")  {if (MuHadFlag<-1) MuHadFlag=-1;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_Ele8_CaloIdT_TrkIdVL_HT150_v6")  {if (MuHadFlag<-1) MuHadFlag=-1;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_Ele8_CaloIdT_TrkIdVL_HT150_v4")  {if (MuHadFlag<-1) MuHadFlag=-1;}
		    // what is this?
                    else if (trigNames.triggerName(i)=="HLT_Mu10_R025_MR200_v1")                 {if (MuHadFlag<-5) MuHadFlag=-5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu10_R005_MR200_v1")                 {if (MuHadFlag<-5) MuHadFlag=-5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_R025_MR200_v7")                  {if (MuHadFlag<-5) MuHadFlag=-5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_R025_MR200_v5")                  {if (MuHadFlag<-5) MuHadFlag=-5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_R025_MR200_v3")                  {if (MuHadFlag<-5) MuHadFlag=-5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_R020_MR200_v4")                  {if (MuHadFlag<-5) MuHadFlag=-5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_R020_MR200_v3")                  {if (MuHadFlag<-5) MuHadFlag=-5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_R020_MR200_v1")                  {if (MuHadFlag<-5) MuHadFlag=-5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_R005_MR200_v7")                  {if (MuHadFlag<-5) MuHadFlag=-5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_R005_MR200_v5")                  {if (MuHadFlag<-5) MuHadFlag=-5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_R005_MR200_v4")                  {if (MuHadFlag<-5) MuHadFlag=-5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_R005_MR200_v3")                  {if (MuHadFlag<-5) MuHadFlag=-5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_R005_MR200_v1")                  {if (MuHadFlag<-5) MuHadFlag=-5;}

                    else MuHadTrigThis = false;

                    // check and set whether trigger for MuHad dataset has fired
                    if (MuHadTrigThis) MuHadTrig = true; 
 


                    // DoubleMu triggers for 2011 and 2012 (and 2016)
                    // can occur exclusively on DoubleMu sample only, but can also occur on other samples if non-exclusive
                    //          --  have all been checked for real occurrence in DoubleMu sample :-)
                    bool DoubleMuTrigThis = true;

                    //
                    // inclusive L2 and L1 dimuon triggers 2011 (thresholds intrinsically differ from HLT ones) 
                    if      (trigNames.triggerName(i)=="HLT_L2DoubleMu35_NoVertex_v1") {if (DoubleMuThresh<0 || DoubleMuThresh>35) DoubleMuThresh=35;}
                    // 2011 MC
                    else if (trigNames.triggerName(i)=="HLT_L2DoubleMu30_NoVertex_v5") {if (DoubleMuThresh<0 || DoubleMuThresh>30) DoubleMuThresh=30;}

                    else if (trigNames.triggerName(i)=="HLT_L2DoubleMu30_NoVertex_v3") {if (DoubleMuThresh<0 || DoubleMuThresh>30) DoubleMuThresh=30;}
                    else if (trigNames.triggerName(i)=="HLT_L2DoubleMu30_NoVertex_v1") {if (DoubleMuThresh<0 || DoubleMuThresh>30) DoubleMuThresh=30;}
                    // 2011 MC
                    else if (trigNames.triggerName(i)=="HLT_L2DoubleMu23_NoVertex_v7") {if (DoubleMuThresh<0 || DoubleMuThresh>23) DoubleMuThresh=23;}

                    else if (trigNames.triggerName(i)=="HLT_L2DoubleMu23_NoVertex_v7") {if (DoubleMuThresh<0 || DoubleMuThresh>23) DoubleMuThresh=23;}
                    else if (trigNames.triggerName(i)=="HLT_L2DoubleMu23_NoVertex_v5") {if (DoubleMuThresh<0 || DoubleMuThresh>23) DoubleMuThresh=23;}
                    else if (trigNames.triggerName(i)=="HLT_L2DoubleMu23_NoVertex_v4") {if (DoubleMuThresh<0 || DoubleMuThresh>23) DoubleMuThresh=23;}
                    else if (trigNames.triggerName(i)=="HLT_L2DoubleMu23_NoVertex_v3") {if (DoubleMuThresh<0 || DoubleMuThresh>23) DoubleMuThresh=23;}
                    else if (trigNames.triggerName(i)=="HLT_L2DoubleMu23_NoVertex_v2") {if (DoubleMuThresh<0 || DoubleMuThresh>23) DoubleMuThresh=23;}
                    else if (trigNames.triggerName(i)=="HLT_L2DoubleMu23_NoVertex_v1") {if (DoubleMuThresh<0 || DoubleMuThresh>23) DoubleMuThresh=23;}
                    // 2011 MC
                    else if (trigNames.triggerName(i)=="HLT_L2DoubleMu0_v8")           {if (DoubleMuThresh<0 || DoubleMuThresh>0)  DoubleMuThresh=0;}

                    else if (trigNames.triggerName(i)=="HLT_L2DoubleMu0_v7")           {if (DoubleMuThresh<0 || DoubleMuThresh>0)  DoubleMuThresh=0;}
                    else if (trigNames.triggerName(i)=="HLT_L2DoubleMu0_v6")           {if (DoubleMuThresh<0 || DoubleMuThresh>0)  DoubleMuThresh=0;}
                    else if (trigNames.triggerName(i)=="HLT_L2DoubleMu0_v5")           {if (DoubleMuThresh<0 || DoubleMuThresh>0)  DoubleMuThresh=0;}
                    else if (trigNames.triggerName(i)=="HLT_L2DoubleMu0_v4")           {if (DoubleMuThresh<0 || DoubleMuThresh>0)  DoubleMuThresh=0;}
                    else if (trigNames.triggerName(i)=="HLT_L2DoubleMu0_v3")           {if (DoubleMuThresh<0 || DoubleMuThresh>0)  DoubleMuThresh=0;}
                    else if (trigNames.triggerName(i)=="HLT_L2DoubleMu0_v2")           {if (DoubleMuThresh<0 || DoubleMuThresh>0)  DoubleMuThresh=0;}
                    // 2011 MC
                    else if (trigNames.triggerName(i)=="HLT_L1DoubleMu0_v5")           {if (DoubleMuThresh<0 || DoubleMuThresh>0)  DoubleMuThresh=0;}

                    else if (trigNames.triggerName(i)=="HLT_L1DoubleMu0_v4")           {if (DoubleMuThresh<0 || DoubleMuThresh>0)  DoubleMuThresh=0;}
                    else if (trigNames.triggerName(i)=="HLT_L1DoubleMu0_v3")           {if (DoubleMuThresh<0 || DoubleMuThresh>0)  DoubleMuThresh=0;}
                    else if (trigNames.triggerName(i)=="HLT_L1DoubleMu0_v2")           {if (DoubleMuThresh<0 || DoubleMuThresh>0)  DoubleMuThresh=0;}
                    else if (trigNames.triggerName(i)=="HLT_L1DoubleMu0_v1")           {if (DoubleMuThresh<0 || DoubleMuThresh>0)  DoubleMuThresh=0;}
                    // inclusive L2 and L1 dimuon triggers 2012
                    else if (trigNames.triggerName(i)=="HLT_L2DoubleMu23_NoVertex_v10") {if (DoubleMuThresh<0 || DoubleMuThresh>23) DoubleMuThresh=23;}
                    else if (trigNames.triggerName(i)=="HLT_L2DoubleMu23_NoVertex_v11") {if (DoubleMuThresh<0 || DoubleMuThresh>23) DoubleMuThresh=23;}
                    else if (trigNames.triggerName(i)=="HLT_L2DoubleMu23_NoVertex_2Cha_Angle2p5_v2") {if (DoubleMuThresh<0 || DoubleMuThresh>23) DoubleMuThresh=23;}
                    else if (trigNames.triggerName(i)=="HLT_L2DoubleMu23_NoVertex_2Cha_Angle2p5_v3") {if (DoubleMuThresh<0 || DoubleMuThresh>23) DoubleMuThresh=23;}
                    // inclusive L2 and L1 dimuon triggers 2016
                    else if (trigNames.triggerName(i)=="HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10_v4") {if (DoubleMuThresh<0 || DoubleMuThresh>28) DoubleMuThresh=28;}
                    // 2011 MC
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu45_v11")               {if (DoubleMuThresh<0||DoubleMuThresh>45) DoubleMuThresh=45;}
                    // inclusive dimuon triggers 2011
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu45_v6")               {if (DoubleMuThresh<0||DoubleMuThresh>45) DoubleMuThresh=45;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu45_v5")               {if (DoubleMuThresh<0||DoubleMuThresh>45) DoubleMuThresh=45;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu45_v3")               {if (DoubleMuThresh<0||DoubleMuThresh>45) DoubleMuThresh=45;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu45_v2")               {if (DoubleMuThresh<0||DoubleMuThresh>45) DoubleMuThresh=45;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu45_v1")               {if (DoubleMuThresh<0||DoubleMuThresh>45) DoubleMuThresh=45;}
                    // 2016 data
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu33NoFiltersNoVtx_v3") {if (DoubleMuThresh<0||DoubleMuThresh>33) DoubleMuThresh=33;}
                    else if (trigNames.triggerName(i)=="HLT_Mu27_TkMu8_v3")               {if (DoubleMuThresh<0||DoubleMuThresh>27) DoubleMuThresh=27;}
                    else if (trigNames.triggerName(i)=="HLT_Mu27_TkMu8_DZ_v3")            {if (DoubleMuThresh<0||DoubleMuThresh>27) DoubleMuThresh=27;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu23NoFiltersNoVtxDisplaced_v3") {if (DoubleMuThresh<0||DoubleMuThresh>23) DoubleMuThresh=23;}
                    else if (trigNames.triggerName(i)=="HLT_Mu20_Mu10_v3")                {if (DoubleMuThresh<0||DoubleMuThresh>20) DoubleMuThresh=20;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu18NoFiltersNoVtx_v3") {if (DoubleMuThresh<0||DoubleMuThresh>18) DoubleMuThresh=18;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v4") {if (DoubleMuThresh<0||DoubleMuThresh>17) DoubleMuThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_v3") {if (DoubleMuThresh<0||DoubleMuThresh>17) DoubleMuThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_Mu8_SameSign_v3")        {if (DoubleMuThresh<0||DoubleMuThresh>17) DoubleMuThresh=17;}
		    // the next three might not be needed (2011 data?)
                    // else if (trigNames.triggerName(i)=="HLT_Mu17_Mu8_v6")              {if (DoubleMuThresh<0||DoubleMuThresh>17) DoubleMuThresh=17;}
                    // else if (trigNames.triggerName(i)=="HLT_Mu17_Mu8_v4")              {if (DoubleMuThresh<0||DoubleMuThresh>17) DoubleMuThresh=17;}
                    // 2016 data
                    else if (trigNames.triggerName(i)=="HLT_Mu17_Mu8_v3")                 {if (DoubleMuThresh<0||DoubleMuThresh>17) DoubleMuThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_TkMu8_DZ_v3")            {if (DoubleMuThresh<0||DoubleMuThresh>17) DoubleMuThresh=17;}
                    // 2011 MC
                    else if (trigNames.triggerName(i)=="HLT_Mu13_Mu8_v12")                {if (DoubleMuThresh<0||DoubleMuThresh>13) DoubleMuThresh=13;}

                    else if (trigNames.triggerName(i)=="HLT_Mu13_Mu8_v7")                 {if (DoubleMuThresh<0||DoubleMuThresh>13) DoubleMuThresh=13;}
                    else if (trigNames.triggerName(i)=="HLT_Mu13_Mu8_v6")                 {if (DoubleMuThresh<0||DoubleMuThresh>13) DoubleMuThresh=13;}
                    else if (trigNames.triggerName(i)=="HLT_Mu13_Mu8_v4")                 {if (DoubleMuThresh<0||DoubleMuThresh>13) DoubleMuThresh=13;}
                    else if (trigNames.triggerName(i)=="HLT_Mu13_Mu8_v3")                 {if (DoubleMuThresh<0||DoubleMuThresh>13) DoubleMuThresh=13;}
                    else if (trigNames.triggerName(i)=="HLT_Mu13_Mu8_v2")                 {if (DoubleMuThresh<0||DoubleMuThresh>13) DoubleMuThresh=13;}
                    // 2011 MC
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu7_v13")               {if (DoubleMuThresh<0||DoubleMuThresh>7)  DoubleMuThresh=7;}

                    else if (trigNames.triggerName(i)=="HLT_DoubleMu7_v8")                {if (DoubleMuThresh<0||DoubleMuThresh>7)  DoubleMuThresh=7;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu7_v7")                {if (DoubleMuThresh<0||DoubleMuThresh>7)  DoubleMuThresh=7;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu7_v5")                {if (DoubleMuThresh<0||DoubleMuThresh>7)  DoubleMuThresh=7;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu7_v4")                {if (DoubleMuThresh<0||DoubleMuThresh>7)  DoubleMuThresh=7;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu7_v3")                {if (DoubleMuThresh<0||DoubleMuThresh>7)  DoubleMuThresh=7;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu7_v2")                {if (DoubleMuThresh<0||DoubleMuThresh>7)  DoubleMuThresh=7;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu7_v1")                {if (DoubleMuThresh<0||DoubleMuThresh>7)  DoubleMuThresh=7;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu6_v8")                {if (DoubleMuThresh<0||DoubleMuThresh>6)  DoubleMuThresh=6;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu6_v7")                {if (DoubleMuThresh<0||DoubleMuThresh>6)  DoubleMuThresh=6;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu6_v5")                {if (DoubleMuThresh<0||DoubleMuThresh>6)  DoubleMuThresh=6;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu6_v4")                {if (DoubleMuThresh<0||DoubleMuThresh>6)  DoubleMuThresh=6;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu6_v3")                {if (DoubleMuThresh<0||DoubleMuThresh>6)  DoubleMuThresh=6;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu6_v2")                {if (DoubleMuThresh<0||DoubleMuThresh>6)  DoubleMuThresh=6;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu6_v1")                {if (DoubleMuThresh<0||DoubleMuThresh>6)  DoubleMuThresh=6;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu6_Acoplanarity03_v1") {if (DoubleMuThresh<-16)  DoubleMuThresh=-16;}
                    // 2011 MC
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu5_v6")                {if (DoubleMuThresh<0||DoubleMuThresh>5)  DoubleMuThresh=5;}

                    else if (trigNames.triggerName(i)=="HLT_DoubleMu5_v1")                {if (DoubleMuThresh<0||DoubleMuThresh>5)  DoubleMuThresh=5;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu5_Acoplanarity03_v6") {if (DoubleMuThresh<-15)  DoubleMuThresh=-15;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu5_Acoplanarity03_v5") {if (DoubleMuThresh<-15)  DoubleMuThresh=-15;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu5_Acoplanarity03_v3") {if (DoubleMuThresh<-15)  DoubleMuThresh=-15;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu5_Acoplanarity03_v2") {if (DoubleMuThresh<-15)  DoubleMuThresh=-15;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu5_Acoplanarity03_v1") {if (DoubleMuThresh<-15)  DoubleMuThresh=-15;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu4_Acoplanarity03_v8") {if (DoubleMuThresh<-14)  DoubleMuThresh=-14;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu4_Acoplanarity03_v6") {if (DoubleMuThresh<-14)  DoubleMuThresh=-14;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu4_Acoplanarity03_v5") {if (DoubleMuThresh<-14)  DoubleMuThresh=-14;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu4_Acoplanarity03_v4") {if (DoubleMuThresh<-14)  DoubleMuThresh=-14;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu4_Acoplanarity03_v3") {if (DoubleMuThresh<-14)  DoubleMuThresh=-14;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu4_Acoplanarity03_v2") {if (DoubleMuThresh<-14)  DoubleMuThresh=-14;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu4_Acoplanarity03_v1") {if (DoubleMuThresh<-14)  DoubleMuThresh=-14;}
                    // 2011 MC
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu3_v15")               {if (DoubleMuThresh<0||DoubleMuThresh>3)  DoubleMuThresh=3;}
           
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu3_v10")               {if (DoubleMuThresh<0||DoubleMuThresh>3)  DoubleMuThresh=3;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu3_v9")                {if (DoubleMuThresh<0||DoubleMuThresh>3)  DoubleMuThresh=3;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu3_v7")                {if (DoubleMuThresh<0||DoubleMuThresh>3)  DoubleMuThresh=3;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu3_v6")                {if (DoubleMuThresh<0||DoubleMuThresh>3)  DoubleMuThresh=3;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu3_v5")                {if (DoubleMuThresh<0||DoubleMuThresh>3)  DoubleMuThresh=3;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu3_v4")                {if (DoubleMuThresh<0||DoubleMuThresh>3)  DoubleMuThresh=3;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu3_v3")                {if (DoubleMuThresh<0||DoubleMuThresh>3)  DoubleMuThresh=3;}
                    // inclusive dimuon triggers 2012
                    else if (trigNames.triggerName(i)=="HLT_Mu22_TkMu8_v5")               {if (DoubleMuThresh<0||DoubleMuThresh>22) DoubleMuThresh=22;}
                    else if (trigNames.triggerName(i)=="HLT_Mu22_TkMu8_v6")               {if (DoubleMuThresh<0||DoubleMuThresh>22) DoubleMuThresh=22;}
                    else if (trigNames.triggerName(i)=="HLT_Mu22_TkMu8_v7")               {if (DoubleMuThresh<0||DoubleMuThresh>22) DoubleMuThresh=22;}
                    else if (trigNames.triggerName(i)=="HLT_Mu22_TkMu8_v8")               {if (DoubleMuThresh<0||DoubleMuThresh>22) DoubleMuThresh=22;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_TkMu8_v10")              {if (DoubleMuThresh<0||DoubleMuThresh>17) DoubleMuThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_TkMu8_v11")              {if (DoubleMuThresh<0||DoubleMuThresh>17) DoubleMuThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_TkMu8_v12")              {if (DoubleMuThresh<0||DoubleMuThresh>17) DoubleMuThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_TkMu8_v13")              {if (DoubleMuThresh<0||DoubleMuThresh>17) DoubleMuThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_Mu8_v17")                {if (DoubleMuThresh<0||DoubleMuThresh>17) DoubleMuThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Mu13_Mu8_v17")                {if (DoubleMuThresh<0||DoubleMuThresh>13) DoubleMuThresh=13;}
                    else if (trigNames.triggerName(i)=="HLT_Mu13_Mu8_v18")                {if (DoubleMuThresh<0||DoubleMuThresh>13) DoubleMuThresh=13;}
                    else if (trigNames.triggerName(i)=="HLT_Mu13_Mu8_v19")                {if (DoubleMuThresh<0||DoubleMuThresh>13) DoubleMuThresh=13;}
                    else if (trigNames.triggerName(i)=="HLT_Mu13_Mu8_v21")                {if (DoubleMuThresh<0||DoubleMuThresh>13) DoubleMuThresh=13;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu11_Acoplanarity03_v3") {if (DoubleMuThresh<-21)  DoubleMuThresh=-21;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu11_Acoplanarity03_v4") {if (DoubleMuThresh<-21)  DoubleMuThresh=-21;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu11_Acoplanarity03_v5") {if (DoubleMuThresh<-21)  DoubleMuThresh=-21;}
                    // 2011 MC
                    else if (trigNames.triggerName(i)=="HLT_TripleMu5_v14")                {if (DoubleMuThresh<-5) DoubleMuThresh=-5;}
                    // inclusive trimuon triggers 2011
                    else if (trigNames.triggerName(i)=="HLT_TripleMu5_v9")                {if (DoubleMuThresh<-5) DoubleMuThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_TripleMu5_v8")                {if (DoubleMuThresh<-5) DoubleMuThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_TripleMu5_v6")                {if (DoubleMuThresh<-5) DoubleMuThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_TripleMu5_v5")                {if (DoubleMuThresh<-5) DoubleMuThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_TripleMu5_v4")                {if (DoubleMuThresh<-5) DoubleMuThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_TripleMu5_v3")                {if (DoubleMuThresh<-5) DoubleMuThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_TripleMu5_v2")                {if (DoubleMuThresh<-5) DoubleMuThresh=-5;}
                    // inclusive trimuon triggers 2016
                    else if (trigNames.triggerName(i)=="HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx_v4") {if (DoubleMuThresh<-15) DoubleMuThresh=-15;}
                    else if (trigNames.triggerName(i)=="HLT_TripleMu_12_10_5_v3")          {if (DoubleMuThresh<-12) DoubleMuThresh=-12;}
                    else if (trigNames.triggerName(i)=="HLT_TripleMu_5_3_3_v2")            {if (DoubleMuThresh<-5) DoubleMuThresh=-5;}
                     // inclusive trimuon triggers 2012
                    else if (trigNames.triggerName(i)=="HLT_TripleMu5_v17")                {if (DoubleMuThresh<-5) DoubleMuThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_TripleMu5_v18")                {if (DoubleMuThresh<-5) DoubleMuThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_TripleMu5_v19")                {if (DoubleMuThresh<-5) DoubleMuThresh=-5;}
                    // Mu-Jet triggers 2011 (on DoubleMu dataset)
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Jet40_v10")   {if (MuHadFlag<0 || MuHadFlag>2) MuHadFlag=2;
                         if (MuThresh<-8) MuThresh=-8;
                         if (JetThresh<-40) JetThresh=-40;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Jet40_v9")    {if (MuHadFlag<0 || MuHadFlag>2) MuHadFlag=2;
                         if (MuThresh<-8) MuThresh=-8;
                         if (JetThresh<-40) JetThresh=-40;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Jet40_v7")    {if (MuHadFlag<0 || MuHadFlag>2) MuHadFlag=2;
                         if (MuThresh<-8) MuThresh=-8;
                         if (JetThresh<-40) JetThresh=-40;} 
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Jet40_v6")    {if (MuHadFlag<0 || MuHadFlag>2) MuHadFlag=2;
                         if (MuThresh<-8) MuThresh=-8;
                         if (JetThresh<-40) JetThresh=-40;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Jet40_v5")    {if (MuHadFlag<0 || MuHadFlag>2) MuHadFlag=2;
                         if (MuThresh<-8) MuThresh=-8;
                         if (JetThresh<-40) JetThresh=-40;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Jet40_v4")    {if (MuHadFlag<0 || MuHadFlag>2) MuHadFlag=2;
                         if (MuThresh<-8) MuThresh=-8;
                         if (JetThresh<-40) JetThresh=-40;} 
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Jet40_v3")    {if (MuHadFlag<0 || MuHadFlag>2) MuHadFlag=2;
                         if (MuThresh<-8) MuThresh=-8;
                         if (JetThresh<-40) JetThresh=-40;}  
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Jet40_v2")    {if (MuHadFlag<0 || MuHadFlag>2) MuHadFlag=2;
                         if (MuThresh<-8) MuThresh=-8;
                         if (JetThresh<-40) JetThresh=-40;}
                    // Mu-Jet triggers 2016 (on DoubleMu dataset)
                    else if (trigNames.triggerName(i)=="HLT_Mu3_PFJet40_v4")   {if (MuHadFlag<0 || MuHadFlag>2) MuHadFlag=2;
                         if (MuThresh<-3) MuThresh=-3;
                         if (JetThresh<-40) JetThresh=-40;}
                    else if (trigNames.triggerName(i)=="HLT_Mu10_CentralPFJet30_BTagCSV_p13_v3")   {if (MuHadFlag<0 || MuHadFlag>5) MuHadFlag=5;
                         if (MuThresh<-10) MuThresh=-10;
                         if (BThresh<-30) BThresh=-30;}
                    // DiMu-HT triggers 2016 (on DoubleMu dataset)
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu8_Mass8_PFHT300_v7") {if (MuHadFlag<0||MuHadFlag>4) MuHadFlag=4;
                         if (DoubleMuThresh<-8) DoubleMuThresh=-8;
                         if (HTThresh<-300) HTThresh=-300;}
                    // Inclusive Mu triggers 2012 (on DoubleMu dataset)
                    else if (trigNames.triggerName(i)=="HLT_Mu17_v3")   {if (MuThresh<0 || MuThresh>17) MuThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_v4")   {if (MuThresh<0 || MuThresh>17) MuThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_v5")   {if (MuThresh<0 || MuThresh>17) MuThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_v16")   {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_v17")   {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_v18")   {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    // Inclusive Mu triggers 2016 (on DoubleMu dataset)
                    else if (trigNames.triggerName(i)=="HLT_Mu8_v4")    {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_TrkIsoVVL_v4")  {if (IsoMuThresh<0 || IsoMuThresh>8) IsoMuThresh=8;}

                    else DoubleMuTrigThis = false;

                    // check and set whether trigger for DoubleMu dataset has fired
                    if (DoubleMuTrigThis) DoubleMuTrig = true; 
 


                    // MuEG triggers for 2011
                    // can occur exclusively on MuEG sample only, but can also occur on other samples if non-exclusive
                    //          --  have all been checked for real occurrence in MuEG sample :-)
                    bool MuEGTrigThis = true;

                    //
		    // introduce MuEGFlag=1 for Mu+Photon, 2 for Mu+Electron, 3 for DiMu+Electron, 4 for Mu+DiElectron, 
                    //                    5 for Mu+Diphoton, 
                    // inclusive muon+electron triggers 
                    if      (trigNames.triggerName(i)=="HLT_Mu17_Ele8_CaloIdL_v1")           {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_Ele8_CaloIdL_v2")           {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_Ele8_CaloIdL_v3")           {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_Ele8_CaloIdL_v4")           {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_Ele8_CaloIdL_v5")           {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_Ele8_CaloIdL_v6")           {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_Ele8_CaloIdL_v8")           {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_Ele8_CaloIdL_v9")           {if (MuEGFlag<1) MuEGFlag=2;}
                    // 2011 MC
                    else if (trigNames.triggerName(i)=="HLT_Mu17_Ele8_CaloIdL_v14")           {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu17_Ele8_CaloIdT_CaloIsoVL_v9") {if (MuEGFlag<1) MuEGFlag=2;}

                    else if (trigNames.triggerName(i)=="HLT_Mu17_Ele8_CaloIdT_CaloIsoVL_v1") {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu10_Ele10_CaloIdL_v2")          {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu10_Ele10_CaloIdL_v3")          {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu10_Ele10_CaloIdL_v4")          {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Ele17_CaloIdL_v1")           {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Ele17_CaloIdL_v2")           {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Ele17_CaloIdL_v3")           {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Ele17_CaloIdL_v4")           {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Ele17_CaloIdL_v5")           {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Ele17_CaloIdL_v6")           {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Ele17_CaloIdL_v8")           {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Ele17_CaloIdL_v9")           {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Ele17_CaloIdT_CaloIsoVL_v1") {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Ele17_CaloIdT_CaloIsoVL_v3") {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Ele17_CaloIdT_CaloIsoVL_v4") {if (MuEGFlag<1) MuEGFlag=2;}
                    // really? MuHad?
//                    else if (trigNames.triggerName(i)=="HLT_Mu5_Ele8_CaloIdT_TrkIdVL_HT150_v1") {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_Ele8_CaloIdT_CaloIsoVL_v1")  {if (MuEGFlag<1) MuEGFlag=2;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_Ele8_CaloIdT_CaloIsoVL_v2")  {if (MuEGFlag<1) MuEGFlag=2;}
                    // inclusive muon+photon triggers
                    else if (trigNames.triggerName(i)=="HLT_Mu15_Photon20_CaloIdL_v2")      {if (MuEGFlag<1) MuEGFlag=1;}
                    else if (trigNames.triggerName(i)=="HLT_Mu15_Photon20_CaloIdL_v3")      {if (MuEGFlag<1) MuEGFlag=1;}
                    else if (trigNames.triggerName(i)=="HLT_Mu15_Photon20_CaloIdL_v4")      {if (MuEGFlag<1) MuEGFlag=1;}
                    else if (trigNames.triggerName(i)=="HLT_Mu15_Photon20_CaloIdL_v5")      {if (MuEGFlag<1) MuEGFlag=1;}
                    else if (trigNames.triggerName(i)=="HLT_Mu15_Photon20_CaloIdL_v6")      {if (MuEGFlag<1) MuEGFlag=1;}
                    else if (trigNames.triggerName(i)=="HLT_Mu15_Photon20_CaloIdL_v7")      {if (MuEGFlag<1) MuEGFlag=1;}
                    else if (trigNames.triggerName(i)=="HLT_Mu15_Photon20_CaloIdL_v9")      {if (MuEGFlag<1) MuEGFlag=1;}
                    else if (trigNames.triggerName(i)=="HLT_Mu15_Photon20_CaloIdL_v10")     {if (MuEGFlag<1) MuEGFlag=1;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Photon20_CaloIdVT_IsoT_v2") {if (MuEGFlag<1) MuEGFlag=1;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Photon20_CaloIdVT_IsoT_v3") {if (MuEGFlag<1) MuEGFlag=1;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Photon20_CaloIdVT_IsoT_v4") {if (MuEGFlag<1) MuEGFlag=1;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Photon20_CaloIdVT_IsoT_v5") {if (MuEGFlag<1) MuEGFlag=1;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Photon20_CaloIdVT_IsoT_v6") {if (MuEGFlag<1) MuEGFlag=1;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Photon20_CaloIdVT_IsoT_v8") {if (MuEGFlag<1) MuEGFlag=1;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_Photon20_CaloIdVT_IsoT_v9") {if (MuEGFlag<1) MuEGFlag=1;}
                    // inclusive dimuon+electron triggers
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu5_Ele8_v2")                 {if (MuEGFlag<1) MuEGFlag=3;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu5_Ele8_v3")                 {if (MuEGFlag<1) MuEGFlag=3;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu5_Ele8_v4")                 {if (MuEGFlag<1) MuEGFlag=3;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu5_Ele8_v5")                 {if (MuEGFlag<1) MuEGFlag=3;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu5_Ele8_v6")                 {if (MuEGFlag<1) MuEGFlag=3;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu5_Ele8_CaloIdL_TrkIdVL_v7") {if (MuEGFlag<1) MuEGFlag=3;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu5_Ele8_CaloIdL_TrkIdVL_v9") {if (MuEGFlag<1) MuEGFlag=3;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu5_Ele8_CaloIdL_TrkIdVL_v10"){if (MuEGFlag<1) MuEGFlag=3;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu5_Ele8_CaloIdT_TrkIdVL_v4") {if (MuEGFlag<1) MuEGFlag=3;}
                    // inclusive muon+dielectron triggers
                    else if (trigNames.triggerName(i)=="HLT_Mu5_DoubleEle8_v2")                 {if (MuEGFlag<1) MuEGFlag=4;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_DoubleEle8_v3")                 {if (MuEGFlag<1) MuEGFlag=4;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_DoubleEle8_v4")                 {if (MuEGFlag<1) MuEGFlag=4;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_DoubleEle8_CaloIdL_TrkIdVL_v2") {if (MuEGFlag<1) MuEGFlag=4;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_DoubleEle8_CaloIdT_TrkIdVL_v1") {if (MuEGFlag<1) MuEGFlag=4;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_DoubleEle8_CaloIdT_TrkIdVL_v3") {if (MuEGFlag<1) MuEGFlag=4;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_DoubleEle8_CaloIdT_TrkIdVL_v4") {if (MuEGFlag<1) MuEGFlag=4;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_Ele8_CaloIdL_TrkIdVL_Ele8_v4")  {if (MuEGFlag<1) MuEGFlag=4;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_Ele8_CaloIdL_TrkIdVL_Ele8_v5")  {if (MuEGFlag<1) MuEGFlag=4;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_Ele8_CaloIdT_TrkIdVL_Ele8_CaloIdL_TrkIdVL_v1") {if (MuEGFlag<1) MuEGFlag=4;}                    
                    else if (trigNames.triggerName(i)=="HLT_Mu5_Ele8_CaloIdT_TrkIdVL_Ele8_CaloIdL_TrkIdVL_v3") {if (MuEGFlag<1) MuEGFlag=4;}                    
                    else if (trigNames.triggerName(i)=="HLT_Mu5_Ele8_CaloIdT_TrkIdVL_Ele8_CaloIdL_TrkIdVL_v4") {if (MuEGFlag<1) MuEGFlag=4;}
                    // inclusive muon+diphoton triggers
                    else if (trigNames.triggerName(i)=="HLT_Mu15_DoublePhoton15_CaloIdL_v2")  {if (MuEGFlag<1) MuEGFlag=5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu15_DoublePhoton15_CaloIdL_v3")  {if (MuEGFlag<1) MuEGFlag=5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu15_DoublePhoton15_CaloIdL_v4")  {if (MuEGFlag<1) MuEGFlag=5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu15_DoublePhoton15_CaloIdL_v5")  {if (MuEGFlag<1) MuEGFlag=5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu15_DoublePhoton15_CaloIdL_v6")  {if (MuEGFlag<1) MuEGFlag=5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu15_DoublePhoton15_CaloIdL_v7")  {if (MuEGFlag<1) MuEGFlag=5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu15_DoublePhoton15_CaloIdL_v9")  {if (MuEGFlag<1) MuEGFlag=5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu15_DoublePhoton15_CaloIdL_v10") {if (MuEGFlag<1) MuEGFlag=5;}
                    
                    else MuEGTrigThis = false;

                    // check and set whether trigger for DoubleMu dataset has fired
                    if (MuEGTrigThis) MuEGTrig = true; 
 



                    // MuOnia triggers
                    // can occur exclusively on MuOnia sample only, but can also occur on other samples if non-exclusive
                    //          --  have all been checked for real occurrence in MuOnia sample :-)
                    //              the ones which are commented out without comment have been listed but do not occur 

                 // no MuOnia dataset for early runs
                 if (iEvent.run()>140000 || iEvent.run()<1002) {
                    bool MuOniaTrigThis = true;

                    //  
                    // inclusive Mu+L2 dimuon triggers
		    if      (trigNames.triggerName(i)=="HLT_Mu5_L2Mu0") {if (DoubleMuThresh<0 || DoubleMuThresh>6) DoubleMuThresh=6;} 
		    // else if (trigNames.triggerName(i)=="HLT_Mu3_L2Mu0") {if (DoubleMuThresh<0 || DoubleMuThresh>3) DoubleMuThresh=3;}
                    // inclusive low threshold dimuon triggers 
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu0")            DoubleMuThresh=1;  // also in MuMonitor (Run B)
                    else if (trigNames.triggerName(i)=="HLT_L1DoubleMuOpen_Tight") DoubleMuThresh=0;  // Run A
                    else if (iEvent.run() < 141900 && trigNames.triggerName(i)=="HLT_L1DoubleMuOpen") DoubleMuThresh=0;  // Run A, also on Mu or MuMonitor
                    else if (iEvent.run() < 145000 && trigNames.triggerName(i)=="HLT_L2DoubleMu0")          DoubleMuThresh=0;  // in list for Run 2010A, but moved to MuMonitor for Run B
                    // the following have a restricted mass (and pt/eta?) range 
                    // else if (trigNames.triggerName(i)=="HLT_Mu5_TkMu0_Jpsi")         {if (JpsiThresh<0 || JpsiThresh>5) JpsiThresh=5;}
                    // else if (trigNames.triggerName(i)=="HLT_Mu5_TkMu0_Jpsi_NoCharge"){if (JpsiThresh<0 || JpsiThresh>5) JpsiThresh=5;}
                    // else if (trigNames.triggerName(i)=="HLT_Mu5_TkMu0_OST_Jpsi")     {if (JpsiThresh<0 || JpsiThresh>5) JpsiThresh=5;}
                    // else if (trigNames.triggerName(i)=="HLT_Mu5_TkMu0_OST_Jpsi_Tight"){if(JpsiThresh<0 || JpsiThresh>5) JpsiThresh=5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_Track0_Jpsi_v2")     {if (JpsiThresh<0 || JpsiThresh>5) JpsiThresh=5;}
                    else if (trigNames.triggerName(i)=="HLT_Mu5_Track0_Jpsi")        {if (JpsiThresh<0 || JpsiThresh>5) JpsiThresh=5;}
                    // else if (trigNames.triggerName(i)=="HLT_Mu3_TkMu0_Jpsi")         {if (JpsiThresh<0 || JpsiThresh>3) JpsiThresh=3;}
                    // else if (trigNames.triggerName(i)=="HLT_Mu3_TkMu0_Jpsi_NoCharge"){if (JpsiThresh<0 || JpsiThresh>3) JpsiThresh=3;}
                    // else if (trigNames.triggerName(i)=="HLT_Mu3_TkMu0_OST_Jpsi")     {if (JpsiThresh<0 || JpsiThresh>3) JpsiThresh=3;}
                    // else if (trigNames.triggerName(i)=="HLT_Mu3_TkMu0_OST_Jpsi_Tight"){if(JpsiThresh<0 || JpsiThresh>3) JpsiThresh=3;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_Track5_Jpsi_v3")     {if (JpsiThresh<0 || JpsiThresh>3) JpsiThresh=3;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_Track5_Jpsi_v2")     {if (JpsiThresh<0 || JpsiThresh>3) JpsiThresh=3;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_Track5_Jpsi_v1")     {if (JpsiThresh<0 || JpsiThresh>3) JpsiThresh=3;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_Track3_Jpsi_v3")     {if (JpsiThresh<0 || JpsiThresh>3) JpsiThresh=3;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_Track3_Jpsi_v2")     {if (JpsiThresh<0 || JpsiThresh>3) JpsiThresh=3;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_Track3_Jpsi")        {if (JpsiThresh<0 || JpsiThresh>3) JpsiThresh=3;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_Track0_Jpsi")        {if (JpsiThresh<0 || JpsiThresh>3) JpsiThresh=3;} // Run 2010A
                    else if (iEvent.run()<141949 && trigNames.triggerName(i)=="HLT_Mu0_Track0_Jpsi")             JpsiThresh=0; // Run 2010A
                    else if (trigNames.triggerName(i)=="HLT_Mu0_TkMu0_Jpsi")              JpsiThresh=0; // Run 2010A
                    else if (trigNames.triggerName(i)=="HLT_Mu0_TkMu0_Jpsi_NoCharge")     JpsiThresh=0; // Run 2010A
                    else if (trigNames.triggerName(i)=="HLT_Mu0_TkMu0_OST_Jpsi")          JpsiThresh=0;  
                    else if (trigNames.triggerName(i)=="HLT_Mu0_TkMu0_OST_Jpsi_Tight_v3") JpsiThresh=0;
                    else if (trigNames.triggerName(i)=="HLT_Mu0_TkMu0_OST_Jpsi_Tight_v2") JpsiThresh=0;
                    // the following seem to select events in the mass range 1.5-20 GeV
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu0_Quarkonium_v1")     JpsiThresh=0;      
                    else if (trigNames.triggerName(i)=="HLT_DoubleMu0_Quarkonium_LS_v1")  JpsiThresh=0;
                    else MuOniaTrigThis = false; // none of the above fired

                    // check and set whether trigger for MuOnia dataset has fired
		    if (MuOniaTrigThis) MuOniaTrig = true;
                 } // early run cut

                    // If want to use MuOnia sample or Mu+MuOnia sample only, should quit here. 
                    // If want to merge MuOnia or Mu and MuOnia samples with MuMonitor sample, quit here if MuMonitor and already accepted by Mu or MuOnia 
                    // and continue if Mu or MuOnia (might still find lower trigger threshold).  
                    // If want to use MuMonitor only, should skip all of the above and add HLT_Mu3 (overlap with Mu). 



                    // MuMonitor triggers
                    // should only occur exclusively when running over the MuMonitor sample, can occur non-exlusively on all samples
                    //          --  have all been checked for real occurrence in MuMonitor sample :-)
                    //              the ones which are commented out without comment have been listed but do not occur 
                    bool MuMonitorTrigThis = true;
                    //
                    // inclusive L1 or L2 mu triggers,
                    if      (trigNames.triggerName(i)=="HLT_L2Mu30_v1"){if (MuL2Thresh<0||MuL2Thresh>30)MuL2Thresh=30;}
                    else if (iEvent.run()>145000 && trigNames.triggerName(i)=="HLT_L1Mu20")   {if (MuL1Thresh<0||MuL1Thresh>20)MuL1Thresh=20;} // not in list, moved from Mu for Run B 
                    else if (trigNames.triggerName(i)=="HLT_L1Mu7_v1") {if (MuL1Thresh<0||MuL1Thresh>7) MuL1Thresh=7;}
                    else if (trigNames.triggerName(i)=="HLT_L2Mu7_v1") {if (MuL2Thresh<0||MuL2Thresh>7) MuL2Thresh=7;}
                    else if (iEvent.run()>145000 && trigNames.triggerName(i)=="HLT_Mu7")      {if (MuThresh<0||MuThresh>7) MuThresh=7;} // not in list, duplicating Mu *** disentangle! ***
                    else if (iEvent.run()>138559 && trigNames.triggerName(i)=="HLT_L2Mu5")    {if (MuThresh<0||MuThresh>5) MuThresh=6;} // in Run A2
                    else if (iEvent.run()>145000 && trigNames.triggerName(i)=="HLT_Mu5")      {if (MuThresh<0||MuThresh>5) MuThresh=5;} // not in list, duplicating Mu *** disentangle! ***
                    else if (iEvent.run()>138559 && trigNames.triggerName(i)=="HLT_L2Mu3")    {if (MuL2Thresh<0||MuL2Thresh>3) MuL2Thresh=3;}
                    else if (trigNames.triggerName(i)=="HLT_Mu3_v2")   {if (MuThresh<0||MuThresh>3) MuThresh=3;} // only in MuMonitor?
                    else if (iEvent.run()>145000 && trigNames.triggerName(i)=="HLT_Mu3")      {if (MuThresh<0||MuThresh>3) MuThresh=3;} // in both Mu and MuMonitor list *** disentangle! ***
                    else if (trigNames.triggerName(i)=="HLT_Mu0_v2")          MuThresh=1;   
                    else if (trigNames.triggerName(i)=="HLT_L1Mu")           {MuL1Thresh=0; MuThresh=1;} // 0 is reserved for minimum bias 
                    else if (trigNames.triggerName(i)=="HLT_L1MuOpen_v2")    {MuL1Thresh=0; MuThresh=1;}       
                    else if (trigNames.triggerName(i)=="HLT_L1MuOpen")       {MuL1Thresh=0; MuThresh=1;}       
                    //revisit this! (code does not really make sense, but need some AntiBPTX logic, MuThresh not suited)   
                    else if (trigNames.triggerName(i)=="HLT_L1MuOpen_AntiBPTX") {ZeroBiasFlag=-2;}
                    else if (trigNames.triggerName(i)=="HLT_L1MuOpen_DT_v2") {MuL1Thresh=0; MuThresh=1;}   
                    else if (trigNames.triggerName(i)=="HLT_L1MuOpen_DT")    {MuL1Thresh=0; MuThresh=1;}   
                    else if (iEvent.run()>138559 && trigNames.triggerName(i)=="HLT_L2Mu0") {MuL2Thresh=0; MuThresh=1;} // also on Mu for Run A1
                    else if (iEvent.run()>141949 && trigNames.triggerName(i)=="HLT_Mu5_L1MuOpen") {if (DoubleMuThresh<0||DoubleMuThresh>6) DoubleMuThresh=6;} // Run A2 
                    else if (iEvent.run()>141949 && trigNames.triggerName(i)=="HLT_Mu3_L1MuOpen") {if (DoubleMuThresh<0||DoubleMuThresh>4) DoubleMuThresh=4;}
                    else if (iEvent.run()>141949 && trigNames.triggerName(i)=="HLT_Mu0_L1MuOpen")    DoubleMuThresh=0;
                    // always seems to occur together with HLT_L2DoubleMu0, but might trigger selection for MuMonitor in addition to Muonia 
                    else if (iEvent.run()>141949 && trigNames.triggerName(i)=="HLT_Mu0_L2Mu0")       DoubleMuThresh=0;     
                    else if (iEvent.run()>145000 && trigNames.triggerName(i)=="HLT_L2DoubleMu0")     DoubleMuThresh=0; // not in list,  moved from MuOnia for Run 2010B
                    else if (iEvent.run()>145000 && trigNames.triggerName(i)=="HLT_DoubleMu0")       DoubleMuThresh=0; // not in list,  duplicating MuOnia   
                    else if (iEvent.run()>141949 && trigNames.triggerName(i)=="HLT_L1DoubleMuOpen")  DoubleMuThresh=0; // on Mu for Run A1
                    // give some special treatment to this trigger, since it introduces a mass bias?
                    else if (iEvent.run()>141949 && trigNames.triggerName(i)=="HLT_Mu0_Track0_Jpsi") JpsiThresh=0;
                        // moved from Mu -> MuMonitor run A1 -> A2/B

                    else MuMonitorTrigThis = false; // none of the above fired

                    // check and set whether trigger for MuMonitor dataset has fired
                    if (MuMonitorTrigThis) MuMonitorTrig = true;

                    // temporary for AntiBPTX (do not set MuMonitor when fired, to avoid dataset ambiguity).
                    //    does not work for MuMonitor -> find other solution
                    //if (ZeroBiasFlag==-2) {MuMonitorTrigThis = false; MuMonitorTrig = false;}

		    //std::cout<<MuTrigThis<<MuTrig<<MuOniaTrigThis<<MuOniaTrig<<MuMonitorTrigThis<<MuMonitorTrig<<std::endl;

                    // additional muon trigger from MinimumBias dataset, not used for muon dataset ID 
                    // RPC based loose low pt muon trigger
                    //     https://twiki.cern.ch/twiki/bin/view/CMS/L1TechnicalTriggerBits_RPC
                    if (trigNames.triggerName(i)=="HLT_L1Tech_RPC_TTU_RBst1_collisions") {if (MuL1Thresh<0) MuL1Thresh=0;}

                    // additional muon triggers from Commissioning dataset, not used for muon dataset ID
                    if (trigNames.triggerName(i)=="HLT_Activity_CSC")                    {if (MuL1Thresh<0) MuL1Thresh=0;}
                    if (trigNames.triggerName(i)=="HLT_Activity_DT")                     {if (MuL1Thresh<0) MuL1Thresh=0;}
                    if (trigNames.triggerName(i)=="HLT_Activity_DT_Tuned")               {if (MuL1Thresh<0) MuL1Thresh=0;}
        
	          }
                }

                // B Parking triggers: displaced muons
                BParkingTrig = false;

                for(unsigned i= 0; i<trigNames.size(); i++) { 
                  if (triggerResultsHandle_->accept(i)==1){

                    // check B Parking triggers
                    // can occur exclusively on 2018 ParkingB sample only, but can also occur on other samples if non-exclusive
                    bool BParkTrigThis = true;

                    // displaced muon triggers
                    if      (trigNames.triggerName(i)=="HLT_Mu12_IP6_part0_v2")     {if (MuThresh<0 || MuThresh>12) MuThresh=12;}  // Run B+C
                    else if (trigNames.triggerName(i)=="HLT_Mu12_IP6_part1_v2")     {if (MuThresh<0 || MuThresh>12) MuThresh=12;}
                    else if (trigNames.triggerName(i)=="HLT_Mu12_IP6_part2_v2")     {if (MuThresh<0 || MuThresh>12) MuThresh=12;}
                    else if (trigNames.triggerName(i)=="HLT_Mu12_IP6_part3_v2")     {if (MuThresh<0 || MuThresh>12) MuThresh=12;}
                    else if (trigNames.triggerName(i)=="HLT_Mu12_IP6_part4_v2")     {if (MuThresh<0 || MuThresh>12) MuThresh=12;}
                    else if (trigNames.triggerName(i)=="HLT_Mu12_IP6_part5_v2")     {if (MuThresh<0 || MuThresh>12) MuThresh=12;}
                    else if (trigNames.triggerName(i)=="HLT_Mu10p5_IP3p5_part0_v1") {if (MuThresh<0 || MuThresh>10) MuThresh=10;}  // Run A
                    else if (trigNames.triggerName(i)=="HLT_Mu10p5_IP3p5_part1_v1") {if (MuThresh<0 || MuThresh>10) MuThresh=10;}
                    else if (trigNames.triggerName(i)=="HLT_Mu10p5_IP3p5_part2_v1") {if (MuThresh<0 || MuThresh>10) MuThresh=10;}
                    else if (trigNames.triggerName(i)=="HLT_Mu10p5_IP3p5_part3_v1") {if (MuThresh<0 || MuThresh>10) MuThresh=10;}
                    else if (trigNames.triggerName(i)=="HLT_Mu10p5_IP3p5_part4_v1") {if (MuThresh<0 || MuThresh>10) MuThresh=10;}
                    else if (trigNames.triggerName(i)=="HLT_Mu10p5_IP3p5_part5_v1") {if (MuThresh<0 || MuThresh>10) MuThresh=10;}
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP6_part0_v1")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}   // Run A
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP6_part1_v1")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP6_part2_v1")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP6_part3_v1")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP6_part4_v1")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP6_part5_v1")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP6_part0_v2")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}   // Run A
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP6_part1_v2")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP6_part2_v2")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP6_part3_v2")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP6_part4_v2")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP6_part5_v2")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP6_part0_v3")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}   // Run B+C
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP6_part1_v3")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP6_part2_v3")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP6_part3_v3")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP6_part4_v3")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP6_part5_v3")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP5_part0_v2")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}   // Run B+C
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP5_part1_v2")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP5_part2_v2")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP5_part3_v2")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP5_part4_v2")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}
                    else if (trigNames.triggerName(i)=="HLT_Mu9_IP5_part5_v2")      {if (MuThresh<0 || MuThresh>9) MuThresh=9;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_IP6_part3_v2")      {if (MuThresh<0 || MuThresh>8) MuThresh=8;}   // ??
                    else if (trigNames.triggerName(i)=="HLT_Mu8_IP5_part3_v2")      {if (MuThresh<0 || MuThresh>8) MuThresh=8;}   // ??
                    else if (trigNames.triggerName(i)=="HLT_Mu8_IP3_part0_v1")      {if (MuThresh<0 || MuThresh>8) MuThresh=8;}   // Run A
                    else if (trigNames.triggerName(i)=="HLT_Mu8_IP3_part1_v1")      {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_IP3_part2_v1")      {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_IP3_part3_v1")      {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_IP3_part4_v1")      {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_IP3_part5_v1")      {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_IP3_part0_v2")      {if (MuThresh<0 || MuThresh>8) MuThresh=8;}   // Run A
                    else if (trigNames.triggerName(i)=="HLT_Mu8_IP3_part1_v2")      {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_IP3_part2_v2")      {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_IP3_part3_v2")      {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_IP3_part4_v2")      {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_IP3_part5_v2")      {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_IP3_part0_v3")      {if (MuThresh<0 || MuThresh>8) MuThresh=8;}   // Run B
                    else if (trigNames.triggerName(i)=="HLT_Mu8_IP3_part1_v3")      {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_IP3_part2_v3")      {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_IP3_part3_v3")      {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_IP3_part4_v3")      {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8_IP3_part5_v3")      {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8p5_IP3p5_part0_v1")  {if (MuThresh<0 || MuThresh>8) MuThresh=8;}   // Run A 
                    else if (trigNames.triggerName(i)=="HLT_Mu8p5_IP3p5_part1_v1")  {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8p5_IP3p5_part2_v1")  {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8p5_IP3p5_part3_v1")  {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8p5_IP3p5_part4_v1")  {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu8p5_IP3p5_part5_v1")  {if (MuThresh<0 || MuThresh>8) MuThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Mu7_IP4_part0_v2")      {if (MuThresh<0 || MuThresh>7) MuThresh=7;}   // Run B
                    else if (trigNames.triggerName(i)=="HLT_Mu7_IP4_part1_v2")      {if (MuThresh<0 || MuThresh>7) MuThresh=7;}
                    else if (trigNames.triggerName(i)=="HLT_Mu7_IP4_part2_v2")      {if (MuThresh<0 || MuThresh>7) MuThresh=7;}
                    else if (trigNames.triggerName(i)=="HLT_Mu7_IP4_part3_v2")      {if (MuThresh<0 || MuThresh>7) MuThresh=7;}
                    else if (trigNames.triggerName(i)=="HLT_Mu7_IP4_part4_v2")      {if (MuThresh<0 || MuThresh>7) MuThresh=7;}
                    else if (trigNames.triggerName(i)=="HLT_Mu7_IP4_part5_v2")      {if (MuThresh<0 || MuThresh>7) MuThresh=7;}

		    else BParkTrigThis = false;  // none of the above has triggered

                    // check and set whether trigger for BTau dataset has fired
                    if (BParkTrigThis) BParkingTrig = true; 
        
	          }
                }


                // set MuThresh for L1/L2/Iso for events which did not set it directly
                if (MuThresh<-48 && MuL1Thresh==0)   MuThresh=-48;
                if (MuThresh<-47 && MuL1Thresh>0)    MuThresh=-47;
                if (MuThresh<-46 && MuL2Thresh>0)    MuThresh=-46;
                if (MuThresh<-45 && IsoMuThresh>-49) MuThresh=-45;
                if (MuThresh<-44 && IsoMuThresh>0)   MuThresh=-44;
                // so the events remaining at MuThresh=-49 for Mu sample should be DoubleMuThresh events ...

                // is this the right place? what e.g. about mu/had triggers in 2011?
	        //h151->Fill(MuThresh);		// fill single mu trigger threshold flag
	        //h152->Fill(IsoMuThresh);	// fill isolated single mu trigger threshold flag
	        //h153->Fill(DoubleMuThresh);	// fill double mu trigger threshold flag
	        //h154->Fill(JpsiThresh);		// fill Jpsi trigger threshold flag
                //h161->Fill(MuHadFlag);          // fill MuHad event type flag

                // *** the following lines are old obsolete logic ***
                // should select:
                // Mu dataset: 
                //     Muthresh>2 or IsoMuthresh>2 or DoubleMuthresh>2
                //     including veto on exclusive Mu+X triggers, *not* counting low pt/Jpsi triggers
                // MuOnia dataset:
                //     (0 < Muthresh < 3 or Doublemuthresh>-1 or Jpsithresh>-1) and not 
                //     (Muthresh>2 or IsoMuthresh>2 or DoubleMuthresh>2)
                //     no veto on exclusive mu+X triggers
                //     do not select on "good" high pt mu triggers to avoid overlap with mu sample
                // 

                // debug  print 
		//     		std::cout<<"MuThresh "<<MuThresh<<" IsoMuThresh "<<IsoMuThresh<<" DoubleMuThresh "<<DoubleMuThresh<<" JpsiThresh "<<JpsiThresh<<std::endl;

		//  for the moment any positive muon triggers are OK. Additional Mu+jet triggers and triggers from the BTau sample can be accepted via the 
                //  GoodJetTrig flag
                //  negative DoubleMuThresh values to be treated;
                //  beware, can e.g. not use trimuon trigger for NMB!? 
                if ( MuThresh > -1 || IsoMuThresh > -1 || MuHadFlag > -1 || DoubleMuThresh > -1 || MuEGFlag>-1 || JpsiThresh > -1) {
		  GoodMuTrig = true; 
                  return true;
                }
                else if ((Mudataset || MuHaddataset || DoubleMudataset || MuEGdataset || MuOniadataset || MuMonitordataset || BParkingdataset) &&  
                         MuThresh == -49 && IsoMuThresh == -49 && MuHadFlag == -10 && DoubleMuThresh == -49 && MuEGFlag == -10 && JpsiThresh == -49) {
// activate this for debug
                  std::cout<<" ****** no muon Trigger recognized ****** "<<std::endl;
                  for(unsigned i= 0; i<trigNames.size(); i++) {
                    // dump only accepted triggers 
                    if (triggerResultsHandle_->accept(i)==1){
                      std::cout<<" Trigger name "<<trigNames.triggerName(i)<<", Accepted = ";
                      std::cout<<triggerResultsHandle_->accept(i)<<std::endl;
	            }
                  }
#ifdef trigcheckabort
                  // abort the job if known to be muon data set
                  if ((dataset == "Mu" && !MuTrig) || (dataset == "MuHad" && !MuHadTrig) || (dataset == "DoubleMu" && !DoubleMuTrig) || (dataset == "MuEG" && !MuEGTrig) || (dataset == "MuOnia" && !MuOniaTrig) || (dataset == "MuMonitor" && !MuMonitorTrig)) exit(1);
#endif
                }
                return false;
}


//*************************************************************************
// ---- method called for each event to check good electron trigger ---- //
//*************************************************************************

bool NanoAnalyzer::providesGoodETrigger(const edm::Event& iEvent) {

// *************************************************************
//------------------ get and check trigger info ----------------
// *************************************************************

#ifndef CMSSW7plus
                edm::Handle<edm::TriggerResults> triggerResults;
                edm::Handle<edm::TriggerResults> triggerResultsHandle_;
                edm::InputTag trigResultsTag("TriggerResults","","HLT"); 
                iEvent.getByLabel(trigResultsTag,triggerResultsHandle_);
#endif
#ifdef CMSSW7plus
  //EDGetTokenT<edm::TriggerResults> trigTkn;
  //trigTkn = consumes< edm::TriggerResults>(edm::InputTag("TriggerResults","","HLT"));
  edm::Handle<edm::TriggerResults> triggerResultsHandle_;  
  iEvent.getByToken(trigTkn, triggerResultsHandle_);  
#endif

                // check whether trigger info was obtained successfully
                if (!triggerResultsHandle_.isValid()) {
		  std::cout << "Nano::goodTrigger: Error in getting TriggerResults product from Event!" << std::endl;
                  return false;
                }

                // get trigger names
                const edm::TriggerNames& trigNames = iEvent.triggerNames(*triggerResultsHandle_); 

//                // dump trigger information including accept flag
//                for(unsigned i= 0; i<trigNames.size(); i++) { 
//                  if (triggerResultsHandle_->accept(i)==1){
//                    std::cout<<" Trigger name "<<trigNames.triggerName(i)<<", Accepted = ";
//                    std::cout<<triggerResultsHandle_->accept(i)<<std::endl;
//      	    }
//                }

                // check Electron triggers
                // beware: cannot expect any particular ordering !!!
                ElectronTrig = false;
                DoubleElectronTrig = false;
                PhotonTrig = false;
                EGMonitorTrig = false;
                GoodETrig = false;

                for(unsigned i= 0; i<trigNames.size(); i++) { 
                  if (triggerResultsHandle_->accept(i)==1){

                    // single or double electron triggers for 2010B
                    // can occur exclusively on Electron sample only, but can also occur on other samples if non-exclusive
                    //          --  have all been checked for real occurrence in DoubleElectron sample :-)
                    bool ElectronTrigThis = true;

                    // single electron triggers
                    if      (trigNames.triggerName(i)=="HLT_Ele40_SW_L1R") {if (ElectronThresh<0 || ElectronThresh>40) ElectronThresh=40;}
                    else if (trigNames.triggerName(i)=="HLT_Ele32_SW_TighterEleId_L1R_v2") {if (ElectronThresh<0 || ElectronThresh>32) ElectronThresh=32;}
                    else if (trigNames.triggerName(i)=="HLT_Ele27_SW_TightCaloEleIdTrack_L1R_v1") {if (ElectronThresh<0 || ElectronThresh>27) ElectronThresh=27;}
                    else if (trigNames.triggerName(i)=="HLT_Ele22_SW_TighterEleId_L1R_v2") {if (ElectronThresh<0 || ElectronThresh>22) ElectronThresh=22;}
                    else if (trigNames.triggerName(i)=="HLT_Ele22_SW_TighterEleId_L1R_v3") {if (ElectronThresh<0 || ElectronThresh>22) ElectronThresh=22;}
                    else if (trigNames.triggerName(i)=="HLT_Ele22_SW_TighterCaloIdIsol_L1R_v1") {if (ElectronThresh<0 || ElectronThresh>22) ElectronThresh=22;}
                    else if (trigNames.triggerName(i)=="HLT_Ele22_SW_TighterCaloIdIsol_L1R_v2") {if (ElectronThresh<0 || ElectronThresh>22) ElectronThresh=22;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_SW_CaloEleId_L1R") {if (ElectronThresh<0 || ElectronThresh>17) ElectronThresh=17;}
                    //else if (trigNames.triggerName(i)=="HLT_Ele17_SW_EleId_L1R") {if (ElectronThresh<0 || ElectronThresh>17) ElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_SW_TightEleId_L1R") {if (ElectronThresh<0 || ElectronThresh>17) ElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_SW_TighterEleIdIsol_L1R_v2") {if (ElectronThresh<0 || ElectronThresh>17) ElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_SW_TighterEleIdIsol_L1R_v3") {if (ElectronThresh<0 || ElectronThresh>17) ElectronThresh=17;}
                    //else if (trigNames.triggerName(i)=="HLT_Ele12_SW_TightEleId_L1R") {if (ElectronThresh<0 || ElectronThresh>12) ElectronThresh=12;}
                    //else if (trigNames.triggerName(i)=="HLT_Ele12_SW_TightEleIdIsol_L1R") {if (ElectronThresh<0 || ElectronThresh>12) ElectronThresh=12;}
                    else if (trigNames.triggerName(i)=="HLT_Ele12_SW_TightEleIdIsol_NoDEtaInEE_L1R") {if (ElectronThresh<0 || ElectronThresh>12) ElectronThresh=12;}
                    //else if (trigNames.triggerName(i)=="HLT_Ele12_SW_TighterEleIdIsol_L1R") {if (ElectronThresh<0 || ElectronThresh>12) ElectronThresh=12;}
                    else if (trigNames.triggerName(i)=="HLT_Ele12_SW_TighterEleIdIsol_L1R_v1") {if (ElectronThresh<0 || ElectronThresh>12) ElectronThresh=12;}
                    else if (trigNames.triggerName(i)=="HLT_Ele12_SW_TighterEleIdIsol_L1R_v3") {if (ElectronThresh<0 || ElectronThresh>12) ElectronThresh=12;}
                    // 2010 Run A
                    else if (trigNames.triggerName(i)=="HLT_Ele25_SW_L1R") {if (ElectronThresh<0 || ElectronThresh>25) ElectronThresh=25;}
                    else if (trigNames.triggerName(i)=="HLT_Ele20_LW_L1R") {if (ElectronThresh<0 || ElectronThresh>20) ElectronThresh=20;}
                    else if (trigNames.triggerName(i)=="HLT_Ele20_SW_L1R") {if (ElectronThresh<0 || ElectronThresh>20) ElectronThresh=20;}
                    else if (run<141956 && trigNames.triggerName(i)=="HLT_Ele15_LW_L1R") {if (ElectronThresh<0 || ElectronThresh>15) ElectronThresh=15;}
                    else if (run<141956 && trigNames.triggerName(i)=="HLT_Ele15_SiStrip_L1R"){if (ElectronThresh<0 || ElectronThresh>15) ElectronThresh=15;}
                    else if (trigNames.triggerName(i)=="HLT_Ele15_SW_L1R"){if (ElectronThresh<0 || ElectronThresh>15) ElectronThresh=15;}
                    else if (trigNames.triggerName(i)=="HLT_Ele15_SW_EleId_L1R"){if (ElectronThresh<0 || ElectronThresh>15) ElectronThresh=15;}
                    else if (trigNames.triggerName(i)=="HLT_Ele15_SW_CaloEleId_L1R"){if (ElectronThresh<0 || ElectronThresh>15) ElectronThresh=15;}
                    else if (trigNames.triggerName(i)=="HLT_Ele10_LW_L1R") {if (ElectronThresh<0 || ElectronThresh>10) ElectronThresh=10;}
                    else if (trigNames.triggerName(i)=="HLT_Ele10_LW_EleId_L1R") {if (ElectronThresh<0 || ElectronThresh>10) ElectronThresh=10;}
                    else if (run<144200 && trigNames.triggerName(i)=="HLT_Ele10_SW_EleId_L1R"){if (ElectronThresh<0 || ElectronThresh>10) ElectronThresh=10;}

                    // partially documented for both EG and EGMonitor simultanously?? (runs 144000-144200)
                    else if (run<144200 && trigNames.triggerName(i)=="HLT_Ele10_SW_L1R"){if (ElectronThresh<0 || ElectronThresh>10) ElectronThresh=10;}
                    // add restriction to Run A runs for photon triggers?
                    else if (trigNames.triggerName(i)=="HLT_Photon50_L1R"){if (PhotonThresh<0 || PhotonThresh>50) PhotonThresh=50;}
                    else if (trigNames.triggerName(i)=="HLT_Photon50_Cleaned_L1R"){if (PhotonThresh<0 || PhotonThresh>50) PhotonThresh=50;}
                    else if (trigNames.triggerName(i)=="HLT_Photon30_L1R") {if (PhotonThresh<0 || PhotonThresh>30) PhotonThresh=30;}
                    else if (trigNames.triggerName(i)=="HLT_Photon30_L1R_8E29") {if (PhotonThresh<0 || PhotonThresh>30) PhotonThresh=30;}
                    else if (trigNames.triggerName(i)=="HLT_Photon30_Cleaned_L1R"){if (PhotonThresh<0 || PhotonThresh>30) PhotonThresh=30;}
                    else if (trigNames.triggerName(i)=="HLT_Photon25_Cleaned_L1R"){if (PhotonThresh<0 || PhotonThresh>25) PhotonThresh=25;}
                    else if (trigNames.triggerName(i)=="HLT_Photon20_L1R") {if (PhotonThresh<0 || PhotonThresh>20) PhotonThresh=20;}
                    else if (trigNames.triggerName(i)=="HLT_Photon20_Cleaned_L1R"){if (PhotonThresh<0 || PhotonThresh>20) PhotonThresh=20;}
                    else if (trigNames.triggerName(i)=="HLT_Photon15_L1R") {if (PhotonThresh<0 || PhotonThresh>15) PhotonThresh=15;}
                    else if (trigNames.triggerName(i)=="HLT_Photon15_LooseEcalIso_L1R") {if (PhotonThresh<0 || PhotonThresh>15) PhotonThresh=15;}
                    else if (trigNames.triggerName(i)=="HLT_Photon15_LooseEcalIso_Cleaned_L1R") {if (PhotonThresh<0 || PhotonThresh>15) PhotonThresh=15;}
                    else if (trigNames.triggerName(i)=="HLT_Photon15_TrackIso_L1R") {if (PhotonThresh<0 || PhotonThresh>15) PhotonThresh=15;}
                    else if (trigNames.triggerName(i)=="HLT_Photon15_TrackIso_Cleaned__L1R") {if (PhotonThresh<0 || PhotonThresh>15) PhotonThresh=15;}
                    else if (run<141956 && trigNames.triggerName(i)=="HLT_Photon15_Cleaned_L1R"){if (PhotonThresh<0 || PhotonThresh>15) PhotonThresh=15;}
                    else if (trigNames.triggerName(i)=="HLT_Photon10_L1R") {if (PhotonThresh<0 || PhotonThresh>10) PhotonThresh=10;}
                    else if (run<141956 && trigNames.triggerName(i)=="HLT_Photon10_Cleaned_L1R"){if (PhotonThresh<0 || PhotonThresh>10) PhotonThresh=10;}

                    // electron+MET triggers
                    else if (trigNames.triggerName(i)=="HLT_Ele10_MET45_v1") {if (ElectronThresh<-10) ElectronThresh=-10;}

                    // double electron triggers
                    // 2010 A (including DoublePhoton)
                    else if (trigNames.triggerName(i)=="HLT_DoubleEle10_SW_L1R"){if (DoubleElectronThresh<0 || DoubleElectronThresh>10) DoubleElectronThresh=10;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleEle5_SW_L1R"){if (DoubleElectronThresh<0 || DoubleElectronThresh>5) DoubleElectronThresh=5;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleEle4_SW_eeRes_L1R"){if (DoubleElectronThresh<0 || DoubleElectronThresh>4) DoubleElectronThresh=4;}
                    else if (run<144200 && trigNames.triggerName(i)=="HLT_DoublePhoton20_L1R"){if (PhotonThresh<0 || PhotonThresh>20) PhotonThresh=20;}
                    else if (run<144200 && trigNames.triggerName(i)=="HLT_DoublePhoton15_L1R"){if (PhotonThresh<0 || PhotonThresh>15) PhotonThresh=15;}
                    else if (run<141956 && trigNames.triggerName(i)=="HLT_DoublePhoton10_L1R"){if (PhotonThresh<0 || PhotonThresh>10) PhotonThresh=10;}
                    else if (run<141956 && trigNames.triggerName(i)=="HLT_DoublePhoton5_L1R"){if (PhotonThresh<0 || PhotonThresh>5) PhotonThresh=5;}
                    else if (trigNames.triggerName(i)=="HLT_DoublePhoton4_Jpsi_L1R"){if (PhotonThresh<0 || PhotonThresh>4) PhotonThresh=4;}
                    else if (trigNames.triggerName(i)=="HLT_DoublePhoton4_Upsilon_L1R"){if (PhotonThresh<0 || PhotonThresh>5) PhotonThresh=5;}
                    else if (trigNames.triggerName(i)=="HLT_DoublePhoton4_eeRes_L1R"){if (PhotonThresh<0 || PhotonThresh>4) PhotonThresh=4;}
                    else if (trigNames.triggerName(i)=="HLT_DoublePhoton5_CEP_L1R"){if (PhotonThresh<0 || PhotonThresh>5) PhotonThresh=5;}
                    else if (trigNames.triggerName(i)=="HLT_DoublePhoton5_Jpsi_L1R"){if (PhotonThresh<0 || PhotonThresh>5) PhotonThresh=5;}
                    else if (trigNames.triggerName(i)=="HLT_DoublePhoton5_Upsilon_L1R"){if (PhotonThresh<0 || PhotonThresh>5) PhotonThresh=5;}
                    else if (trigNames.triggerName(i)=="HLT_DoublePhoton5_Upsilon_CEP"){if (PhotonThresh<0 || PhotonThresh>5) PhotonThresh=5;}

                    // 2010 B
                    else if (trigNames.triggerName(i)=="HLT_Ele17_SW_TightCaloEleId_SC8HE_L1R_v1") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_SW_TightCaloEleId_Ele8HE_L1R_v1") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_SW_TightCaloEleId_Ele8HE_L1R_v2") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleEle17_SW_L1R_v1") {if (DoubleElectronThresh<0 || DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleEle15_SW_L1R_v1") {if (DoubleElectronThresh<0 || DoubleElectronThresh>15) DoubleElectronThresh=15;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleEle10_SW_L1R") {if (DoubleElectronThresh<0 || DoubleElectronThresh>10) DoubleElectronThresh=10;}

                    // electron+tau triggers
                    else if (trigNames.triggerName(i)=="HLT_IsoEle12_PFTau15_v1") {if (ElectronThresh<-12) ElectronThresh=-12;}
                    else if (trigNames.triggerName(i)=="HLT_IsoEle12_PFTau15_v2") {if (ElectronThresh<-12) ElectronThresh=-12;}
                    else if (trigNames.triggerName(i)=="HLT_IsoEle12_PFTau15_v3") {if (ElectronThresh<-12) ElectronThresh=-12;}

                    // electron+jet triggers   *** add also Elehad flag and jet threshold! ***
                    else if (trigNames.triggerName(i)=="HLT_Ele10_SW_HT70U_L1R_v1") {if (ElectronThresh<-10) ElectronThresh=-10;}
                    else if (trigNames.triggerName(i)=="HLT_Ele10_SW_HT70U_L1R_v2") {if (ElectronThresh<-10) ElectronThresh=-10;}
                    else if (trigNames.triggerName(i)=="HLT_Ele10_SW_EleId_HT70U_L1R_v1") {if (ElectronThresh<-10) ElectronThresh=-10;}
                    else if (trigNames.triggerName(i)=="HLT_Ele10_SW_EleId_HT70U_L1R_v2") {if (ElectronThresh<-10) ElectronThresh=-10;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleEle8_SW_HT70U_L1R_v1") {if (DoubleElectronThresh<-8) ElectronThresh=-8;}

                    else ElectronTrigThis = false;


                    // check and set whether trigger for Electron dataset has fired
                    if (ElectronTrigThis) ElectronTrig = true; 


                    // DoubleElectron triggers for 2011A
                    // can occur exclusively on DoubleElectron sample only, but can also occur on other samples if non-exclusive
                    //          --  have all been checked for real occurrence in DoubleElectron sample :-)
                    bool DoubleElectronTrigThis = true;

                    //
                    // unique single electron and electron+jet triggers on DoubleElectron sample!?
                    // not sure why, but supposed to be like that according to documentation
                    // need to fix internal logic for overlap with SingleE sample!!! (should be single E thresh) *** now exists -> simply rename DoubleElectronThrsh? ***
                    if      (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_v1") {if (DoubleElectronThresh<0 || DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_v2") {if (DoubleElectronThresh<0 || DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_v3") {if (DoubleElectronThresh<0 || DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_v4") {if (DoubleElectronThresh<0 || DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_v5") {if (DoubleElectronThresh<0 || DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_v6") {if (DoubleElectronThresh<0 || DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_v7") {if (DoubleElectronThresh<0 || DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_v8") {if (DoubleElectronThresh<0 || DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_v1") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_v2") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_v3") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_v4") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_v5") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_v6") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_v7") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_v8") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    // 2011 MC
                    else if (trigNames.triggerName(i)=="HLT_Ele8_v11") {if (DoubleElectronThresh<0 || DoubleElectronThresh>11) DoubleElectronThresh=11;}

                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_CaloIsoVL_v1") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_CaloIsoVL_v2") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_CaloIsoVL_v3") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_CaloIsoVL_v4") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_CaloIsoVL_v5") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_CaloIsoVL_v6") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_CaloIsoVL_v7") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_CaloIsoVL_v8") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    // 2011 MC
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_CaloIsoVL_v11") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}

                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_TrkIdVL_v1") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_TrkIdVL_v2") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_TrkIdVL_v3") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_TrkIdVL_v4") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_TrkIdVL_v5") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_TrkIdVL_v6") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_TrkIdVL_v7") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_TrkIdVL_v8") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    // 2011 MC
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_TrkIdVL_v11") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}

                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdT_TrkIdVL_CaloIsoVL_TrkIsoVL_v3") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdT_TrkIdVL_CaloIsoVL_TrkIsoVL_v4") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v4") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v5") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v6") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    // 2011 MC
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v9") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}

                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_CaloIsoVL_Jet40_v1") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_CaloIsoVL_Jet40_v2") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_CaloIsoVL_Jet40_v3") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_CaloIsoVL_Jet40_v4") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_CaloIsoVL_Jet40_v5") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_CaloIsoVL_Jet40_v6") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_CaloIsoVL_Jet40_v7") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    else if (trigNames.triggerName(i)=="HLT_Ele8_CaloIdL_CaloIsoVL_Jet40_v8") {if (DoubleElectronThresh<0 || DoubleElectronThresh>8) DoubleElectronThresh=8;}
                    // inclusive dielectron or electron+photon triggers
                    else if (trigNames.triggerName(i)=="HLT_DoubleEle45_CaloIdL_v1") {if (DoubleElectronThresh<0||DoubleElectronThresh>45) DoubleElectronThresh=45;}
		    //                    else if (trigNames.triggerName(i)=="HLT_DoubleEle33_v2") {if (DoubleElectronThresh<0||DoubleElectronThresh>33) DoubleElectronThresh=33;}
                    else if (trigNames.triggerName(i)=="HLT_Ele32_CaloIdL_CaloIsoVL_SC17_v1") {if (DoubleElectronThresh<0||DoubleElectronThresh>32) DoubleElectronThresh=32;}
                    else if (trigNames.triggerName(i)=="HLT_Ele32_CaloIdL_CaloIsoVL_SC17_v2") {if (DoubleElectronThresh<0||DoubleElectronThresh>32) DoubleElectronThresh=32;}
                    else if (trigNames.triggerName(i)=="HLT_Ele32_CaloIdL_CaloIsoVL_SC17_v3") {if (DoubleElectronThresh<0||DoubleElectronThresh>32) DoubleElectronThresh=32;}
		    //                    else if (trigNames.triggerName(i)=="HLT_Ele32_CaloIdL_CaloIsoVL_SC17_v4") {if (DoubleElectronThresh<0||DoubleElectronThresh>32) DoubleElectronThresh=32;}
                    else if (trigNames.triggerName(i)=="HLT_Ele32_CaloIdL_CaloIsoVL_SC17_v5") {if (DoubleElectronThresh<0||DoubleElectronThresh>32) DoubleElectronThresh=32;}
                    else if (trigNames.triggerName(i)=="HLT_Ele32_CaloIdT_CaloIsoT_TrkIdT_TrkIsoT_SC17_v1") {if (DoubleElectronThresh<0||DoubleElectronThresh>32) DoubleElectronThresh=32;}
                    else if (trigNames.triggerName(i)=="HLT_Ele32_CaloIdT_CaloIsoT_TrkIdT_TrkIsoT_SC17_v2") {if (DoubleElectronThresh<0||DoubleElectronThresh>32) DoubleElectronThresh=32;}
                    else if (trigNames.triggerName(i)=="HLT_Ele32_CaloIdT_CaloIsoT_TrkIdT_TrkIsoT_SC17_v3") {if (DoubleElectronThresh<0||DoubleElectronThresh>32) DoubleElectronThresh=32;}
                    else if (trigNames.triggerName(i)=="HLT_Ele32_CaloIdT_CaloIsoT_TrkIdT_TrkIsoT_SC17_v4") {if (DoubleElectronThresh<0||DoubleElectronThresh>32) DoubleElectronThresh=32;}
                    else if (trigNames.triggerName(i)=="HLT_Ele32_CaloIdT_CaloIsoT_TrkIdT_TrkIsoT_SC17_v5") {if (DoubleElectronThresh<0||DoubleElectronThresh>32) DoubleElectronThresh=32;}
                    else if (trigNames.triggerName(i)=="HLT_Ele32_CaloIdT_CaloIsoT_TrkIdT_TrkIsoT_SC17_v6") {if (DoubleElectronThresh<0||DoubleElectronThresh>32) DoubleElectronThresh=32;}
                    // 2011 MC
                    else if (trigNames.triggerName(i)=="HLT_Ele32_CaloIdT_CaloIsoT_TrkIdT_TrkIsoT_SC17_v9") {if (DoubleElectronThresh<0||DoubleElectronThresh>32) DoubleElectronThresh=32;}

                    else if (trigNames.triggerName(i)=="HLT_Ele22_CaloIdL_CaloIsoVL_Ele15_HFT_v1") {if (DoubleElectronThresh<0||DoubleElectronThresh>22) DoubleElectronThresh=22;}
                    else if (trigNames.triggerName(i)=="HLT_Photon20_CaloIdVT_IsoT_Ele8_CaloIdL_CaloIsoVL_v1") {if (DoubleElectronThresh<0||DoubleElectronThresh>20) DoubleElectronThresh=20;}
                    else if (trigNames.triggerName(i)=="HLT_Photon20_CaloIdVT_IsoT_Ele8_CaloIdL_CaloIsoVL_v2") {if (DoubleElectronThresh<0||DoubleElectronThresh>20) DoubleElectronThresh=20;}
                    else if (trigNames.triggerName(i)=="HLT_Photon20_CaloIdVT_IsoT_Ele8_CaloIdL_CaloIsoVL_v3") {if (DoubleElectronThresh<0||DoubleElectronThresh>20) DoubleElectronThresh=20;}
                    else if (trigNames.triggerName(i)=="HLT_Photon20_CaloIdVT_IsoT_Ele8_CaloIdL_CaloIsoVL_v4") {if (DoubleElectronThresh<0||DoubleElectronThresh>20) DoubleElectronThresh=20;}
                    else if (trigNames.triggerName(i)=="HLT_Photon20_CaloIdVT_IsoT_Ele8_CaloIdL_CaloIsoVL_v5") {if (DoubleElectronThresh<0||DoubleElectronThresh>20) DoubleElectronThresh=20;}
                    else if (trigNames.triggerName(i)=="HLT_Photon20_CaloIdVT_IsoT_Ele8_CaloIdL_CaloIsoVL_v6") {if (DoubleElectronThresh<0||DoubleElectronThresh>20) DoubleElectronThresh=20;}
                    else if (trigNames.triggerName(i)=="HLT_Photon20_CaloIdVT_IsoT_Ele8_CaloIdL_CaloIsoVL_v7") {if (DoubleElectronThresh<0||DoubleElectronThresh>20) DoubleElectronThresh=20;}
                    else if (trigNames.triggerName(i)=="HLT_Photon20_CaloIdVT_IsoT_Ele8_CaloIdL_CaloIsoVL_v8") {if (DoubleElectronThresh<0||DoubleElectronThresh>20) DoubleElectronThresh=20;}
                    else if (trigNames.triggerName(i)=="HLT_Photon20_CaloIdVT_IsoT_Ele8_CaloIdL_CaloIsoVL_v9") {if (DoubleElectronThresh<0||DoubleElectronThresh>20) DoubleElectronThresh=20;}
                    // for 2011 MC 
                    else if (trigNames.triggerName(i)=="HLT_Photon20_CaloIdVT_IsoT_Ele8_CaloIdL_CaloIsoVL_v12") {if (DoubleElectronThresh<0||DoubleElectronThresh>20) DoubleElectronThresh=20;}

                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_Ele8_CaloIdL_CaloIsoVL_v1") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_Ele8_CaloIdL_CaloIsoVL_v2") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_Ele8_CaloIdL_CaloIsoVL_v3") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_Ele8_CaloIdL_CaloIsoVL_v4") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_Ele8_CaloIdL_CaloIsoVL_v5") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_Ele8_CaloIdL_CaloIsoVL_v6") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_Ele8_CaloIdL_CaloIsoVL_v7") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_Ele8_CaloIdL_CaloIsoVL_v8") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_Ele8_CaloIdL_CaloIsoVL_v8") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}

                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v6") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v7") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v8") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_Ele15_HFL_v1") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_Ele15_HFL_v2") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_Ele15_HFL_v3") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_Ele15_HFL_v5") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_Ele15_HFL_v6") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_Ele15_HFL_v7") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_Ele15_HFL_v8") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdL_CaloIsoVL_Ele15_HFT_v3") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    // dielectron triggers with mass cut 
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_SC8_Mass30_v1") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_SC8_Mass30_v2") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_SC8_Mass30_v3") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_SC8_Mass30_v4") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_SC8_Mass30_v5") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_SC8_Mass30_v6") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_SC8_Mass30_v7") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_SC8_Mass30_v8") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_Ele8_Mass30_v2") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_Ele8_Mass30_v3") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_Ele8_Mass30_v4") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_Ele8_Mass30_v5") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_Ele8_Mass30_v6") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_Ele8_Mass30_v7") {if (DoubleElectronThresh<0||DoubleElectronThresh>17) DoubleElectronThresh=17;}
                    // inclusive trielectron triggers
                    else if (trigNames.triggerName(i)=="HLT_TripleEle10_CaloIdL_TrkIdVL_v7") {if (DoubleElectronThresh<-10) DoubleElectronThresh=-10;}
                    else if (trigNames.triggerName(i)=="HLT_TripleEle10_CaloIdL_TrkIdVL_v8") {if (DoubleElectronThresh<-10) DoubleElectronThresh=-10;}
                    else if (trigNames.triggerName(i)=="HLT_TripleEle10_CaloIdL_TrkIdVL_v9") {if (DoubleElectronThresh<-10) DoubleElectronThresh=-10;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleEle10_CaloIdL_TrkIdVL_Ele10_v1") {if (DoubleElectronThresh<-10) DoubleElectronThresh=-10;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleEle10_CaloIdL_TrkIdVL_Ele10_v2") {if (DoubleElectronThresh<-10) DoubleElectronThresh=-10;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleEle10_CaloIdL_TrkIdVL_Ele10_v3") {if (DoubleElectronThresh<-10) DoubleElectronThresh=-10;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleEle10_CaloIdL_TrkIdVL_Ele10_v4") {if (DoubleElectronThresh<-10) DoubleElectronThresh=-10;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleEle10_CaloIdL_TrkIdVL_Ele10_v6") {if (DoubleElectronThresh<-10) DoubleElectronThresh=-10;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleEle10_CaloIdL_TrkIdVL_Ele10_CaloIdT_TrkIdVL_v1") {if (DoubleElectronThresh<-10) DoubleElectronThresh=-10;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleEle10_CaloIdL_TrkIdVL_Ele10_CaloIdT_TrkIdVL_v2") {if (DoubleElectronThresh<-10) DoubleElectronThresh=-10;}
                    else DoubleElectronTrigThis = false;

                    // check and set whether trigger for DoubleElectron dataset has fired
                    if (DoubleElectronTrigThis) DoubleElectronTrig = true; 
 


                    // EGMonitor triggers 2010 Run B
                    // should only occur exclusively when running over the EGMonitor sample, can occur non-exlusively on all samples
                    //          --  have all been checked for real occurrence in EGMonitor B sample :-)
                    bool EGMonitorTrigThis = true;
                    //
                    // ECAL activity triggers,
                    // also Run A
                    if      (trigNames.triggerName(i)=="HLT_Activity_Ecal_SC17"){if (ElectronThresh<-17) ElectronThresh=-17;}
                    else if (trigNames.triggerName(i)=="HLT_Activity_Ecal_SC15"){if (ElectronThresh<-7) ElectronThresh=-15;}
                    else if (trigNames.triggerName(i)=="HLT_Activity_Ecal_SC7"){if (ElectronThresh<-7) ElectronThresh=-7;}
                    // next three also EGMonitor Run A
                    else if (trigNames.triggerName(i)=="HLT_L1SingleEG8"){if (ElectronThresh<-8) ElectronThresh=-8;}
                    else if (trigNames.triggerName(i)=="HLT_L1SingleEG5"){if (ElectronThresh<-5) ElectronThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_L1SingleEG2"){if (ElectronThresh<-2) ElectronThresh=-2;}
                    // from here Run A only
                    else if (trigNames.triggerName(i)=="HLT_Ele15_SC10_LW_L1R"){if (ElectronThresh<0 || ElectronThresh>15) ElectronThresh=15;}
                    else if (run>141955 && trigNames.triggerName(i)=="HLT_Ele15_LW_L1R"){if (ElectronThresh<0 || ElectronThresh>15) ElectronThresh=15;}
                    else if (run>144000 && trigNames.triggerName(i)=="HLT_Ele15_SW_L1R"){if (ElectronThresh<0 || ElectronThresh>15) ElectronThresh=15;}
                    else if (run>144000 && trigNames.triggerName(i)=="HLT_Ele10_SW_L1R"){if (ElectronThresh<0 || ElectronThresh>10) ElectronThresh=10;}
                    else if (run>144000 && trigNames.triggerName(i)=="HLT_Ele10_SW_EleId_L1R"){if (ElectronThresh<0 || ElectronThresh>10) ElectronThresh=10;}
                    else if (run>141955 && trigNames.triggerName(i)=="HLT_Ele15_SiStrip_L1R"){if (ElectronThresh<0 || ElectronThresh>15) ElectronThresh=15;}
                    else if (trigNames.triggerName(i)=="HLT_Ele20_SiStrip_L1R"){if (ElectronThresh<0 || ElectronThresh>20) ElectronThresh=20;}
                    // Low pt or loose electron triggers
                    else if (trigNames.triggerName(i)=="HLT_Ele12_SW_TightEleId_L1R"){if (ElectronThresh<0 || ElectronThresh>12) ElectronThresh=12;}
                    else if (trigNames.triggerName(i)=="HLT_Ele12_SW_TighterEleId_L1R_v1"){if (ElectronThresh<0 || ElectronThresh>12) ElectronThresh=12;}
                    else if (trigNames.triggerName(i)=="HLT_Ele12_SW_TighterEleId_L1R_v2"){if (ElectronThresh<0 || ElectronThresh>12) ElectronThresh=12;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_SW_Isol_L1R_v1"){if (ElectronThresh<0 || ElectronThresh>17) ElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_SW_Isol_L1R_v2"){if (ElectronThresh<0 || ElectronThresh>17) ElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele22_SW_L1R_v1"){if (ElectronThresh<0 || ElectronThresh>22) ElectronThresh=22;}
                    else if (trigNames.triggerName(i)=="HLT_Ele22_SW_L1R_v2"){if (ElectronThresh<0 || ElectronThresh>22) ElectronThresh=22;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_SW_L1R"){if (ElectronThresh<0 || ElectronThresh>17) ElectronThresh=17;}
                    else if (trigNames.triggerName(i)=="HLT_Ele17_SW_L1R_v2"){if (ElectronThresh<0 || ElectronThresh>17) ElectronThresh=17;}
                    else if ((run<142000 || run>144114) && trigNames.triggerName(i)=="HLT_Ele10_SW_L1R"){if (ElectronThresh<0 || ElectronThresh>10) ElectronThresh=10;}
                    else if (trigNames.triggerName(i)=="HLT_Ele10_SW_L1R_v2"){if (ElectronThresh<0 || ElectronThresh>10) ElectronThresh=10;}
                    // low pt dielectron triggers
                    // next also Run A
                    else if (trigNames.triggerName(i)=="HLT_L1DoubleEG5"){if (DoubleElectronThresh<0 || DoubleElectronThresh>5) DoubleElectronThresh=5;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleEle5_SW_Upsilon_L1R_v1"){if (DoubleElectronThresh<-5) DoubleElectronThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleEle5_SW_Upsilon_L1R_v2"){if (DoubleElectronThresh<-5) DoubleElectronThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleEle4_SW_eeRes_L1R"){if (DoubleElectronThresh<0 || DoubleElectronThresh>4) DoubleElectronThresh=4;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleEle4_SW_eeRes_L1R_v2"){if (DoubleElectronThresh<0 || DoubleElectronThresh>4) DoubleElectronThresh=4;}
                    // low pt or lower quality photon triggers
                    else if (trigNames.triggerName(i)=="HLT_Photon50_NoHE_L1R"){if (PhotonThresh<0 || PhotonThresh>50) PhotonThresh=50;}
                    else if (trigNames.triggerName(i)=="HLT_Photon20_NoHE_L1R"){if (PhotonThresh<0 || PhotonThresh>20) PhotonThresh=20;}
                    else if (trigNames.triggerName(i)=="HLT_Photon20_Isol_Cleaned_L1R_v1"){if (PhotonThresh<0 || PhotonThresh>20) PhotonThresh=20;}
                    // next two also Run A
                    else if (run>141955 && trigNames.triggerName(i)=="HLT_Photon15_Cleaned_L1R"){if (PhotonThresh<0 || PhotonThresh>15) PhotonThresh=15;}
                    else if (run>141955 && trigNames.triggerName(i)=="HLT_Photon10_Cleaned_L1R"){if (PhotonThresh<0 || PhotonThresh>10) PhotonThresh=10;}
                    else if (run>144200 && trigNames.triggerName(i)=="HLT_DoublePhoton15_L1R"){if (PhotonThresh<0 || PhotonThresh>15) PhotonThresh=15;}
                    // also Run A 
                    else if (run>141955 && trigNames.triggerName(i)=="HLT_DoublePhoton10_L1R"){if (PhotonThresh<0 || PhotonThresh>10) PhotonThresh=10;}
                    else if (run>141955 && trigNames.triggerName(i)=="HLT_DoublePhoton5_L1R"){if (PhotonThresh<0 || PhotonThresh>5) PhotonThresh=5;}
                    // technical triggers Run A  
                    else if (trigNames.triggerName(i)=="HLT_SelectEcalSpikes_L1R"){if (PhotonThresh<-48) PhotonThresh=-48;}
                    else if (trigNames.triggerName(i)=="HLT_SelectEcalSpikesHighEt_L1R"){if (PhotonThresh<-47) PhotonThresh=-47;}

                    else EGMonitorTrigThis = false;  // none of the above fired

                    // check and set whether trigger for EGMonitor dataset has fired
                    if (EGMonitorTrigThis) EGMonitorTrig = true; 


	          } // if accept
                }  // for trigger



                // is this the right place? what e.g. about E/had triggers in 2011?
                //h163->Fill(DoubleElectronThresh); // fill double electron trigger threshold flag

                // debug  print 
		//     		std::cout<<"MuThresh "<<MuThresh<<" IsoMuThresh "<<IsoMuThresh<<" DoubleMuThresh "<<DoubleMuThresh<<" JpsiThresh "<<JpsiThresh<<std::endl;

		//  for the moment any positive muon triggers are OK. Additional Mu+jet triggers and triggers from the BTau sample can be accepted via the 
                //  GoodJetTrig flag
                if ( ElectronThresh> -1 || DoubleElectronThresh > -1) {
		  GoodETrig = true; 
                  return true;
                }
                else if ((Electrondataset || DoubleElectrondataset || EGMonitordataset || Photondataset) && (ElectronThresh == -49 && DoubleElectronThresh == -49 && PhotonThresh == -49)) {
// activate this for debug
                  std::cout<<" ****** no electron or photon Trigger recognized ****** "<<std::endl;
                  for(unsigned i= 0; i<trigNames.size(); i++) {
                    // dump only accepted triggers 
                    if (triggerResultsHandle_->accept(i)==1){
                      std::cout<<" Trigger name "<<trigNames.triggerName(i)<<", Accepted = ";
                      std::cout<<triggerResultsHandle_->accept(i)<<std::endl;
	            }
                  }
#ifdef trigcheckabort
                  // abort the job if known to be electron data set
                  if ((dataset == "Electron" && !ElectronTrig)) exit(1);
                  // abort the job if known to be double electron data set
                  if ((dataset == "DoubleElectron" && !DoubleElectronTrig)) exit(1);
                  // abort the job if known to be EGMonitor data set
                  if ((dataset == "EGMonitor" && !EGMonitorTrig)) exit(1);
                  // abort the job if known to be Photon data set
                  if ((dataset == "Photon" && !PhotonTrig)) exit(1);
#endif
                }
                return false;
}





bool NanoAnalyzer::providesGoodJetTrigger(const edm::Event& iEvent) {

// *************************************************************
//------------------ get and check trigger info ----------------
// *************************************************************

#ifndef CMSSW7plus
                edm::Handle<edm::TriggerResults> triggerResults;
                edm::Handle<edm::TriggerResults> triggerResultsHandle_;
                edm::InputTag trigResultsTag("TriggerResults","","HLT"); 
                iEvent.getByLabel(trigResultsTag,triggerResultsHandle_);
#endif
#ifdef CMSSW7plus
  //EDGetTokenT<edm::TriggerResults> trigTkn;
  //trigTkn = consumes< edm::TriggerResults>(edm::InputTag("TriggerResults","","HLT"));
  edm::Handle<edm::TriggerResults> triggerResultsHandle_;  
  iEvent.getByToken(trigTkn, triggerResultsHandle_);  
#endif

                // check whether trigger info was obtained successfully
                if (!triggerResultsHandle_.isValid()) {
		  std::cout << "Nano::goodTrigger: Error in getting TriggerResults product from Event!" << std::endl;
                  return false;
                }

                // get trigger names
                const edm::TriggerNames& trigNames = iEvent.triggerNames(*triggerResultsHandle_); 

                // put comments here

                // check Jet triggers
                // beware: cannot expect any particular ordering !!!
                JetTrig = false;
                GoodJetTrig = false;

                for(unsigned i= 0; i<trigNames.size(); i++) { 
                  if (triggerResultsHandle_->accept(i)==1){

                    // check Jet triggers
                    // can occur exclusively on jet sample only, but can also occur on other samples if non-exclusive
                    //          --  have all been checked for real occurrence in jet sample :-)
                    //              the ones which are commented out without comment have been listed but do not occur 
                    bool JetTrigThis = true;
                    
                    // dijet triggers
                    if      (trigNames.triggerName(i)=="HLT_DiJetAve15U_v3")  {if (DiJetThresh<0 || DiJetThresh>15)  DiJetThresh=15;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve15U")     {if (DiJetThresh<0 || DiJetThresh>15)  DiJetThresh=15;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve30U_v3")  {if (DiJetThresh<0 || DiJetThresh>30)  DiJetThresh=30;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve30U")     {if (DiJetThresh<0 || DiJetThresh>30)  DiJetThresh=30;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve50U_v3")  {if (DiJetThresh<0 || DiJetThresh>50)  DiJetThresh=50;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve50U")     {if (DiJetThresh<0 || DiJetThresh>50)  DiJetThresh=50;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve70U_v3")  {if (DiJetThresh<0 || DiJetThresh>70)  DiJetThresh=70;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve70U_v2")  {if (DiJetThresh<0 || DiJetThresh>70)  DiJetThresh=70;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve70U")     {if (DiJetThresh<0 || DiJetThresh>70)  DiJetThresh=70;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve100U_v3") {if (DiJetThresh<0 || DiJetThresh>100) DiJetThresh=100;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve100U_v1") {if (DiJetThresh<0 || DiJetThresh>100) DiJetThresh=100;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve140U_v3") {if (DiJetThresh<0 || DiJetThresh>140) DiJetThresh=140;}
                    // for 2011 MC
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve30_v10")   {if (DiJetThresh<0 || DiJetThresh>30)  DiJetThresh=30;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve60_v10")   {if (DiJetThresh<0 || DiJetThresh>60)  DiJetThresh=60;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve110_v10")   {if (DiJetThresh<0 || DiJetThresh>110)  DiJetThresh=110;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve190_v10")   {if (DiJetThresh<0 || DiJetThresh>190)  DiJetThresh=190;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve240_v10")   {if (DiJetThresh<0 || DiJetThresh>240)  DiJetThresh=240;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve300_v11")   {if (DiJetThresh<0 || DiJetThresh>300)  DiJetThresh=300;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve370_v11")   {if (DiJetThresh<0 || DiJetThresh>370)  DiJetThresh=370;}

                    // for 2011 data                                                                                                  //  seed
                    // note that prescales correlate if and only if the L1 seeds are the same
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve15U_v4")  {if (DiJetThresh<0 || DiJetThresh>15)  DiJetThresh=15;} // L1_SingleJet16
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve30_v6")   {if (DiJetThresh<0 || DiJetThresh>30)  DiJetThresh=30;} // L1_SingleJet16
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve30_v5")   {if (DiJetThresh<0 || DiJetThresh>30)  DiJetThresh=30;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve30_v4")   {if (DiJetThresh<0 || DiJetThresh>30)  DiJetThresh=30;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve30_v3")   {if (DiJetThresh<0 || DiJetThresh>30)  DiJetThresh=30;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve30_v2")   {if (DiJetThresh<0 || DiJetThresh>30)  DiJetThresh=30;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve30_v1")   {if (DiJetThresh<0 || DiJetThresh>30)  DiJetThresh=30;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve30U_v4")  {if (DiJetThresh<0 || DiJetThresh>30)  DiJetThresh=30;} // L1_SingleJet36
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve50U_v4")  {if (DiJetThresh<0 || DiJetThresh>50)  DiJetThresh=50;} // L1_SingleJet52
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve60_v6")   {if (DiJetThresh<0 || DiJetThresh>60)  DiJetThresh=60;} // L1_SingleJet36
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve60_v5")   {if (DiJetThresh<0 || DiJetThresh>60)  DiJetThresh=60;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve60_v4")   {if (DiJetThresh<0 || DiJetThresh>60)  DiJetThresh=60;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve60_v3")   {if (DiJetThresh<0 || DiJetThresh>60)  DiJetThresh=60;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve60_v2")   {if (DiJetThresh<0 || DiJetThresh>60)  DiJetThresh=60;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve60_v1")   {if (DiJetThresh<0 || DiJetThresh>60)  DiJetThresh=60;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve70U_v4")  {if (DiJetThresh<0 || DiJetThresh>70)  DiJetThresh=70;} // L1_SingleJet68
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve80_v6")   {if (DiJetThresh<0 || DiJetThresh>80)  DiJetThresh=80;} // L1_SingleJet52
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve80_v5")   {if (DiJetThresh<0 || DiJetThresh>80)  DiJetThresh=80;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve80_v4")   {if (DiJetThresh<0 || DiJetThresh>80)  DiJetThresh=80;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve80_v3")   {if (DiJetThresh<0 || DiJetThresh>80)  DiJetThresh=80;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve80_v2")   {if (DiJetThresh<0 || DiJetThresh>80)  DiJetThresh=80;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve80_v1")   {if (DiJetThresh<0 || DiJetThresh>80)  DiJetThresh=80;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve100U_v4") {if (DiJetThresh<0 || DiJetThresh>100) DiJetThresh=100;} //L1_SingleJet92
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve110_v6")  {if (DiJetThresh<0 || DiJetThresh>110) DiJetThresh=110;} //L1_SingleJet68
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve110_v5")  {if (DiJetThresh<0 || DiJetThresh>110) DiJetThresh=110;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve110_v4")  {if (DiJetThresh<0 || DiJetThresh>110) DiJetThresh=110;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve110_v3")  {if (DiJetThresh<0 || DiJetThresh>110) DiJetThresh=110;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve110_v2")  {if (DiJetThresh<0 || DiJetThresh>110) DiJetThresh=110;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve110_v1")  {if (DiJetThresh<0 || DiJetThresh>110) DiJetThresh=110;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve140U_v4") {if (DiJetThresh<0 || DiJetThresh>140) DiJetThresh=140;} //L1_SingleJet92
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve150_v6")  {if (DiJetThresh<0 || DiJetThresh>150) DiJetThresh=150;} //L1_SingleJet92
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve150_v5")  {if (DiJetThresh<0 || DiJetThresh>150) DiJetThresh=150;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve150_v4")  {if (DiJetThresh<0 || DiJetThresh>150) DiJetThresh=150;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve150_v3")  {if (DiJetThresh<0 || DiJetThresh>150) DiJetThresh=150;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve150_v2")  {if (DiJetThresh<0 || DiJetThresh>150) DiJetThresh=150;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve150_v1")  {if (DiJetThresh<0 || DiJetThresh>150) DiJetThresh=150;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve180U_v4") {if (DiJetThresh<0 || DiJetThresh>180) DiJetThresh=180;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve190_v6")  {if (DiJetThresh<0 || DiJetThresh>190) DiJetThresh=190;} //L1_SingleJet92
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve190_v5")  {if (DiJetThresh<0 || DiJetThresh>190) DiJetThresh=190;} //     ...
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve190_v4")  {if (DiJetThresh<0 || DiJetThresh>190) DiJetThresh=190;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve190_v3")  {if (DiJetThresh<0 || DiJetThresh>190) DiJetThresh=190;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve190_v2")  {if (DiJetThresh<0 || DiJetThresh>190) DiJetThresh=190;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve190_v1")  {if (DiJetThresh<0 || DiJetThresh>190) DiJetThresh=190;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve240_v6")  {if (DiJetThresh<0 || DiJetThresh>240) DiJetThresh=240;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve240_v5")  {if (DiJetThresh<0 || DiJetThresh>240) DiJetThresh=240;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve240_v4")  {if (DiJetThresh<0 || DiJetThresh>240) DiJetThresh=240;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve240_v3")  {if (DiJetThresh<0 || DiJetThresh>240) DiJetThresh=240;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve240_v2")  {if (DiJetThresh<0 || DiJetThresh>240) DiJetThresh=240;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve240_v1")  {if (DiJetThresh<0 || DiJetThresh>240) DiJetThresh=240;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve300_v6")  {if (DiJetThresh<0 || DiJetThresh>300) DiJetThresh=300;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve300_v5")  {if (DiJetThresh<0 || DiJetThresh>300) DiJetThresh=300;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve300_v4")  {if (DiJetThresh<0 || DiJetThresh>300) DiJetThresh=300;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve300_v3")  {if (DiJetThresh<0 || DiJetThresh>300) DiJetThresh=300;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve300_v2")  {if (DiJetThresh<0 || DiJetThresh>300) DiJetThresh=300;}
                    else if (trigNames.triggerName(i)=="HLT_DiJetAve300_v1")  {if (DiJetThresh<0 || DiJetThresh>300) DiJetThresh=300;}

                    // single jet triggers
                    else if (trigNames.triggerName(i)=="HLT_Jet15U_v3")  {if (JetThresh<0 || JetThresh>15) JetThresh=15;}
                    else if (trigNames.triggerName(i)=="HLT_Jet15U")     {if (JetThresh<0 || JetThresh>15) JetThresh=15;}
                    else if (trigNames.triggerName(i)=="HLT_Jet30U_v3")  {if (JetThresh<0 || JetThresh>30) JetThresh=30;}
                    else if (trigNames.triggerName(i)=="HLT_Jet30U")     {if (JetThresh<0 || JetThresh>30) JetThresh=30;} 
                    else if (trigNames.triggerName(i)=="HLT_Jet50U_v3")  {if (JetThresh<0 || JetThresh>50) JetThresh=50;}
                    else if (trigNames.triggerName(i)=="HLT_Jet50U")     {if (JetThresh<0 || JetThresh>50) JetThresh=50;}
                    else if (trigNames.triggerName(i)=="HLT_Jet70U_v3")  {if (JetThresh<0 || JetThresh>70) JetThresh=70;}
                    else if (trigNames.triggerName(i)=="HLT_Jet70U_v2")  {if (JetThresh<0 || JetThresh>70) JetThresh=70;}
                    else if (trigNames.triggerName(i)=="HLT_Jet70U")     {if (JetThresh<0 || JetThresh>70) JetThresh=70;}
                    else if (trigNames.triggerName(i)=="HLT_Jet100U_v3") {if (JetThresh<0 || JetThresh>100) JetThresh=100;}
		    else if (trigNames.triggerName(i)=="HLT_Jet100U_v2") {if (JetThresh<0 || JetThresh>100) JetThresh=100;}
		    else if (trigNames.triggerName(i)=="HLT_Jet140U_v3") {if (JetThresh<0 || JetThresh>140) JetThresh=140;}
                    //else if (trigNames.triggerName(i)=="HLT_Jet180U")    {if (JetThresh<0 || JetThresh>180) JetThresh=180;}

                    // for 2011 MC
		    else if (trigNames.triggerName(i)=="HLT_Jet30_v10")  {if (JetThresh<0 || JetThresh>30) JetThresh=30;}
		    else if (trigNames.triggerName(i)=="HLT_Jet60_v10")  {if (JetThresh<0 || JetThresh>60) JetThresh=60;}
                    // for 2011 data
		    else if (trigNames.triggerName(i)=="HLT_Jet30_v6")  {if (JetThresh<0 || JetThresh>30) JetThresh=30;}
		    else if (trigNames.triggerName(i)=="HLT_Jet30_v5")  {if (JetThresh<0 || JetThresh>30) JetThresh=30;}
		    else if (trigNames.triggerName(i)=="HLT_Jet30_v4")  {if (JetThresh<0 || JetThresh>30) JetThresh=30;}
		    else if (trigNames.triggerName(i)=="HLT_Jet30_v3")  {if (JetThresh<0 || JetThresh>30) JetThresh=30;}
		    else if (trigNames.triggerName(i)=="HLT_Jet30_v2")  {if (JetThresh<0 || JetThresh>30) JetThresh=30;}
		    else if (trigNames.triggerName(i)=="HLT_Jet30_v1")  {if (JetThresh<0 || JetThresh>30) JetThresh=30;} // seed: L1_SingleJet16
		    else if (trigNames.triggerName(i)=="HLT_Jet60_v6")  {if (JetThresh<0 || JetThresh>60) JetThresh=60;}
		    else if (trigNames.triggerName(i)=="HLT_Jet60_v5")  {if (JetThresh<0 || JetThresh>60) JetThresh=60;}
		    else if (trigNames.triggerName(i)=="HLT_Jet60_v4")  {if (JetThresh<0 || JetThresh>60) JetThresh=60;}
		    else if (trigNames.triggerName(i)=="HLT_Jet60_v3")  {if (JetThresh<0 || JetThresh>60) JetThresh=60;}
		    else if (trigNames.triggerName(i)=="HLT_Jet60_v2")  {if (JetThresh<0 || JetThresh>60) JetThresh=60;}
		    else if (trigNames.triggerName(i)=="HLT_Jet60_v1")  {if (JetThresh<0 || JetThresh>60) JetThresh=60;} // seed: L1_SingleJet36
		    else if (trigNames.triggerName(i)=="HLT_Jet80_v6")  {if (JetThresh<0 || JetThresh>80) JetThresh=80;}
		    else if (trigNames.triggerName(i)=="HLT_Jet80_v5")  {if (JetThresh<0 || JetThresh>80) JetThresh=80;}
		    else if (trigNames.triggerName(i)=="HLT_Jet80_v4")  {if (JetThresh<0 || JetThresh>80) JetThresh=80;}
		    else if (trigNames.triggerName(i)=="HLT_Jet80_v3")  {if (JetThresh<0 || JetThresh>80) JetThresh=80;}
		    else if (trigNames.triggerName(i)=="HLT_Jet80_v2")  {if (JetThresh<0 || JetThresh>80) JetThresh=80;}
		    else if (trigNames.triggerName(i)=="HLT_Jet80_v1")  {if (JetThresh<0 || JetThresh>80) JetThresh=80;} // seed: L1_SingleJet52
                    // 2011 MC 
		    else if (trigNames.triggerName(i)=="HLT_Jet110_v10") {if (JetThresh<0 || JetThresh>110) JetThresh=110;}

		    else if (trigNames.triggerName(i)=="HLT_Jet110_v6") {if (JetThresh<0 || JetThresh>110) JetThresh=110;}
		    else if (trigNames.triggerName(i)=="HLT_Jet110_v5") {if (JetThresh<0 || JetThresh>110) JetThresh=110;}
		    else if (trigNames.triggerName(i)=="HLT_Jet110_v4") {if (JetThresh<0 || JetThresh>110) JetThresh=110;}
		    else if (trigNames.triggerName(i)=="HLT_Jet110_v3") {if (JetThresh<0 || JetThresh>110) JetThresh=110;}
		    else if (trigNames.triggerName(i)=="HLT_Jet110_v2") {if (JetThresh<0 || JetThresh>110) JetThresh=110;}
		    else if (trigNames.triggerName(i)=="HLT_Jet110_v1") {if (JetThresh<0 || JetThresh>110) JetThresh=110;} // seed: L1_SingleJet68
		    else if (trigNames.triggerName(i)=="HLT_Jet150_v6") {if (JetThresh<0 || JetThresh>150) JetThresh=150;}
		    else if (trigNames.triggerName(i)=="HLT_Jet150_v5") {if (JetThresh<0 || JetThresh>150) JetThresh=150;}
		    else if (trigNames.triggerName(i)=="HLT_Jet150_v4") {if (JetThresh<0 || JetThresh>150) JetThresh=150;}
		    else if (trigNames.triggerName(i)=="HLT_Jet150_v3") {if (JetThresh<0 || JetThresh>150) JetThresh=150;}
		    else if (trigNames.triggerName(i)=="HLT_Jet150_v2") {if (JetThresh<0 || JetThresh>150) JetThresh=150;}
		    else if (trigNames.triggerName(i)=="HLT_Jet150_v1") {if (JetThresh<0 || JetThresh>150) JetThresh=150;} // seed: L1_SingleJet92
                    // 2011 MC
		    else if (trigNames.triggerName(i)=="HLT_Jet190_v10") {if (JetThresh<0 || JetThresh>190) JetThresh=190;}

		    else if (trigNames.triggerName(i)=="HLT_Jet190_v6") {if (JetThresh<0 || JetThresh>190) JetThresh=190;}
		    else if (trigNames.triggerName(i)=="HLT_Jet190_v5") {if (JetThresh<0 || JetThresh>190) JetThresh=190;}
		    else if (trigNames.triggerName(i)=="HLT_Jet190_v4") {if (JetThresh<0 || JetThresh>190) JetThresh=190;}
		    else if (trigNames.triggerName(i)=="HLT_Jet190_v3") {if (JetThresh<0 || JetThresh>190) JetThresh=190;}
		    else if (trigNames.triggerName(i)=="HLT_Jet190_v2") {if (JetThresh<0 || JetThresh>190) JetThresh=190;}
		    else if (trigNames.triggerName(i)=="HLT_Jet190_v1") {if (JetThresh<0 || JetThresh>190) JetThresh=190;} // seed: L1_SingleJet92
                    // 2011 MC
		    else if (trigNames.triggerName(i)=="HLT_Jet240_v10") {if (JetThresh<0 || JetThresh>240) JetThresh=240;}

		    else if (trigNames.triggerName(i)=="HLT_Jet240_v6") {if (JetThresh<0 || JetThresh>240) JetThresh=240;}
		    else if (trigNames.triggerName(i)=="HLT_Jet240_v5") {if (JetThresh<0 || JetThresh>240) JetThresh=240;}
		    else if (trigNames.triggerName(i)=="HLT_Jet240_v4") {if (JetThresh<0 || JetThresh>240) JetThresh=240;}
		    else if (trigNames.triggerName(i)=="HLT_Jet240_v3") {if (JetThresh<0 || JetThresh>240) JetThresh=240;}
		    else if (trigNames.triggerName(i)=="HLT_Jet240_v2") {if (JetThresh<0 || JetThresh>240) JetThresh=240;}
		    else if (trigNames.triggerName(i)=="HLT_Jet240_v1") {if (JetThresh<0 || JetThresh>240) JetThresh=240;} // seed: L1_SingleJet92
                    // 2011 MC
		    else if (trigNames.triggerName(i)=="HLT_Jet300_v10") {if (JetThresh<0 || JetThresh>300) JetThresh=300;} //       ...

		    else if (trigNames.triggerName(i)=="HLT_Jet300_v5") {if (JetThresh<0 || JetThresh>300) JetThresh=300;} //       ...
		    else if (trigNames.triggerName(i)=="HLT_Jet300_v4") {if (JetThresh<0 || JetThresh>300) JetThresh=300;}
		    else if (trigNames.triggerName(i)=="HLT_Jet300_v3") {if (JetThresh<0 || JetThresh>300) JetThresh=300;}
		    else if (trigNames.triggerName(i)=="HLT_Jet300_v2") {if (JetThresh<0 || JetThresh>300) JetThresh=300;}
		    else if (trigNames.triggerName(i)=="HLT_Jet300_v1") {if (JetThresh<0 || JetThresh>300) JetThresh=300;} 
                    // 2011 MC
		    else if (trigNames.triggerName(i)=="HLT_Jet370_NoJetID_v11") {if (JetThresh<0 || JetThresh>370) JetThresh=370;}

		    else if (trigNames.triggerName(i)=="HLT_Jet370_NoJetID_v6") {if (JetThresh<0 || JetThresh>370) JetThresh=370;}
		    else if (trigNames.triggerName(i)=="HLT_Jet370_NoJetID_v5") {if (JetThresh<0 || JetThresh>370) JetThresh=370;}
		    else if (trigNames.triggerName(i)=="HLT_Jet370_NoJetID_v4") {if (JetThresh<0 || JetThresh>370) JetThresh=370;}
		    else if (trigNames.triggerName(i)=="HLT_Jet370_NoJetID_v3") {if (JetThresh<0 || JetThresh>370) JetThresh=370;}
		    else if (trigNames.triggerName(i)=="HLT_Jet370_NoJetID_v2") {if (JetThresh<0 || JetThresh>370) JetThresh=370;}
		    else if (trigNames.triggerName(i)=="HLT_Jet370_NoJetID_v1") {if (JetThresh<0 || JetThresh>370) JetThresh=370;}
                    // for 2011 data, with BTag, set BThresh instead?
		    else if (trigNames.triggerName(i)=="HLT_Jet240_CentralJet30_BTagIP_v3") {if (JetThresh<-30) JetThresh=-30;}
		    else if (trigNames.triggerName(i)=="HLT_Jet240_CentralJet30_BTagIP_v2") {if (JetThresh<-30) JetThresh=-30;}
		    else if (trigNames.triggerName(i)=="HLT_Jet240_CentralJet30_BTagIP_v1") {if (JetThresh<-30) JetThresh=-30;}
                    // HT based triggers 
                    else if (trigNames.triggerName(i)=="HLT_HT100U")     {if (HTThresh<0  || HTThresh>100) HTThresh=100;}  // moved from JetMET, 
                                                                                                                           // overlap with JetMETTauMonitor
                    //else if (trigNames.triggerName(i)=="HLT_HT120U")     {if (HTThresh<0  || HTThresh>120) HTThresh=120;}  // moved to JetMETTauMonitor 
                    //else if (trigNames.triggerName(i)=="HLT_HT140U")     {if (HTThresh<0  || HTThresh>140) HTThresh=140;}  // moved to MultiJet
                    else if (trigNames.triggerName(i)=="HLT_EcalOnly_SumEt160") {if (HTThresh<0  || HTThresh>160) HTThresh=160;}  // moved from JetMET
                    // four-jet triggers (e.g. for hadronic top)
                    else if (trigNames.triggerName(i)=="HLT_QuadJet20U") {if (QuadJetThresh<0  || QuadJetThresh>20) QuadJetThresh=20;}  // overlap with MultiJet
                    //else if (trigNames.triggerName(i)=="HLT_QuadJet25U") {if (QuadJetThresh<0  || QuadJetThresh>25) QuadJetThresh=25;} // seemingly never unique

		    else JetTrigThis = false;  // none of the above has triggered

                    // check and set whether trigger for Jet dataset has fired
                    if (JetTrigThis) JetTrig = true; 
        
	          }
                }

                // put comments here

                // check MultiJet triggers
                // beware: cannot expect any particular ordering !!!
                MultiJetTrig = false;

                for(unsigned i= 0; i<trigNames.size(); i++) { 
                  if (triggerResultsHandle_->accept(i)==1){

                    // check MultiJet triggers
                    // can occur exclusively on MultiJet sample only, but can also occur on other samples if non-exclusive
                    //          --  have all been checked for real occurrence in MultiJet sample :-)
                    //              the ones which are commented out without comment have been listed but do not occur 
                    bool MultiJetTrigThis = true;
                    
                    // dijet triggers
                    if      (trigNames.triggerName(i)=="HLT_ExclDiJet30U_HFOR_v3")  {if (DiJetThresh<0 || DiJetThresh>30) DiJetThresh=30;}
                    else if (trigNames.triggerName(i)=="HLT_ExclDiJet30U_HFOR_v1")  {if (DiJetThresh<0 || DiJetThresh>30) DiJetThresh=30;}
                    else if (trigNames.triggerName(i)=="HLT_ExclDiJet30U_HFAND_v3") {if (DiJetThresh<0 || DiJetThresh>30) DiJetThresh=30;}
                    //else if (trigNames.triggerName(i)=="HLT_DiJet20U_Meff180U")     {if (DiJetThresh<0 || DiJetThresh>20) DiJetThresh=20;}
                    else if (trigNames.triggerName(i)=="HLT_DiJet50U_PT50U_v3")     {if (DiJetThresh<0 || DiJetThresh>50) DiJetThresh=50;}
                    //else if (trigNames.triggerName(i)=="HLT_R030U_MR100U")          {if (DiJetThresh<0 || DiJetThresh>50) DiJetThresh=50;}
                    //else if (trigNames.triggerName(i)=="HLT_R033U_MR100U")          {if (DiJetThresh<0 || DiJetThresh>50) DiJetThresh=50;}
                    // HT based triggers 
                    else if (trigNames.triggerName(i)=="HLT_HT100U_v3")           {if (HTThresh<0  || HTThresh>100) HTThresh=100;} // no overlap (v3!)
                    else if (trigNames.triggerName(i)=="HLT_HT130U_v3")           {if (HTThresh<0  || HTThresh>130) HTThresh=130;} 
                    else if (trigNames.triggerName(i)=="HLT_HT140U")              {if (HTThresh<0  || HTThresh>140) HTThresh=140;}  
                    else if (trigNames.triggerName(i)=="HLT_HT140U_eta3_v3")      {if (HTThresh<0  || HTThresh>140) HTThresh=140;}  
                    else if (trigNames.triggerName(i)=="HLT_HT140U_J30U_Eta3_v3") {if (HTThresh<0  || HTThresh>140) HTThresh=140;}  
                    else if (trigNames.triggerName(i)=="HLT_HT150U_v3")           {if (HTThresh<0  || HTThresh>140) HTThresh=150;}  
                    //else if (trigNames.triggerName(i)=="HLT_HT150U_eta3")         {if (HTThresh<0  || HTThresh>150) HTThresh=150;}  
                    //else if (trigNames.triggerName(i)=="HLT_HT160U")              {if (HTThresh<0  || HTThresh>140) HTThresh=160;}  
                    //else if (trigNames.triggerName(i)=="HLT_HT160U_eta3")         {if (HTThresh<0  || HTThresh>160) HTThresh=160;}  
                    //else if (trigNames.triggerName(i)=="HLT_HT200U")              {if (HTThresh<0  || HTThresh>200) HTThresh=200;}  
                    else if (trigNames.triggerName(i)=="HLT_EcalOnly_SumEt160_v3"){if (HTThresh<0  || HTThresh>160) HTThresh=160;} // no overlap (v3!)
                    else if (trigNames.triggerName(i)=="HLT_EcalOnly_SumEt160_v2"){if (HTThresh<0  || HTThresh>160) HTThresh=160;} // no overlap (v2!)
                    // four-jet triggers (e.g. for hadronic top)
                    else if (trigNames.triggerName(i)=="HLT_QuadJet20U_v3") {if (QuadJetThresh<0  || QuadJetThresh>20) QuadJetThresh=20;} // no overlap (v3!)
                    else if (trigNames.triggerName(i)=="HLT_QuadJet20U_v2") {if (QuadJetThresh<0  || QuadJetThresh>20) QuadJetThresh=20;} // no overlap (v2!)
                    else if (trigNames.triggerName(i)=="HLT_QuadJet25U_v3") {if (QuadJetThresh<0  || QuadJetThresh>25) QuadJetThresh=25;}

		    else MultiJetTrigThis = false;  // none of the above has triggered

                    // check and set whether trigger for MultiJet dataset has fired
                    if (MultiJetTrigThis) MultiJetTrig = true; 
        
	          }
                }

                // put comments here

                // check JetMETTauMonitor triggers
                // beware: cannot expect any particular ordering !!!
                JetMETTauMonitorTrig = false;
                // ... to be treated ...
                METFwdTrig = false;

                for(unsigned i= 0; i<trigNames.size(); i++) { 
                  if (triggerResultsHandle_->accept(i)==1){

                    // check Jet triggers
                    // can occur exclusively on JetMETTauMonitor sample only, but can also occur on other samples if non-exclusive
                    //          --  have all been checked for real occurrence in JetMETTauMonitor sample :-)
                    //              the ones which are commented out without comment have been listed but do not occur 
                    bool JetMETTauMonitorTrigThis = true;
                    
                    // dijet triggers
                    if      (trigNames.triggerName(i)=="HLT_R010U_MR50U")   {if (DiJetThresh<0 || DiJetThresh>50) DiJetThresh=50;}
                    // single Jet triggers
                    // need to require run range cut for the following?
                    else if (trigNames.triggerName(i)=="HLT_L1Jet10U")      {if (JetThresh<0 || JetThresh>10) JetThresh=10;}
                    else if (trigNames.triggerName(i)=="HLT_L1Jet6U")       {if (JetThresh<0 || JetThresh>6) JetThresh=6;}
                    // HT based triggers 
                    else if (trigNames.triggerName(i)=="HLT_HT50U_v3")      {if (HTThresh<0  || HTThresh>50) HTThresh=50;}  
                    else if (trigNames.triggerName(i)=="HLT_HT50U_v1")      {if (HTThresh<0  || HTThresh>50) HTThresh=50;}  
                    else if (trigNames.triggerName(i)=="HLT_HT100U")        {if (HTThresh<0  || HTThresh>100) HTThresh=100;}    // overlap with Jet 
                    else if (trigNames.triggerName(i)=="HLT_HT120U")        {if (HTThresh<0  || HTThresh>120) HTThresh=120;}    // not in list, moved from Jet 
                    else if (trigNames.triggerName(i)=="HLT_L1ETT100")      {if (HTThresh<0  || HTThresh>105) HTThresh=105;}    // not in list, moved from JetMET
                    else if (trigNames.triggerName(i)=="HLT_L1ETT140_v1")   {if (HTThresh<0  || HTThresh>145) HTThresh=145;}  
                    // four-jet triggers (e.g. for hadronic top)
                    else if (trigNames.triggerName(i)=="HLT_QuadJet15U_v3") {if (QuadJetThresh<0  || QuadJetThresh>15) QuadJetThresh=15;}
                    else if (trigNames.triggerName(i)=="HLT_QuadJet15U_v2") {if (QuadJetThresh<0  || QuadJetThresh>15) QuadJetThresh=15;}
                    else if (trigNames.triggerName(i)=="HLT_QuadJet15U")    {if (QuadJetThresh<0  || QuadJetThresh>15) QuadJetThresh=15;}
                    // Missing ET triggers 
                    else if (trigNames.triggerName(i)=="HLT_L1MET20")       {if (METThresh<0  || METThresh>20) METThresh=20;}
                    else if (trigNames.triggerName(i)=="HLT_MET45_v3")      {if (METThresh<0  || METThresh>45) METThresh=45;}

		    else JetMETTauMonitorTrigThis = false;  // none of the above has triggered

                    // check and set whether trigger for JetMETTauMonitor dataset has fired
                    if (JetMETTauMonitorTrigThis) JetMETTauMonitorTrig = true; 
        
	          }
                }

                // put comments here

                // check BTau triggers
                // beware: cannot expect any particular ordering !!!
                BTauTrig = false;

                for(unsigned i= 0; i<trigNames.size(); i++) { 
                  if (triggerResultsHandle_->accept(i)==1){

                    // check BTau triggers
                    // can occur exclusively on BTau sample only, but can also occur on other samples if non-exclusive
                    //          --  have all been checked for real occurrence in BTau sample :-)
                    //              the ones which are commented out without comment have been listed but do not occur 
                    bool BTauTrigThis = true;
                    
                    // combined triggers    *** thresholds still need to be defined properly
                    if      (trigNames.triggerName(i)=="HLT_SingleIsoTau30_Trk5_v2")         {if (METThresh<-5) METThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_SingleIsoTau30_Trk5_L120or30")   {if (METThresh<-30) METThresh=-30;}
                    else if (trigNames.triggerName(i)=="HLT_SingleIsoTau30_Trk5_MET20")      {if (METThresh<-20) METThresh=-20;}
                    //else if (trigNames.triggerName(i)=="HLT_SingleIsoTau35_Trk15_MET25")     {if (METThresh<-25) METThresh=-25;}
                    //else if (trigNames.triggerName(i)=="HLT_SingleLooseIsoTau25_Trk5")       {if (METThresh<-5) METThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_SingleIsoTau20_Trk15_MET25_v4")  {if (METThresh<-25) METThresh=-25;}
                    else if (trigNames.triggerName(i)=="HLT_SingleIsoTau20_Trk15_MET25_v3")  {if (METThresh<-25) METThresh=-25;}
                    else if (trigNames.triggerName(i)=="HLT_SingleIsoTau20_Trk15_MET20")     {if (METThresh<-20) METThresh=-20;}
                    //else if (trigNames.triggerName(i)=="HLT_SingleIsoTau20_Trk5")            {if (METThresh<-5) METThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_SingleIsoTau20_Trk5_MET20")      {if (METThresh<-20) METThresh=-20;}
                    //else if (trigNames.triggerName(i)=="HLT_SingleIsoTau20_Trk5_MET25")      {if (METThresh<-25) METThresh=-25;}
                    //else if (trigNames.triggerName(i)=="HLT_SingleLooseIsoTau20")            {if (METThresh<-5) METThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleIsoTau15_OneLeg_Trk5_v4")  {if (METThresh<-5) METThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleIsoTau15_OneLeg_Trk5_v3")  {if (METThresh<-5) METThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleIsoTau15_OneLeg_Trk5")     {if (METThresh<-5) METThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleIsoTau15_Trk5_v4")         {if (METThresh<-5) METThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleIsoTau15_Trk5_v3")         {if (METThresh<-5) METThresh=-5;}
                    else if (trigNames.triggerName(i)=="HLT_DoubleIsoTau15_Trk5")            {if (METThresh<-5) METThresh=-5;}
                    //else if (trigNames.triggerName(i)=="HLT_DoubleLooseIsoTau15")            {if (METThresh<-15) METThresh=-15;}
                    // B tag dijet triggers
                    else if (trigNames.triggerName(i)=="HLT_BTagMu_DiJet30U_Mu5_v3") {if (BThresh<0  || BThresh>30) BThresh=30;}
                    else if (trigNames.triggerName(i)=="HLT_BTagMu_DiJet30U_v3")     {if (BThresh<0  || BThresh>30) BThresh=30;}
                    else if (trigNames.triggerName(i)=="HLT_BTagMu_DiJet20U_v3")     {if (BThresh<0  || BThresh>20) BThresh=20;}
                    else if (trigNames.triggerName(i)=="HLT_BTagMu_DiJet20U_v1")     {if (BThresh<0  || BThresh>20) BThresh=20;}
                    else if (trigNames.triggerName(i)=="HLT_BTagMu_DiJet20U_Mu5_v3") {if (BThresh<0  || BThresh>20) BThresh=20;}
                    else if (trigNames.triggerName(i)=="HLT_BTagMu_DiJet20U_Mu5_v1") {if (BThresh<0  || BThresh>20) BThresh=20;}
                    else if (trigNames.triggerName(i)=="HLT_BTagMu_DiJet10U_v3")     {if (BThresh<0  || BThresh>10) BThresh=10;}
                    else if (trigNames.triggerName(i)=="HLT_BTagMu_DiJet10U_v1")     {if (BThresh<0  || BThresh>10) BThresh=10;}
                    // B tag single jet trigger
                    else if (trigNames.triggerName(i)=="HLT_BTagMu_Jet20U")          {if (BThresh<0  || BThresh>20) BThresh=20;}
                    else if (trigNames.triggerName(i)=="HLT_BTagMu_Jet10U")          {if (BThresh<0  || BThresh>10) BThresh=10;}
                    // B tag inclusive impact parameter trigger (no muon)
                    //else if (trigNames.triggerName(i)=="HLT_BTagIP_Jet50U")          {if (BThresh<0  || BThresh>50) BThresh=50;}
                    
		    else BTauTrigThis = false;  // none of the above has triggered

                    // check and set whether trigger for BTau dataset has fired
                    if (BTauTrigThis) BTauTrig = true; 
        
	          }
                }


	        //h155->Fill(JetThresh);		// fill single jet trigger threshold flag
	        //h156->Fill(DiJetThresh);	// fill dijet trigger threshold flag
	        //h157->Fill(QuadJetThresh);	        // fill HT trigger threshold flag
	        //h158->Fill(HTThresh);	        // fill HT trigger threshold flag
	        //h159->Fill(BThresh);	        // fill B trigger threshold flag
	        //h160->Fill(METThresh);	        // fill B trigger threshold flag
 
                // debug  print 
		// std::cout<<"JetThresh "<<JetThresh<<" DiJetThresh "<<DiJetThresh<<" QuadJetThresh "<<QuadJetThresh<<" HTThresh "<<HTThresh<<" BThresh "<< BThresh<<std::endl;

		//  for the moment any positive triggers except missing ET are OK
                if ( JetThresh > -1 || DiJetThresh > -1 || QuadJetThresh >-1 || HTThresh>-1 || BThresh>-1) {
		  GoodJetTrig = true; 
                  return true;
                }
                else if ((Jetdataset) &&  
                         JetThresh == -199 && DiJetThresh == -199 && QuadJetThresh ==-199 && HTThresh ==-199) {
// activate this for debug
                  std::cout<<" ****** no jet trigger recognized ****** "<<std::endl;
                  for(unsigned i= 0; i<trigNames.size(); i++) {
                    // dump only accepted triggers 
                    if (triggerResultsHandle_->accept(i)==1){
                      std::cout<<" Trigger name "<<trigNames.triggerName(i)<<", Accepted = ";
                      std::cout<<triggerResultsHandle_->accept(i)<<std::endl;
	            }
                  }
#ifdef trigcheckabort
                  // abort the job if known to be jet data set
                  if (dataset == "Jet" && !JetTrig) exit(1);
#endif
                }
                else if ((MultiJetdataset) &&  
                         JetThresh == -199 && DiJetThresh == -199 && QuadJetThresh ==-199 && HTThresh ==-199) {
// activate this for debug
                  std::cout<<" ****** no MultiJet trigger recognized ****** "<<std::endl;
                  for(unsigned i= 0; i<trigNames.size(); i++) {
                    // dump only accepted triggers 
                    if (triggerResultsHandle_->accept(i)==1){
                      std::cout<<" Trigger name "<<trigNames.triggerName(i)<<", Accepted = ";
                      std::cout<<triggerResultsHandle_->accept(i)<<std::endl;
	            }
                  }
#ifdef trigcheckabort
                  // abort the job if known to be jet data set
                  if (dataset == "MultiJet" && !MultiJetTrig) exit(1);
#endif
                }
                else if ((JetMETTauMonitordataset) &&  
                         JetThresh == -199 && DiJetThresh == -199 && QuadJetThresh ==-199 && HTThresh ==-199 && METThresh == -199) {
// activate this for debug
                  std::cout<<" ****** no JETMETTauMonitor trigger recognized ****** "<<std::endl;
                  for(unsigned i= 0; i<trigNames.size(); i++) {
                    // dump only accepted triggers 
                    if (triggerResultsHandle_->accept(i)==1){
                      std::cout<<" Trigger name "<<trigNames.triggerName(i)<<", Accepted = ";
                      std::cout<<triggerResultsHandle_->accept(i)<<std::endl;
	            }
                  }
#ifdef trigcheckabort
                  // abort the job if known to be jet data set
                  if (dataset == "JetMETTauMonitor" && !JetMETTauMonitorTrig) exit(1);
#endif
                }
                else if ((BTaudataset) &&  
                         JetThresh == -199 && DiJetThresh == -199 && QuadJetThresh ==-199 && HTThresh ==-199 && BThresh == -199 && METThresh == -199) {
// activate this for debug
                  std::cout<<" ****** no BTau trigger recognized ****** "<<std::endl;
                  for(unsigned i= 0; i<trigNames.size(); i++) {
                    // dump only accepted triggers 
                    if (triggerResultsHandle_->accept(i)==1){
                      std::cout<<" Trigger name "<<trigNames.triggerName(i)<<", Accepted = ";
                      std::cout<<triggerResultsHandle_->accept(i)<<std::endl;
	            }
                  }
#ifdef trigcheckabort
                  // abort the job if known to be jet data set
                  if (dataset == "BTau" && !BTauTrig) exit(1);
#endif
                }

                return false;
}

